class LatencyTester
!!!3134597.java!!!	start() : void
        if (!Build.IS_DEBUGGABLE) {
            return;
        }

        IntentFilter filter = new IntentFilter();
        filter.addAction(ACTION_FINGERPRINT_WAKE);
        filter.addAction(ACTION_TURN_ON_SCREEN);
        mContext.registerReceiver(new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                String action = intent.getAction();
                if (ACTION_FINGERPRINT_WAKE.equals(action)) {
                    fakeWakeAndUnlock();
                } else if (ACTION_TURN_ON_SCREEN.equals(action)) {
                    fakeTurnOnScreen();
                }
            }
        }, filter);
!!!3134725.java!!!	fakeTurnOnScreen() : void
        PowerManager powerManager = mContext.getSystemService(PowerManager.class);
        if (LatencyTracker.isEnabled(mContext)) {
            LatencyTracker.getInstance(mContext).onActionStart(
                    LatencyTracker.ACTION_TURN_ON_SCREEN);
        }
        powerManager.wakeUp(SystemClock.uptimeMillis(), "android.policy:LATENCY_TESTS");
!!!3134853.java!!!	fakeWakeAndUnlock() : void
        FingerprintUnlockController fingerprintUnlockController = getComponent(StatusBar.class)
                .getFingerprintUnlockController();
        fingerprintUnlockController.onFingerprintAcquired();
        fingerprintUnlockController.onFingerprintAuthenticated(
                KeyguardUpdateMonitor.getCurrentUser());
