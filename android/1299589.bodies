class PageRange
!!!7801221.java!!!	PageRange(in start : int, in end : int)
        if (start < 0) {
            throw new IllegalArgumentException("start cannot be less than zero.");
        }
        if (end < 0) {
            throw new IllegalArgumentException("end cannot be less than zero.");
        }
        if (start > end) {
            throw new IllegalArgumentException("start must be lesser than end.");
        }
        mStart = start;
        mEnd = end;
!!!7801349.java!!!	PageRange(inout parcel : Parcel)
        this(parcel.readInt(), parcel.readInt());
!!!7801477.java!!!	getStart() : int
        return mStart;
!!!7801605.java!!!	getEnd() : int
        return mEnd;
!!!7801733.java!!!	contains(in pageIndex : int) : boolean
        return (pageIndex >= mStart) && (pageIndex <= mEnd);
!!!7801861.java!!!	getSize() : int
        return mEnd - mStart + 1;
!!!7801989.java!!!	describeContents() : int
        return 0;
!!!7802117.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeInt(mStart);
        parcel.writeInt(mEnd);
!!!7802245.java!!!	hashCode() : int
        final int prime = 31;
        int result = 1;
        result = prime * result + mEnd;
        result = prime * result + mStart;
        return result;
!!!7802373.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        PageRange other = (PageRange) obj;
        if (mEnd != other.mEnd) {
            return false;
        }
        if (mStart != other.mStart) {
            return false;
        }
        return true;
!!!7802501.java!!!	toString() : String
        if (mStart == 0 && mEnd == Integer.MAX_VALUE) {
            return "PageRange[<all pages>]";
        }
        StringBuilder builder = new StringBuilder();
        builder.append("PageRange[")
            .append(mStart)
            .append(" - ")
            .append(mEnd)
            .append("]");
        return builder.toString();
