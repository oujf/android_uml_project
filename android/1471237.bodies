class DigitalClock
!!!9398789.java!!!	DigitalClock(inout context : Context)
        super(context);
        initClock();
!!!9398917.java!!!	DigitalClock(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        initClock();
!!!9399045.java!!!	initClock() : void
        if (mCalendar == null) {
            mCalendar = Calendar.getInstance();
        }
!!!9399173.java!!!	onAttachedToWindow() : void
        mTickerStopped = false;
        super.onAttachedToWindow();

        mFormatChangeObserver = new FormatChangeObserver();
        getContext().getContentResolver().registerContentObserver(
                Settings.System.CONTENT_URI, true, mFormatChangeObserver);
        setFormat();

        mHandler = new Handler();

        /**
         * requests a tick on the next hard-second boundary
         */
        mTicker = new Runnable() {
            public void run() {
                if (mTickerStopped) return;
                mCalendar.setTimeInMillis(System.currentTimeMillis());
                setText(DateFormat.format(mFormat, mCalendar));
                invalidate();
                long now = SystemClock.uptimeMillis();
                long next = now + (1000 - now % 1000);
                mHandler.postAtTime(mTicker, next);
            }
        };
        mTicker.run();
!!!9399301.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();
        mTickerStopped = true;
        getContext().getContentResolver().unregisterContentObserver(
                mFormatChangeObserver);
!!!9399429.java!!!	setFormat() : void
        mFormat = DateFormat.getTimeFormatString(getContext());
!!!9399813.java!!!	getAccessibilityClassName() : CharSequence
        //noinspection deprecation
        return DigitalClock.class.getName();
