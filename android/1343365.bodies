class Builder
!!!7981189.java!!!	Builder(in type : int, inout requiredIds : AutofillId [[]])
            // TODO: add CTS unit tests (not integration) to assert the null cases
            mType = type;
            mRequiredIds = assertValid(requiredIds);
!!!7981317.java!!!	assertValid(inout ids : AutofillId [[]]) : AutofillId
            Preconditions.checkArgument(ids != null && ids.length > 0,
                    "must have at least one id: " + Arrays.toString(ids));
            for (int i = 0; i < ids.length; i++) {
                final AutofillId id = ids[i];
                Preconditions.checkArgument(id != null,
                        "cannot have null id: " + Arrays.toString(ids));
            }
            return ids;
!!!7981445.java!!!	setFlags(in flags : int) : SaveInfo::Builder
            throwIfDestroyed();

            mFlags = Preconditions.checkFlagsArgument(flags, FLAG_SAVE_ON_ALL_VIEWS_INVISIBLE);
            return this;
!!!7981573.java!!!	setOptionalIds(inout ids : AutofillId [[]]) : SaveInfo::Builder
            // TODO: add CTS unit tests (not integration) to assert the null cases
            throwIfDestroyed();
            mOptionalIds = assertValid(ids);
            return this;
!!!7981701.java!!!	setDescription(inout description : CharSequence) : SaveInfo::Builder
            throwIfDestroyed();
            mDescription = description;
            return this;
!!!7981829.java!!!	setNegativeAction(in style : int, inout listener : IntentSender) : SaveInfo::Builder
            throwIfDestroyed();
            if (style != NEGATIVE_BUTTON_STYLE_CANCEL
                    && style != NEGATIVE_BUTTON_STYLE_REJECT) {
                throw new IllegalArgumentException("Invalid style: " + style);
            }
            mNegativeButtonStyle = style;
            mNegativeActionListener = listener;
            return this;
!!!7981957.java!!!	build() : SaveInfo
            throwIfDestroyed();
            mDestroyed = true;
            return new SaveInfo(this);
!!!7982085.java!!!	throwIfDestroyed() : void
            if (mDestroyed) {
                throw new IllegalStateException("Already called #build()");
            }
