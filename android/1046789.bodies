class SharedLibraryInfo
!!!6321925.java!!!	SharedLibraryInfo(in name : String, in version : int, in type : int, inout declaringPackage : VersionedPackage, inout dependentPackages : List<VersionedPackage>)
        mName = name;
        mVersion = version;
        mType = type;
        mDeclaringPackage = declaringPackage;
        mDependentPackages = dependentPackages;
!!!6322053.java!!!	SharedLibraryInfo(inout parcel : Parcel)
        this(parcel.readString(), parcel.readInt(), parcel.readInt(),
                parcel.readParcelable(null), parcel.readArrayList(null));
!!!6322181.java!!!	getType() : int
        return mType;
!!!6322309.java!!!	getName() : String
        return mName;
!!!6322437.java!!!	getVersion() : int
        return mVersion;
!!!6322565.java!!!	isBuiltin() : boolean
        return mType == TYPE_BUILTIN;
!!!6322693.java!!!	isDynamic() : boolean
        return mType == TYPE_DYNAMIC;
!!!6322821.java!!!	isStatic() : boolean
        return mType == TYPE_STATIC;
!!!6322949.java!!!	getDeclaringPackage() : VersionedPackage
        return mDeclaringPackage;
!!!6323077.java!!!	getDependentPackages() : VersionedPackage
        if (mDependentPackages == null) {
            return Collections.emptyList();
        }
        return mDependentPackages;
!!!6323205.java!!!	describeContents() : int
        return 0;
!!!6323333.java!!!	toString() : String
        return "SharedLibraryInfo[name:" + mName + ", type:" + typeToString(mType)
                + ", version:" + mVersion + (!getDependentPackages().isEmpty()
                ? " has dependents" : "");
!!!6323461.java!!!	writeToParcel(inout parcel : Parcel, in flags : int) : void
        parcel.writeString(mName);
        parcel.writeInt(mVersion);
        parcel.writeInt(mType);
        parcel.writeParcelable(mDeclaringPackage, flags);
        parcel.writeList(mDependentPackages);
!!!6323589.java!!!	typeToString(in type : int) : String
        switch (type) {
            case TYPE_BUILTIN: {
                return "builtin";
            }
            case TYPE_DYNAMIC: {
                return "dynamic";
            }
            case TYPE_STATIC: {
                return "static";
            }
            default: {
                return "unknown";
            }
        }
