class BidiFormatter
!!!8147461.java!!!	getInstance() : BidiFormatter
        return getDefaultInstanceFromContext(isRtlLocale(Locale.getDefault()));
!!!8147589.java!!!	getInstance(inout rtlContext : boolean) : BidiFormatter
        return getDefaultInstanceFromContext(rtlContext);
!!!8147717.java!!!	getInstance(inout locale : Locale) : BidiFormatter
        return getDefaultInstanceFromContext(isRtlLocale(locale));
!!!8147845.java!!!	BidiFormatter(inout isRtlContext : boolean, in flags : int, inout heuristic : TextDirectionHeuristic)
        mIsRtlContext = isRtlContext;
        mFlags = flags;
        mDefaultTextDirectionHeuristic = heuristic;
!!!8147973.java!!!	isRtlContext() : boolean
        return mIsRtlContext;
!!!8148101.java!!!	getStereoReset() : boolean
        return (mFlags & FLAG_STEREO_RESET) != 0;
!!!8148229.java!!!	markAfter(inout str : CharSequence, inout heuristic : TextDirectionHeuristic) : String
        final boolean isRtl = heuristic.isRtl(str, 0, str.length());
        // getExitDir() is called only if needed (short-circuit).
        if (!mIsRtlContext && (isRtl || getExitDir(str) == DIR_RTL)) {
            return LRM_STRING;
        }
        if (mIsRtlContext && (!isRtl || getExitDir(str) == DIR_LTR)) {
            return RLM_STRING;
        }
        return EMPTY_STRING;
!!!8148357.java!!!	markBefore(inout str : CharSequence, inout heuristic : TextDirectionHeuristic) : String
        final boolean isRtl = heuristic.isRtl(str, 0, str.length());
        // getEntryDir() is called only if needed (short-circuit).
        if (!mIsRtlContext && (isRtl || getEntryDir(str) == DIR_RTL)) {
            return LRM_STRING;
        }
        if (mIsRtlContext && (!isRtl || getEntryDir(str) == DIR_LTR)) {
            return RLM_STRING;
        }
        return EMPTY_STRING;
!!!8148485.java!!!	isRtl(in str : String) : boolean
        return isRtl((CharSequence) str);
!!!8148613.java!!!	isRtl(inout str : CharSequence) : boolean
        return mDefaultTextDirectionHeuristic.isRtl(str, 0, str.length());
!!!8148741.java!!!	unicodeWrap(in str : String, inout heuristic : TextDirectionHeuristic, inout isolate : boolean) : String
        if (str == null) return null;
        return unicodeWrap((CharSequence) str, heuristic, isolate).toString();
!!!8148869.java!!!	unicodeWrap(inout str : CharSequence, inout heuristic : TextDirectionHeuristic, inout isolate : boolean) : CharSequence
        if (str == null) return null;
        final boolean isRtl = heuristic.isRtl(str, 0, str.length());
        SpannableStringBuilder result = new SpannableStringBuilder();
        if (getStereoReset() && isolate) {
            result.append(markBefore(str,
                    isRtl ? TextDirectionHeuristics.RTL : TextDirectionHeuristics.LTR));
        }
        if (isRtl != mIsRtlContext) {
            result.append(isRtl ? RLE : LRE);
            result.append(str);
            result.append(PDF);
        } else {
            result.append(str);
        }
        if (isolate) {
            result.append(markAfter(str,
                    isRtl ? TextDirectionHeuristics.RTL : TextDirectionHeuristics.LTR));
        }
        return result;
!!!8148997.java!!!	unicodeWrap(in str : String, inout heuristic : TextDirectionHeuristic) : String
        return unicodeWrap(str, heuristic, true /* isolate */);
!!!8149125.java!!!	unicodeWrap(inout str : CharSequence, inout heuristic : TextDirectionHeuristic) : CharSequence
        return unicodeWrap(str, heuristic, true /* isolate */);
!!!8149253.java!!!	unicodeWrap(in str : String, inout isolate : boolean) : String
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, isolate);
!!!8149381.java!!!	unicodeWrap(inout str : CharSequence, inout isolate : boolean) : CharSequence
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, isolate);
!!!8149509.java!!!	unicodeWrap(in str : String) : String
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, true /* isolate */);
!!!8149637.java!!!	unicodeWrap(inout str : CharSequence) : CharSequence
        return unicodeWrap(str, mDefaultTextDirectionHeuristic, true /* isolate */);
!!!8149765.java!!!	getDefaultInstanceFromContext(inout isRtlContext : boolean) : BidiFormatter
        return isRtlContext ? DEFAULT_RTL_INSTANCE : DEFAULT_LTR_INSTANCE;
!!!8149893.java!!!	isRtlLocale(inout locale : Locale) : boolean
        return (TextUtils.getLayoutDirectionFromLocale(locale) == View.LAYOUT_DIRECTION_RTL);
!!!8150021.java!!!	getExitDir(inout str : CharSequence) : int
        return new DirectionalityEstimator(str, false /* isHtml */).getExitDir();
!!!8150149.java!!!	getEntryDir(inout str : CharSequence) : int
        return new DirectionalityEstimator(str, false /* isHtml */).getEntryDir();
