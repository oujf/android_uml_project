class InputReaderConfiguration
!!!14861573.cpp!!!	getDisplayViewport(in viewportType : ViewportType, in uniqueDisplayId : String8, inout outViewport : DisplayViewport) : bool
    const DisplayViewport* viewport = NULL;
    if (viewportType == ViewportType::VIEWPORT_VIRTUAL && uniqueDisplayId != NULL) {
        for (DisplayViewport currentViewport : mVirtualDisplays) {
            if (currentViewport.uniqueId == *uniqueDisplayId) {
                viewport = &currentViewport;
                break;
            }
        }
    } else if (viewportType == ViewportType::VIEWPORT_EXTERNAL) {
        viewport = &mExternalDisplay;
    } else if (viewportType == ViewportType::VIEWPORT_INTERNAL) {
        viewport = &mInternalDisplay;
    }

    if (viewport != NULL && viewport->displayId >= 0) {
        *outViewport = *viewport;
        return true;
    }
    return false;
!!!14861701.cpp!!!	setPhysicalDisplayViewport(in viewportType : ViewportType, in viewport : DisplayViewport) : void
    if (viewportType == ViewportType::VIEWPORT_EXTERNAL) {
        mExternalDisplay = viewport;
    } else if (viewportType == ViewportType::VIEWPORT_INTERNAL) {
        mInternalDisplay = viewport;
    }
!!!14861829.cpp!!!	setVirtualDisplayViewports(in viewports : Vector<DisplayViewport>) : void
    mVirtualDisplays = viewports;
!!!14861957.cpp!!!	dump(inout dump : String8) : void
    dump.append(INDENT4 "ViewportInternal:\n");
    dumpViewport(dump, mInternalDisplay);
    dump.append(INDENT4 "ViewportExternal:\n");
    dumpViewport(dump, mExternalDisplay);
    dump.append(INDENT4 "ViewportVirtual:\n");
    for (const DisplayViewport& viewport : mVirtualDisplays) {
        dumpViewport(dump, viewport);
    }
!!!14862085.cpp!!!	dumpViewport(inout dump : String8, in viewport : DisplayViewport) : void
    dump.appendFormat(INDENT5 "Viewport: displayId=%d, orientation=%d, uniqueId='%s', "
            "logicalFrame=[%d, %d, %d, %d], "
            "physicalFrame=[%d, %d, %d, %d], "
            "deviceSize=[%d, %d]\n",
            viewport.displayId, viewport.orientation, viewport.uniqueId.c_str(),
            viewport.logicalLeft, viewport.logicalTop,
            viewport.logicalRight, viewport.logicalBottom,
            viewport.physicalLeft, viewport.physicalTop,
            viewport.physicalRight, viewport.physicalBottom,
            viewport.deviceWidth, viewport.deviceHeight);
