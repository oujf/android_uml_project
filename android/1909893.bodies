class Proxy
!!!13856645.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13856773.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13856901.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13857029.java!!!	addClient(inout client : IAutoFillManagerClient, in userId : int) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_addClient, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13857157.java!!!	startSession(inout activityToken : android.os.IBinder, inout appCallback : android.os.IBinder, inout autoFillId : android.view.autofill.AutofillId, inout bounds : android.graphics.Rect, inout value : android.view.autofill.AutofillValue, in userId : int, inout hasCallback : boolean, in flags : int, inout packageName : java.lang.String) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(activityToken);
_data.writeStrongBinder(appCallback);
if ((autoFillId!=null)) {
_data.writeInt(1);
autoFillId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((bounds!=null)) {
_data.writeInt(1);
bounds.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((value!=null)) {
_data.writeInt(1);
value.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
_data.writeInt(((hasCallback)?(1):(0)));
_data.writeInt(flags);
_data.writeString(packageName);
mRemote.transact(Stub.TRANSACTION_startSession, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13857285.java!!!	getFillEventHistory() : android.service.autofill.FillEventHistory
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.service.autofill.FillEventHistory _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getFillEventHistory, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.service.autofill.FillEventHistory.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13857413.java!!!	restoreSession(in sessionId : int, inout activityToken : android.os.IBinder, inout appCallback : android.os.IBinder) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeStrongBinder(activityToken);
_data.writeStrongBinder(appCallback);
mRemote.transact(Stub.TRANSACTION_restoreSession, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13857541.java!!!	updateSession(in sessionId : int, inout id : android.view.autofill.AutofillId, inout bounds : android.graphics.Rect, inout value : android.view.autofill.AutofillValue, in action : int, in flags : int, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
if ((id!=null)) {
_data.writeInt(1);
id.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((bounds!=null)) {
_data.writeInt(1);
bounds.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((value!=null)) {
_data.writeInt(1);
value.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(action);
_data.writeInt(flags);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_updateSession, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13857669.java!!!	updateOrRestartSession(inout activityToken : android.os.IBinder, inout appCallback : android.os.IBinder, inout autoFillId : android.view.autofill.AutofillId, inout bounds : android.graphics.Rect, inout value : android.view.autofill.AutofillValue, in userId : int, inout hasCallback : boolean, in flags : int, inout packageName : java.lang.String, in sessionId : int, in action : int) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(activityToken);
_data.writeStrongBinder(appCallback);
if ((autoFillId!=null)) {
_data.writeInt(1);
autoFillId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((bounds!=null)) {
_data.writeInt(1);
bounds.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((value!=null)) {
_data.writeInt(1);
value.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(userId);
_data.writeInt(((hasCallback)?(1):(0)));
_data.writeInt(flags);
_data.writeString(packageName);
_data.writeInt(sessionId);
_data.writeInt(action);
mRemote.transact(Stub.TRANSACTION_updateOrRestartSession, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13857797.java!!!	finishSession(in sessionId : int, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_finishSession, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13857925.java!!!	cancelSession(in sessionId : int, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_cancelSession, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13858053.java!!!	setAuthenticationResult(inout data : android.os.Bundle, in sessionId : int, in authenticationId : int, in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((data!=null)) {
_data.writeInt(1);
data.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(sessionId);
_data.writeInt(authenticationId);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_setAuthenticationResult, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13858181.java!!!	setHasCallback(in sessionId : int, in userId : int, inout hasIt : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeInt(userId);
_data.writeInt(((hasIt)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_setHasCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13858309.java!!!	disableOwnedAutofillServices(in userId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_disableOwnedAutofillServices, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13858437.java!!!	isServiceSupported(in userId : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
mRemote.transact(Stub.TRANSACTION_isServiceSupported, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13858565.java!!!	isServiceEnabled(in userId : int, inout packageName : java.lang.String) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(userId);
_data.writeString(packageName);
mRemote.transact(Stub.TRANSACTION_isServiceEnabled, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
