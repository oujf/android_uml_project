class TokenBucket
!!!10156805.java!!!	TokenBucket(in deltaMs : int, in capacity : int, in tokens : int)
        mFillDelta = checkArgumentPositive(deltaMs, "deltaMs must be strictly positive");
        mCapacity = checkArgumentPositive(capacity, "capacity must be strictly positive");
        mAvailable = Math.min(checkArgumentNonnegative(tokens), mCapacity);
        mLastFill = scaledTime();
!!!10156933.java!!!	TokenBucket(in deltaMs : int, in capacity : int)
        this(deltaMs, capacity, capacity);
!!!10157061.java!!!	reset(in tokens : int) : void
        checkArgumentNonnegative(tokens);
        mAvailable = Math.min(tokens, mCapacity);
        mLastFill = scaledTime();
!!!10157189.java!!!	capacity() : int
        return mCapacity;
!!!10157317.java!!!	available() : int
        fill();
        return mAvailable;
!!!10157445.java!!!	has() : boolean
        fill();
        return mAvailable > 0;
!!!10157573.java!!!	get() : boolean
        return (get(1) == 1);
!!!10157701.java!!!	get(in n : int) : int
        fill();
        if (n <= 0) {
            return 0;
        }
        if (n > mAvailable) {
            int got = mAvailable;
            mAvailable = 0;
            return got;
        }
        mAvailable -= n;
        return n;
!!!10157829.java!!!	fill() : void
        final long now = scaledTime();
        final int diff = (int) (now - mLastFill);
        mAvailable = Math.min(mCapacity, mAvailable + diff);
        mLastFill = now;
!!!10157957.java!!!	scaledTime() : long
        return SystemClock.elapsedRealtime() / mFillDelta;
