class AAudioStreamRequest
!!!662917.cpp!!!	writeToParcel(inout parcel : Parcel) : status_t
    status_t status = parcel->writeInt32((int32_t) mUserId);
    if (status != NO_ERROR) goto error;
    status = parcel->writeInt32((int32_t) mProcessId);
    if (status != NO_ERROR) goto error;
    status = parcel->writeInt32((int32_t) mDirection);
    if (status != NO_ERROR) goto error;

    status = parcel->writeBool(mSharingModeMatchRequired);
    if (status != NO_ERROR) goto error;

    status = mConfiguration.writeToParcel(parcel);
    if (status != NO_ERROR) goto error;
    return NO_ERROR;

error:
    ALOGE("AAudioStreamRequest.writeToParcel(): write failed = %d", status);
    return status;
!!!663045.cpp!!!	readFromParcel(in parcel : Parcel) : status_t
    int32_t temp;
    status_t status = parcel->readInt32(&temp);
    if (status != NO_ERROR) goto error;
    mUserId = (uid_t) temp;

    status = parcel->readInt32(&temp);
    if (status != NO_ERROR) goto error;
    mProcessId = (pid_t) temp;

    status = parcel->readInt32(&temp);
    if (status != NO_ERROR) goto error;
    mDirection = (aaudio_direction_t) temp;

    status = parcel->readBool(&mSharingModeMatchRequired);
    if (status != NO_ERROR) goto error;

    status = mConfiguration.readFromParcel(parcel);
    if (status != NO_ERROR) goto error;
    return NO_ERROR;

error:
    ALOGE("AAudioStreamRequest.readFromParcel(): read failed = %d", status);
    return status;
!!!663173.cpp!!!	validate() : aaudio_result_t
    return mConfiguration.validate();
!!!663301.cpp!!!	dump() : void
    ALOGD("AAudioStreamRequest mUserId    = %d", mUserId);
    ALOGD("AAudioStreamRequest mProcessId = %d", mProcessId);
    ALOGD("AAudioStreamRequest mDirection = %d", mDirection);
    mConfiguration.dump();
