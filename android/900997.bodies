class LeakDetector
!!!4255365.java!!!	LeakDetector(inout trackedCollections : TrackedCollections, inout trackedGarbage : TrackedGarbage, inout trackedObjects : TrackedObjects)
        mTrackedCollections = trackedCollections;
        mTrackedGarbage = trackedGarbage;
        mTrackedObjects = trackedObjects;
!!!4255493.java!!!	trackInstance(inout object : T) : void
        if (mTrackedObjects != null) {
            mTrackedObjects.track(object);
        }
!!!4255621.java!!!	trackCollection(inout collection : Collection<T>, in tag : String) : void
        if (mTrackedCollections != null) {
            mTrackedCollections.track(collection, tag);
        }
!!!4255749.java!!!	trackGarbage(inout o : Object) : void
        if (mTrackedGarbage != null) {
            mTrackedGarbage.track(o);
        }
!!!4255877.java!!!	getTrackedGarbage() : TrackedGarbage
        return mTrackedGarbage;
!!!4256005.java!!!	dump(inout df : FileDescriptor, inout w : PrintWriter, inout args : String [[]]) : void
        IndentingPrintWriter pw = new IndentingPrintWriter(w, "  ");

        pw.println("SYSUI LEAK DETECTOR");
        pw.increaseIndent();

        if (mTrackedCollections != null && mTrackedGarbage != null) {
            pw.println("TrackedCollections:");
            pw.increaseIndent();
            mTrackedCollections.dump(pw, (col) -> !TrackedObjects.isTrackedObject(col));
            pw.decreaseIndent();
            pw.println();

            pw.println("TrackedObjects:");
            pw.increaseIndent();
            mTrackedCollections.dump(pw, TrackedObjects::isTrackedObject);
            pw.decreaseIndent();
            pw.println();

            pw.print("TrackedGarbage:");
            pw.increaseIndent();
            mTrackedGarbage.dump(pw);
            pw.decreaseIndent();
        } else {
            pw.println("disabled");
        }
        pw.decreaseIndent();
        pw.println();
!!!4256133.java!!!	create() : LeakDetector
        if (ENABLED) {
            TrackedCollections collections = new TrackedCollections();
            return new LeakDetector(collections, new TrackedGarbage(collections),
                    new TrackedObjects(collections));
        } else {
            return new LeakDetector(null, null, null);
        }
