class HysteresisLevels
!!!11498885.java!!!	HysteresisLevels(inout brightLevels : int [[]], inout darkLevels : int [[]], inout luxLevels : int [[]])
        if (brightLevels.length != darkLevels.length || darkLevels.length != luxLevels.length + 1) {
            throw new IllegalArgumentException("Mismatch between hysteresis array lengths.");
        }
        mBrightLevels = setArrayFormat(brightLevels, 1000.0f);
        mDarkLevels = setArrayFormat(darkLevels, 1000.0f);
        mLuxLevels = setArrayFormat(luxLevels, 1.0f);
!!!11499013.java!!!	getBrighteningThreshold(in lux : float) : float
        float brightConstant = getReferenceLevel(lux, mBrightLevels);
        float brightThreshold = lux * (1.0f + brightConstant);
        if (DEBUG) {
            Slog.d(TAG, "bright hysteresis constant=: " + brightConstant + ", threshold="
                + brightThreshold + ", lux=" + lux);
        }
        return brightThreshold;
!!!11499141.java!!!	getDarkeningThreshold(in lux : float) : float
        float darkConstant = getReferenceLevel(lux, mDarkLevels);
        float darkThreshold = lux * (1.0f - darkConstant);
        if (DEBUG) {
            Slog.d(TAG, "dark hysteresis constant=: " + darkConstant + ", threshold="
                + darkThreshold + ", lux=" + lux);
        }
        return darkThreshold;
!!!11499269.java!!!	getReferenceLevel(in lux : float, inout referenceLevels : float [[]]) : float
        int index = 0;
        while (mLuxLevels.length > index && lux >= mLuxLevels[index]) {
            ++index;
        }
        return referenceLevels[index];
!!!11499397.java!!!	setArrayFormat(inout configArray : int [[]], in divideFactor : float) : float
        float[] levelArray = new float[configArray.length];
        for (int index = 0; levelArray.length > index; ++index) {
            levelArray[index] = (float)configArray[index] / divideFactor;
        }
        return levelArray;
