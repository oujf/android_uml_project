class NetworkFactory
!!!7172229.java!!!	NetworkFactory(inout looper : Looper, inout context : Context, in logTag : String, inout filter : NetworkCapabilities)
        super(looper);
        LOG_TAG = logTag;
        mContext = context;
        mCapabilityFilter = filter;
!!!7172357.java!!!	register() : void
        if (DBG) log("Registering NetworkFactory");
        if (mMessenger == null) {
            mMessenger = new Messenger(this);
            ConnectivityManager.from(mContext).registerNetworkFactory(mMessenger, LOG_TAG);
        }
!!!7172485.java!!!	unregister() : void
        if (DBG) log("Unregistering NetworkFactory");
        if (mMessenger != null) {
            ConnectivityManager.from(mContext).unregisterNetworkFactory(mMessenger);
            mMessenger = null;
        }
!!!7172613.java!!!	handleMessage(inout msg : Message) : void
        switch (msg.what) {
            case CMD_REQUEST_NETWORK: {
                handleAddRequest((NetworkRequest)msg.obj, msg.arg1);
                break;
            }
            case CMD_CANCEL_REQUEST: {
                handleRemoveRequest((NetworkRequest) msg.obj);
                break;
            }
            case CMD_SET_SCORE: {
                handleSetScore(msg.arg1);
                break;
            }
            case CMD_SET_FILTER: {
                handleSetFilter((NetworkCapabilities) msg.obj);
                break;
            }
        }
!!!7172997.java!!!	handleAddRequest(inout request : NetworkRequest, in score : int) : void
        NetworkRequestInfo n = mNetworkRequests.get(request.requestId);
        if (n == null) {
            if (DBG) log("got request " + request + " with score " + score);
            n = new NetworkRequestInfo(request, score);
            mNetworkRequests.put(n.request.requestId, n);
        } else {
            if (VDBG) log("new score " + score + " for exisiting request " + request);
            n.score = score;
        }
        if (VDBG) log("  my score=" + mScore + ", my filter=" + mCapabilityFilter);

        evalRequest(n);
!!!7173125.java!!!	handleRemoveRequest(inout request : NetworkRequest) : void
        NetworkRequestInfo n = mNetworkRequests.get(request.requestId);
        if (n != null) {
            mNetworkRequests.remove(request.requestId);
            if (n.requested) releaseNetworkFor(n.request);
        }
!!!7173253.java!!!	handleSetScore(in score : int) : void
        mScore = score;
        evalRequests();
!!!7173381.java!!!	handleSetFilter(inout netCap : NetworkCapabilities) : void
        mCapabilityFilter = netCap;
        evalRequests();
!!!7173509.java!!!	acceptRequest(inout request : NetworkRequest, in score : int) : boolean
        return true;
!!!7173637.java!!!	evalRequest(inout n : NetworkFactory::NetworkRequestInfo) : void
        if (VDBG) log("evalRequest");
        if (n.requested == false && n.score < mScore &&
                n.request.networkCapabilities.satisfiedByNetworkCapabilities(
                mCapabilityFilter) && acceptRequest(n.request, n.score)) {
            if (VDBG) log("  needNetworkFor");
            needNetworkFor(n.request, n.score);
            n.requested = true;
        } else if (n.requested == true &&
                (n.score > mScore || n.request.networkCapabilities.satisfiedByNetworkCapabilities(
                mCapabilityFilter) == false || acceptRequest(n.request, n.score) == false)) {
            if (VDBG) log("  releaseNetworkFor");
            releaseNetworkFor(n.request);
            n.requested = false;
        } else {
            if (VDBG) log("  done");
        }
!!!7173765.java!!!	evalRequests() : void
        for (int i = 0; i < mNetworkRequests.size(); i++) {
            NetworkRequestInfo n = mNetworkRequests.valueAt(i);

            evalRequest(n);
        }
!!!7174149.java!!!	needNetworkFor(inout networkRequest : NetworkRequest, in score : int) : void
        if (++mRefCount == 1) startNetwork();
!!!7174277.java!!!	releaseNetworkFor(inout networkRequest : NetworkRequest) : void
        if (--mRefCount == 0) stopNetwork();
!!!7174405.java!!!	addNetworkRequest(inout networkRequest : NetworkRequest, in score : int) : void
        sendMessage(obtainMessage(CMD_REQUEST_NETWORK,
                new NetworkRequestInfo(networkRequest, score)));
!!!7174533.java!!!	removeNetworkRequest(inout networkRequest : NetworkRequest) : void
        sendMessage(obtainMessage(CMD_CANCEL_REQUEST, networkRequest));
!!!7174661.java!!!	setScoreFilter(in score : int) : void
        sendMessage(obtainMessage(CMD_SET_SCORE, score, 0));
!!!7174789.java!!!	setCapabilityFilter(inout netCap : NetworkCapabilities) : void
        sendMessage(obtainMessage(CMD_SET_FILTER, new NetworkCapabilities(netCap)));
!!!7174917.java!!!	getRequestCount() : int
        return mNetworkRequests.size();
!!!7175045.java!!!	log(in s : String) : void
        Log.d(LOG_TAG, s);
!!!7175173.java!!!	dump(inout fd : FileDescriptor, inout writer : PrintWriter, inout args : String [[]]) : void
        final IndentingPrintWriter pw = new IndentingPrintWriter(writer, "  ");
        pw.println(toString());
        pw.increaseIndent();
        for (int i = 0; i < mNetworkRequests.size(); i++) {
            pw.println(mNetworkRequests.valueAt(i));
        }
        pw.decreaseIndent();
!!!7175301.java!!!	toString() : String
        StringBuilder sb = new StringBuilder("{").append(LOG_TAG).append(" - ScoreFilter=").
                append(mScore).append(", Filter=").append(mCapabilityFilter).append(", requests=").
                append(mNetworkRequests.size()).append(", refCount=").append(mRefCount).
                append("}");
        return sb.toString();
