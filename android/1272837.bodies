class Environment
!!!7450757.java!!!	initForCurrentUser() : void
        final int userId = UserHandle.myUserId();
        sCurrentUser = new UserEnvironment(userId);
!!!7452421.java!!!	getRootDirectory() : File
        return DIR_ANDROID_ROOT;
!!!7452549.java!!!	getStorageDirectory() : File
        return DIR_ANDROID_STORAGE;
!!!7452677.java!!!	getOemDirectory() : File
        return DIR_OEM_ROOT;
!!!7452805.java!!!	getOdmDirectory() : File
        return DIR_ODM_ROOT;
!!!7452933.java!!!	getVendorDirectory() : File
        return DIR_VENDOR_ROOT;
!!!7453061.java!!!	getUserSystemDirectory(in userId : int) : File
        return new File(new File(getDataSystemDirectory(), "users"), Integer.toString(userId));
!!!7453189.java!!!	getUserConfigDirectory(in userId : int) : File
        return new File(new File(new File(
                getDataDirectory(), "misc"), "user"), Integer.toString(userId));
!!!7453317.java!!!	getDataDirectory() : File
        return DIR_ANDROID_DATA;
!!!7453445.java!!!	getDataDirectory(in volumeUuid : String) : File
        if (TextUtils.isEmpty(volumeUuid)) {
            return DIR_ANDROID_DATA;
        } else {
            return new File("/mnt/expand/" + volumeUuid);
        }
!!!7453573.java!!!	getExpandDirectory() : File
        return DIR_ANDROID_EXPAND;
!!!7453701.java!!!	getDataSystemDirectory() : File
        return new File(getDataDirectory(), "system");
!!!7453829.java!!!	getDataSystemDeDirectory() : File
        return buildPath(getDataDirectory(), "system_de");
!!!7453957.java!!!	getDataSystemCeDirectory() : File
        return buildPath(getDataDirectory(), "system_ce");
!!!7454085.java!!!	getDataSystemCeDirectory(in userId : int) : File
        return buildPath(getDataDirectory(), "system_ce", String.valueOf(userId));
!!!7454213.java!!!	getDataSystemDeDirectory(in userId : int) : File
        return buildPath(getDataDirectory(), "system_de", String.valueOf(userId));
!!!7454341.java!!!	getDataMiscDirectory() : File
        return new File(getDataDirectory(), "misc");
!!!7454469.java!!!	getDataMiscCeDirectory() : File
        return buildPath(getDataDirectory(), "misc_ce");
!!!7454597.java!!!	getDataMiscCeDirectory(in userId : int) : File
        return buildPath(getDataDirectory(), "misc_ce", String.valueOf(userId));
!!!7454725.java!!!	getDataMiscDeDirectory(in userId : int) : File
        return buildPath(getDataDirectory(), "misc_de", String.valueOf(userId));
!!!7454853.java!!!	getDataProfilesDeDirectory(in userId : int) : File
        return buildPath(getDataDirectory(), "misc", "profiles", "cur", String.valueOf(userId));
!!!7454981.java!!!	getReferenceProfile(in packageName : String) : File
        return buildPath(getDataDirectory(), "misc", "profiles", "ref", packageName);
!!!7455109.java!!!	getDataProfilesDePackageDirectory(in userId : int, in packageName : String) : File
        return buildPath(getDataProfilesDeDirectory(userId), packageName);
!!!7455237.java!!!	getDataAppDirectory(in volumeUuid : String) : File
        return new File(getDataDirectory(volumeUuid), "app");
!!!7455365.java!!!	getDataUserCeDirectory(in volumeUuid : String) : File
        return new File(getDataDirectory(volumeUuid), "user");
!!!7455493.java!!!	getDataUserCeDirectory(in volumeUuid : String, in userId : int) : File
        return new File(getDataUserCeDirectory(volumeUuid), String.valueOf(userId));
!!!7455621.java!!!	getDataUserCePackageDirectory(in volumeUuid : String, in userId : int, in packageName : String) : File
        // TODO: keep consistent with installd
        return new File(getDataUserCeDirectory(volumeUuid, userId), packageName);
!!!7455749.java!!!	getDataUserDeDirectory(in volumeUuid : String) : File
        return new File(getDataDirectory(volumeUuid), "user_de");
!!!7455877.java!!!	getDataUserDeDirectory(in volumeUuid : String, in userId : int) : File
        return new File(getDataUserDeDirectory(volumeUuid), String.valueOf(userId));
!!!7456005.java!!!	getDataUserDePackageDirectory(in volumeUuid : String, in userId : int, in packageName : String) : File
        // TODO: keep consistent with installd
        return new File(getDataUserDeDirectory(volumeUuid, userId), packageName);
!!!7456133.java!!!	getDataPreloadsDirectory() : File
        return new File(getDataDirectory(), "preloads");
!!!7456261.java!!!	getDataPreloadsDemoDirectory() : File
        return new File(getDataPreloadsDirectory(), "demo");
!!!7456389.java!!!	getDataPreloadsAppsDirectory() : File
        return new File(getDataPreloadsDirectory(), "apps");
!!!7456517.java!!!	getDataPreloadsMediaDirectory() : File
        return new File(getDataPreloadsDirectory(), "media");
!!!7456645.java!!!	getDataPreloadsFileCacheDirectory(in packageName : String) : File
        return new File(getDataPreloadsFileCacheDirectory(), packageName);
!!!7456773.java!!!	getDataPreloadsFileCacheDirectory() : File
        return new File(getDataPreloadsDirectory(), "file_cache");
!!!7456901.java!!!	getExternalStorageDirectory() : File
        throwIfUserRequired();
        return sCurrentUser.getExternalDirs()[0];
!!!7457029.java!!!	getLegacyExternalStorageDirectory() : File
        return new File(System.getenv(ENV_EXTERNAL_STORAGE));
!!!7457157.java!!!	getLegacyExternalStorageObbDirectory() : File
        return buildPath(getLegacyExternalStorageDirectory(), DIR_ANDROID, DIR_OBB);
!!!7457285.java!!!	isStandardDirectory(in dir : String) : boolean
        for (String valid : STANDARD_DIRECTORIES) {
            if (valid.equals(dir)) {
                return true;
            }
        }
        return false;
!!!7457413.java!!!	getExternalStoragePublicDirectory(in type : String) : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStoragePublicDirs(type)[0];
!!!7457541.java!!!	buildExternalStorageAndroidDataDirs() : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStorageAndroidDataDirs();
!!!7457669.java!!!	buildExternalStorageAppDataDirs(in packageName : String) : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStorageAppDataDirs(packageName);
!!!7457797.java!!!	buildExternalStorageAppMediaDirs(in packageName : String) : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStorageAppMediaDirs(packageName);
!!!7457925.java!!!	buildExternalStorageAppObbDirs(in packageName : String) : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStorageAppObbDirs(packageName);
!!!7458053.java!!!	buildExternalStorageAppFilesDirs(in packageName : String) : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStorageAppFilesDirs(packageName);
!!!7458181.java!!!	buildExternalStorageAppCacheDirs(in packageName : String) : File
        throwIfUserRequired();
        return sCurrentUser.buildExternalStorageAppCacheDirs(packageName);
!!!7458309.java!!!	getDownloadCacheDirectory() : File
        return DIR_DOWNLOAD_CACHE;
!!!7458437.java!!!	getExternalStorageState() : String
        final File externalDir = sCurrentUser.getExternalDirs()[0];
        return getExternalStorageState(externalDir);
!!!7458565.java!!!	getStorageState(inout path : File) : String
        return getExternalStorageState(path);
!!!7458693.java!!!	getExternalStorageState(inout path : File) : String
        final StorageVolume volume = StorageManager.getStorageVolume(path, UserHandle.myUserId());
        if (volume != null) {
            return volume.getState();
        } else {
            return MEDIA_UNKNOWN;
        }
!!!7458821.java!!!	isExternalStorageRemovable() : boolean
        if (isStorageDisabled()) return false;
        final File externalDir = sCurrentUser.getExternalDirs()[0];
        return isExternalStorageRemovable(externalDir);
!!!7458949.java!!!	isExternalStorageRemovable(inout path : File) : boolean
        final StorageVolume volume = StorageManager.getStorageVolume(path, UserHandle.myUserId());
        if (volume != null) {
            return volume.isRemovable();
        } else {
            throw new IllegalArgumentException("Failed to find storage device at " + path);
        }
!!!7459077.java!!!	isExternalStorageEmulated() : boolean
        if (isStorageDisabled()) return false;
        final File externalDir = sCurrentUser.getExternalDirs()[0];
        return isExternalStorageEmulated(externalDir);
!!!7459205.java!!!	isExternalStorageEmulated(inout path : File) : boolean
        final StorageVolume volume = StorageManager.getStorageVolume(path, UserHandle.myUserId());
        if (volume != null) {
            return volume.isEmulated();
        } else {
            throw new IllegalArgumentException("Failed to find storage device at " + path);
        }
!!!7459333.java!!!	getDirectory(in variableName : String, in defaultPath : String) : File
        String path = System.getenv(variableName);
        return path == null ? new File(defaultPath) : new File(path);
!!!7459461.java!!!	setUserRequired(inout userRequired : boolean) : void
        sUserRequired = userRequired;
!!!7459589.java!!!	throwIfUserRequired() : void
        if (sUserRequired) {
            Log.wtf(TAG, "Path requests must specify a user by using UserEnvironment",
                    new Throwable());
        }
!!!7459717.java!!!	buildPaths(inout base : File [[]], inout  : String...segments) : File
        File[] result = new File[base.length];
        for (int i = 0; i < base.length; i++) {
            result[i] = buildPath(base[i], segments);
        }
        return result;
!!!7459845.java!!!	buildPath(inout base : File, inout  : String...segments) : File
        File cur = base;
        for (String segment : segments) {
            if (cur == null) {
                cur = new File(segment);
            } else {
                cur = new File(cur, segment);
            }
        }
        return cur;
!!!7459973.java!!!	isStorageDisabled() : boolean
        return SystemProperties.getBoolean("config.disable_storage", false);
!!!7460101.java!!!	maybeTranslateEmulatedPathToInternal(inout path : File) : File
        return StorageManager.maybeTranslateEmulatedPathToInternal(path);
