class Builder
!!!6081285.java!!!	setNamePattern(inout regex : Pattern) : BluetoothLeDeviceFilter::Builder
            checkNotUsed();
            mNamePattern = regex;
            return this;
!!!6081413.java!!!	setScanFilter(inout scanFilter : ScanFilter) : BluetoothLeDeviceFilter::Builder
            checkNotUsed();
            mScanFilter = scanFilter;
            return this;
!!!6081541.java!!!	setRawDataFilter(inout rawDataFilter : byte [[]], inout rawDataFilterMask : byte [[]]) : BluetoothLeDeviceFilter::Builder
            checkNotUsed();
            Preconditions.checkNotNull(rawDataFilter);
            checkArgument(rawDataFilterMask == null ||
                    rawDataFilter.length == rawDataFilterMask.length,
                    "Mask and filter should be the same length");
            mRawDataFilter = rawDataFilter;
            mRawDataFilterMask = rawDataFilterMask;
            return this;
!!!6081669.java!!!	setRenameFromBytes(in prefix : String, in suffix : String, in bytesFrom : int, in bytesLength : int, inout byteOrder : ByteOrder) : BluetoothLeDeviceFilter::Builder
            checkRenameNotSet();
            checkRangeNotEmpty(bytesLength);
            mRenameBytesFrom = bytesFrom;
            mRenameBytesLength = bytesLength;
            mRenameBytesReverseOrder = byteOrder == ByteOrder.LITTLE_ENDIAN;
            return setRename(prefix, suffix);
!!!6081797.java!!!	setRenameFromName(in prefix : String, in suffix : String, in nameFrom : int, in nameLength : int) : BluetoothLeDeviceFilter::Builder
            checkRenameNotSet();
            checkRangeNotEmpty(nameLength);
            mRenameNameFrom = nameFrom;
            mRenameNameLength = nameLength;
            mRenameBytesReverseOrder = false;
            return setRename(prefix, suffix);
!!!6081925.java!!!	checkRenameNotSet() : void
            checkState(mRenamePrefix == null, "Renaming rule can only be set once");
!!!6082053.java!!!	checkRangeNotEmpty(in length : int) : void
            checkArgument(length > 0, "Range must be non-empty");
!!!6082181.java!!!	setRename(in prefix : String, in suffix : String) : BluetoothLeDeviceFilter::Builder
            checkNotUsed();
            checkArgument(TextUtils.length(prefix) <= getRenamePrefixLengthLimit(),
                    "Prefix is too long");
            mRenamePrefix = prefix;
            mRenameSuffix = suffix;
            return this;
!!!6082309.java!!!	build() : BluetoothLeDeviceFilter
            markUsed();
            return new BluetoothLeDeviceFilter(mNamePattern, mScanFilter,
                    mRawDataFilter, mRawDataFilterMask,
                    mRenamePrefix, mRenameSuffix,
                    mRenameBytesFrom, mRenameBytesLength,
                    mRenameNameFrom, mRenameNameLength,
                    mRenameBytesReverseOrder);
