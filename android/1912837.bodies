class Proxy
!!!13900165.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13900293.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13900421.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13900549.java!!!	copyPackageToContainer(inout packagePath : java.lang.String, inout containerId : java.lang.String, inout key : java.lang.String, inout isExternal : boolean, inout isForwardLocked : boolean, inout abiOverride : java.lang.String) : java.lang.String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.lang.String _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packagePath);
_data.writeString(containerId);
_data.writeString(key);
_data.writeInt(((isExternal)?(1):(0)));
_data.writeInt(((isForwardLocked)?(1):(0)));
_data.writeString(abiOverride);
mRemote.transact(Stub.TRANSACTION_copyPackageToContainer, _data, _reply, 0);
_reply.readException();
_result = _reply.readString();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13900677.java!!!	copyPackage(inout packagePath : java.lang.String, inout target : IParcelFileDescriptorFactory) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packagePath);
_data.writeStrongBinder((((target!=null))?(target.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_copyPackage, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13900805.java!!!	getMinimalPackageInfo(inout packagePath : java.lang.String, in flags : int, inout abiOverride : java.lang.String) : android.content.pm.PackageInfoLite
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.content.pm.PackageInfoLite _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packagePath);
_data.writeInt(flags);
_data.writeString(abiOverride);
mRemote.transact(Stub.TRANSACTION_getMinimalPackageInfo, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.content.pm.PackageInfoLite.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13900933.java!!!	getObbInfo(inout filename : java.lang.String) : android.content.res.ObbInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.content.res.ObbInfo _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(filename);
mRemote.transact(Stub.TRANSACTION_getObbInfo, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.content.res.ObbInfo.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13901061.java!!!	calculateDirectorySize(inout directory : java.lang.String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(directory);
mRemote.transact(Stub.TRANSACTION_calculateDirectorySize, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13901189.java!!!	getFileSystemStats(inout path : java.lang.String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(path);
mRemote.transact(Stub.TRANSACTION_getFileSystemStats, _data, _reply, 0);
_reply.readException();
_result = _reply.createLongArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13901317.java!!!	clearDirectory(inout directory : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(directory);
mRemote.transact(Stub.TRANSACTION_clearDirectory, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13901445.java!!!	calculateInstalledSize(inout packagePath : java.lang.String, inout isForwardLocked : boolean, inout abiOverride : java.lang.String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packagePath);
_data.writeInt(((isForwardLocked)?(1):(0)));
_data.writeString(abiOverride);
mRemote.transact(Stub.TRANSACTION_calculateInstalledSize, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
