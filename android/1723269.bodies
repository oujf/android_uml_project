class NotificationAssistants
!!!11945605.java!!!	NotificationAssistants()
            super(getContext(), mHandler, mNotificationLock, mUserProfiles);
!!!11945733.java!!!	getConfig() : ManagedServices::Config
            Config c = new Config();
            c.caption = "notification assistant service";
            c.serviceInterface = NotificationAssistantService.SERVICE_INTERFACE;
            c.secureSettingName = Settings.Secure.ENABLED_NOTIFICATION_ASSISTANT;
            c.bindPermission = Manifest.permission.BIND_NOTIFICATION_ASSISTANT_SERVICE;
            c.settingsAction = Settings.ACTION_MANAGE_DEFAULT_APPS_SETTINGS;
            c.clientLabel = R.string.notification_ranker_binding_label;
            return c;
!!!11945861.java!!!	asInterface(inout binder : IBinder) : IInterface
            return INotificationListener.Stub.asInterface(binder);
!!!11945989.java!!!	checkType(inout service : IInterface) : boolean
            return service instanceof INotificationListener;
!!!11946117.java!!!	onServiceAdded(inout info : ManagedServices::ManagedServiceInfo) : void
            mListeners.registerGuestService(info);
!!!11946245.java!!!	onServiceRemovedLocked(inout removed : ManagedServices::ManagedServiceInfo) : void
            mListeners.unregisterService(removed.service, removed.userid);
!!!11946373.java!!!	onNotificationEnqueued(in r : NotificationRecord) : void
            final StatusBarNotification sbn = r.sbn;
            TrimCache trimCache = new TrimCache(sbn);

            // There should be only one, but it's a list, so while we enforce
            // singularity elsewhere, we keep it general here, to avoid surprises.
            for (final ManagedServiceInfo info : NotificationAssistants.this.getServices()) {
                boolean sbnVisible = isVisibleToListener(sbn, info);
                if (!sbnVisible) {
                    continue;
                }

                final int importance = r.getImportance();
                final boolean fromUser = r.isImportanceFromUser();
                final StatusBarNotification sbnToPost =  trimCache.ForListener(info);
                mHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        notifyEnqueued(info, sbnToPost);
                    }
                });
            }
!!!11946501.java!!!	notifyEnqueued(in info : ManagedServices::ManagedServiceInfo, in sbn : StatusBarNotification) : void
            final INotificationListener assistant = (INotificationListener) info.service;
            StatusBarNotificationHolder sbnHolder = new StatusBarNotificationHolder(sbn);
            try {
                assistant.onNotificationEnqueued(sbnHolder);
            } catch (RemoteException ex) {
                Log.e(TAG, "unable to notify assistant (enqueued): " + assistant, ex);
            }
!!!11946629.java!!!	notifyAssistantSnoozedLocked(in sbn : StatusBarNotification, in snoozeCriterionId : String) : void
            TrimCache trimCache = new TrimCache(sbn);
            for (final ManagedServiceInfo info : getServices()) {
                final StatusBarNotification sbnToPost =  trimCache.ForListener(info);
                mHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        final INotificationListener assistant =
                                (INotificationListener) info.service;
                        StatusBarNotificationHolder sbnHolder
                                = new StatusBarNotificationHolder(sbnToPost);
                        try {
                            assistant.onNotificationSnoozedUntilContext(
                                    sbnHolder, snoozeCriterionId);
                        } catch (RemoteException ex) {
                            Log.e(TAG, "unable to notify assistant (snoozed): " + assistant, ex);
                        }
                    }
                });
            }
!!!11946757.java!!!	isEnabled() : boolean
            return !getServices().isEmpty();
