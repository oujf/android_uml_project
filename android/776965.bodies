class PluginFragmentListener
!!!3221893.java!!!	PluginFragmentListener(inout view : View, in tag : String, inout defaultFragment : Class<? extends Fragment>, inout expectedInterface : Class<? extends FragmentBase>)
        mTag = tag;
        mFragmentHostManager = FragmentHostManager.get(view);
        mPluginManager = Dependency.get(PluginManager.class);
        mExpectedInterface = expectedInterface;
        mDefaultClass = defaultFragment;
!!!3222021.java!!!	startListening() : void
        mPluginManager.addPluginListener(this, mExpectedInterface,
                false /* Only allow one */);
!!!3222149.java!!!	stopListening() : void
        mPluginManager.removePluginListener(this);
!!!3222277.java!!!	onPluginConnected(inout plugin : Plugin, inout pluginContext : Context) : void
        try {
            mExpectedInterface.cast(plugin);
            Fragment.class.cast(plugin);
            mFragmentHostManager.getPluginManager().setCurrentPlugin(mTag,
                    plugin.getClass().getName(), pluginContext);
        } catch (ClassCastException e) {
            Log.e(TAG, plugin.getClass().getName() + " must be a Fragment and implement "
                    + mExpectedInterface.getName(), e);
        }
!!!3222405.java!!!	onPluginDisconnected(inout plugin : Plugin) : void
        mFragmentHostManager.getPluginManager().removePlugin(mTag,
                plugin.getClass().getName(), mDefaultClass.getName());
