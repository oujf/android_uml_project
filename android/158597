format 214
"android" // source::frameworks::av::media::libaaudio::src::binding::android
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/media/libaaudio/src/binding/"
  cpp_src_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/media/libaaudio/src/binding/"
  cpp_namespace "android"
  classview 152453 "binding"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 277125 "aaudio_commands_t"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      attribute 449925 "OPEN_STREAM"
	public type class_ref 277125 // aaudio_commands_t
	init_value " IBinder::FIRST_CALL_TRANSACTION"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450053 "CLOSE_STREAM"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450181 "GET_STREAM_DESCRIPTION"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450309 "START_STREAM"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450437 "PAUSE_STREAM"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450565 "STOP_STREAM"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450693 "FLUSH_STREAM"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450821 "REGISTER_AUDIO_THREAD"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end

      attribute 450949 "UNREGISTER_AUDIO_THREAD"
	public type class_ref 277125 // aaudio_commands_t
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl "  ${name},${comment}"
	mysql_decl ""
	MysqlColumn
      end
    end

    class 279173 "IAAudioService"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Interface (our AIDL) - Shared by server and client"
      classrelation 313477 // <generalisation>
	relation 313477 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 313477 // <generalisation>
	  b parent class_ref 279301 // typedef3
      end

      operation 664581 "openStream"
	abstract cpp_virtual public return_type class_ref 279429 // aaudio_handle_t
	nparams 2
	  param in name "request" type class_ref 276741 // AAudioStreamRequest
	  param inout name "configurationOutput" type class_ref 276869 // AAudioStreamConfiguration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@param request info needed to create the stream
@param configuration contains information about the created stream
@return handle to the stream or a negative error
"
      end

      operation 664709 "closeStream"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 276613 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 664837 "getStreamDescription"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 2
	  param in name "streamHandle" type class_ref 276613 // aaudio_handle_t
	  param inout name "parcelable" type class_ref 276997 // AudioEndpointParcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Get an immutable description of the in-memory queues
used to communicate with the underlying HAL or Service.
"
      end

      operation 664965 "startStream"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 276613 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Start the flow of data.
This is asynchronous. When complete, the service will send a STARTED event.
"
      end

      operation 665093 "pauseStream"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 276613 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Stop the flow of data such that start() can resume without loss of data.
This is asynchronous. When complete, the service will send a PAUSED event.
"
      end

      operation 665221 "stopStream"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 276613 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Stop the flow of data such that the data currently in the buffer is played.
This is asynchronous. When complete, the service will send a STOPPED event.
"
      end

      operation 665349 "flushStream"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 276613 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Discard any data held by the underlying HAL or Service.
This is asynchronous. When complete, the service will send a FLUSHED event.
"
      end

      operation 665477 "registerAudioThread"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 4
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	  param in name "clientProcessId" explicit_type "pid_t"
	  param in name "clientThreadId" explicit_type "pid_t"
	  param in name "periodNanoseconds" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Manage the specified thread as a low latency audio thread.
TODO Consider passing this information as part of the startStream() call.
"
      end

      operation 665605 "unregisterAudioThread"
	abstract cpp_virtual public return_type class_ref 273157 // aaudio_result_t
	nparams 3
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	  param in name "clientProcessId" explicit_type "pid_t"
	  param in name "clientThreadId" explicit_type "pid_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 279301 "typedef3"
      visibility package stereotype "typedef" explicit_base_type "IInterface"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 279557 "BnAAudioService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 313605 // <generalisation>
	relation 313605 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 313605 // <generalisation>
	  b parent class_ref 279685 // typedef4
      end

      operation 665733 "onTransact"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 4
	  param in name "code" explicit_type "uint32_t"
	  param in name "data" explicit_type "Parcel"
	  param inout name "reply" explicit_type "Parcel"
	  param in name "flags" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// The order of parameters in the Parcels must match with code in BpAAudioService

${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 279685 "typedef4"
      visibility package stereotype "typedef" explicit_base_type "BnInterface<IAAudioService>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 285957 "BpAAudioService"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This is used by the AAudio Client to talk to the AAudio Service.

The order of parameters in the Parcels must match with code in AAudioService.cpp.
"
      classrelation 323205 // <generalisation>
	relation 323205 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 323205 // <generalisation>
	  b parent class_ref 286085 // typedef5
      end

      operation 712709 "BpAAudioService"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract} : BpInterface<IAAudioService>(impl)
    {
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 712837 "openStream"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 279429 // aaudio_handle_t
	nparams 2
	  param in name "request" type class_ref 276741 // AAudioStreamRequest
	  param inout name "configurationOutput" type class_ref 276869 // AAudioStreamConfiguration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        ALOGV(\"BpAAudioService::client openStream --------------------\");
        // request.dump();
        request.writeToParcel(&data);
        status_t err = remote()->transact(OPEN_STREAM, data, &reply);
        ALOGV(\"BpAAudioService::client openStream returned %d\", err);
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client openStream transact failed %d\", err);
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_handle_t stream;
        err = reply.readInt32(&stream);
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client transact(OPEN_STREAM) readInt %d\", err);
            return AAudioConvert_androidToAAudioResult(err);
        } else if (stream < 0) {
            ALOGE(\"BpAAudioService::client OPEN_STREAM passed stream %d\", stream);
            return stream;
        }
        err = configurationOutput.readFromParcel(&reply);
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client openStream readFromParcel failed %d\", err);
            closeStream(stream);
            return AAudioConvert_androidToAAudioResult(err);
        }
        return stream;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 712965 "closeStream"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        status_t err = remote()->transact(CLOSE_STREAM, data, &reply);
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client closeStream transact failed %d\", err);
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 713093 "getStreamDescription"
	cpp_virtual cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 2
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	  param inout name "parcelable" type class_ref 276997 // AudioEndpointParcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        status_t err = remote()->transact(GET_STREAM_DESCRIPTION, data, &reply);
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client transact(GET_STREAM_DESCRIPTION) returns %d\", err);
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t result;
        err = reply.readInt32(&result);
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client transact(GET_STREAM_DESCRIPTION) readInt %d\", err);
            return AAudioConvert_androidToAAudioResult(err);
        } else if (result != AAUDIO_OK) {
            ALOGE(\"BpAAudioService::client GET_STREAM_DESCRIPTION passed result %d\", result);
            return result;
        }
        err = parcelable.readFromParcel(&reply);;
        if (err != NO_ERROR) {
            ALOGE(\"BpAAudioService::client transact(GET_STREAM_DESCRIPTION) read endpoint %d\", err);
            return AAudioConvert_androidToAAudioResult(err);
        }
        //parcelable.dump();
        result = parcelable.validate();
        if (result != AAUDIO_OK) {
            ALOGE(\"BpAAudioService::client GET_STREAM_DESCRIPTION validation fails %d\", result);
            return result;
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 713221 "startStream"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        status_t err = remote()->transact(START_STREAM, data, &reply);
        if (err != NO_ERROR) {
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " TODO should we wait for a reply?"
      end

      operation 713349 "pauseStream"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        status_t err = remote()->transact(PAUSE_STREAM, data, &reply);
        if (err != NO_ERROR) {
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 713477 "stopStream"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        status_t err = remote()->transact(STOP_STREAM, data, &reply);
        if (err != NO_ERROR) {
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 713605 "flushStream"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 1
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        status_t err = remote()->transact(FLUSH_STREAM, data, &reply);
        if (err != NO_ERROR) {
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 713733 "registerAudioThread"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 4
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	  param in name "clientProcessId" explicit_type "pid_t"
	  param in name "clientThreadId" explicit_type "pid_t"
	  param in name "periodNanoseconds" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        data.writeInt32((int32_t) clientProcessId);
        data.writeInt32((int32_t) clientThreadId);
        data.writeInt64(periodNanoseconds);
        status_t err = remote()->transact(REGISTER_AUDIO_THREAD, data, &reply);
        if (err != NO_ERROR) {
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 713861 "unregisterAudioThread"
	cpp_virtual cpp_override cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 3
	  param in name "streamHandle" type class_ref 279429 // aaudio_handle_t
	  param in name "clientProcessId" explicit_type "pid_t"
	  param in name "clientThreadId" explicit_type "pid_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        // send command
        data.writeInterfaceToken(IAAudioService::getInterfaceDescriptor());
        data.writeInt32(streamHandle);
        data.writeInt32((int32_t) clientProcessId);
        data.writeInt32((int32_t) clientThreadId);
        status_t err = remote()->transact(UNREGISTER_AUDIO_THREAD, data, &reply);
        if (err != NO_ERROR) {
            return AAudioConvert_androidToAAudioResult(err);
        }
        // parse reply
        aaudio_result_t res;
        reply.readInt32(&res);
        return res;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 286085 "typedef5"
      visibility package stereotype "typedef" explicit_base_type "BpInterface<IAAudioService>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 152709 "android"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 179717 "AAudioServiceDefinitions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 277125 // aaudio_commands_t
      end
    end

    artifact 180613 "IAAudioService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 279301 // typedef3
	class_ref 279173 // IAAudioService
	class_ref 279685 // typedef4
	class_ref 279557 // BnAAudioService
      end
    end

    artifact 184837 "typedef5"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 286085 // typedef5
      end
    end

    artifact 184965 "BpAAudioService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 285957 // BpAAudioService
      end
    end
  end
end
