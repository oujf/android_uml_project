format 214
"transition" // source::frameworks::base::core::java::android::transition
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\Users\\Jeff\\Documents\\aosp\\frameworks\\base\\core\\java/android/transition/"
  java_package "android.transition"
  classview 204549 "transition"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 990213 "TransitionManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class manages the set of transitions that fire when there is a
change of {@link Scene}. To use the manager, add scenes along with
transition objects with calls to {@link #setTransition(Scene, Transition)}
or {@link #setTransition(Scene, Scene, Transition)}. Setting specific
transitions for scene changes is not required; by default, a Scene change
will use {@link AutoTransition} to do something reasonable for most
situations. Specifying other transitions for particular scene changes is
only necessary if the application wants different transition behavior
in these situations.

<p>TransitionManagers can be declared in XML resource files inside the
<code>res/transition</code> directory. TransitionManager resources consist of
the <code>transitionManager</code>tag name, containing one or more
<code>transition</code> tags, each of which describe the relationship of
that transition to the from/to scene information in that tag.
For example, here is a resource file that declares several scene
transitions:</p>

{@sample development/samples/ApiDemos/res/transition/transitions_mgr.xml TransitionManager}

<p>For each of the <code>fromScene</code> and <code>toScene</code> attributes,
there is a reference to a standard XML layout file. This is equivalent to
creating a scene from a layout in code by calling
{@link Scene#getSceneForLayout(ViewGroup, int, Context)}. For the
<code>transition</code> attribute, there is a reference to a resource
file in the <code>res/transition</code> directory which describes that
transition.</p>

Information on XML resource descriptions for transitions can be found for
{@link android.R.styleable#Transition}, {@link android.R.styleable#TransitionSet},
{@link android.R.styleable#TransitionTarget}, {@link android.R.styleable#Fade},
and {@link android.R.styleable#TransitionManager}.
"
      attribute 5547525 "LOG_TAG"
	class_attribute private explicit_type "String"
	init_value " \"TransitionManager\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " TODO: how to handle enter/exit?
"
      end

      classrelation 2174469 // sDefaultTransition (<unidirectional association>)
	relation 2174469 --->
	  a role_name "sDefaultTransition" init_value " new AutoTransition()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174469 // sDefaultTransition (<unidirectional association>)
	  b parent class_ref 990469 // Transition
      end

      attribute 5547653 "EMPTY_STRINGS"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " new String[0]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2174597 // mSceneTransitions (<unidirectional association>)
	relation 2174597 --->
	  a role_name "mSceneTransitions" init_value " new ArrayMap<Scene, Transition>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Scene, Transition> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174597 // mSceneTransitions (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end

      classrelation 2174725 // mScenePairTransitions (<unidirectional association>)
	relation 2174725 --->
	  a role_name "mScenePairTransitions" init_value "
            new ArrayMap<Scene, ArrayMap<Scene, Transition>>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Scene, ArrayMap<Scene, Transition>> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174725 // mScenePairTransitions (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end

      attribute 5547781 "sRunningTransitions"
	class_attribute private explicit_type "WeakReference<ArrayMap<ViewGroup, ArrayList<Transition>>>"
	init_value "
            new ThreadLocal<WeakReference<ArrayMap<ViewGroup, ArrayList<Transition>>>>()"
	stereotype "ThreadLocal"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2174853 // sPendingTransitions (<unidirectional association>)
	relation 2174853 --->
	  stereotype "ArrayList"
	  a role_name "sPendingTransitions" init_value " new ArrayList<ViewGroup>()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174853 // sPendingTransitions (<unidirectional association>)
	  b parent class_ref 971013 // ViewGroup
      end

      operation 8400645 "setDefaultTransition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the transition to be used for any scene change for which no
other transition is explicitly set. The initial value is
an {@link AutoTransition} instance.

@param transition The default transition to be used for scene changes.

@hide pending later changes
"
      end

      operation 8400773 "getDefaultTransition"
	class_operation public return_type class_ref 990469 // Transition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Gets the current default transition. The initial value is an {@link
AutoTransition} instance.

@return The current default transition.
@see #setDefaultTransition(Transition)

@hide pending later changes
"
      end

      operation 8400901 "setTransition"
	public explicit_return_type "void"
	nparams 2
	  param inout name "scene" type class_ref 990341 // Scene
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets a specific transition to occur when the given scene is entered.

@param scene The scene which, when applied, will cause the given
transition to run.
@param transition The transition that will play when the given scene is
entered. A value of null will result in the default behavior of
using the default transition instead.
"
      end

      operation 8401029 "setTransition"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fromScene" type class_ref 990341 // Scene
	  param inout name "toScene" type class_ref 990341 // Scene
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets a specific transition to occur when the given pair of scenes is
exited/entered.

@param fromScene The scene being exited when the given transition will
be run
@param toScene The scene being entered when the given transition will
be run
@param transition The transition that will play when the given scene is
entered. A value of null will result in the default behavior of
using the default transition instead.
"
      end

      operation 8401157 "getTransition"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "scene" type class_ref 990341 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@TestApi
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the Transition for the given scene being entered. The result
depends not only on the given scene, but also the scene which the
{@link Scene#getSceneRoot() sceneRoot} of the Scene is currently in.

@param scene The scene being entered
@return The Transition to be used for the given scene change. If no
Transition was specified for this scene change, the default transition
will be used instead.
@hide
"
      end

      operation 8401285 "changeScene"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "scene" type class_ref 990341 // Scene
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This is where all of the work of a transition/scene-change is
orchestrated. This method captures the start values for the given
transition, exits the current Scene, enters the new scene, captures
the end values for the transition, and finally plays the
resulting values-populated transition.

@param scene The scene being entered
@param transition The transition to play for this scene change
"
      end

      operation 8401413 "getRunningTransitions"
	class_operation private return_type class_ref 956293 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<ViewGroup, ArrayList<Transition>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8401541 "sceneChangeRunTransition"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	  param in name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      class 1395717 "MultiListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2174981 // <realization>
	  relation 2174981 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2174981 // <realization>
	    b parent class_ref 1009797 // OnPreDrawListener
	end

	classrelation 2175109 // <realization>
	  relation 2175109 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2175109 // <realization>
	    b parent class_ref 976773 // OnAttachStateChangeListener
	end

	classrelation 2175237 // mTransition (<unidirectional association>)
	  relation 2175237 --->
	    a role_name "mTransition" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2175237 // mTransition (<unidirectional association>)
	    b parent class_ref 990469 // Transition
	end

	classrelation 2175365 // mSceneRoot (<unidirectional association>)
	  relation 2175365 --->
	    a role_name "mSceneRoot" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2175365 // mSceneRoot (<unidirectional association>)
	    b parent class_ref 971013 // ViewGroup
	end

	classrelation 2175493 // mViewTreeObserver (<unidirectional association>)
	  relation 2175493 --->
	    a role_name "mViewTreeObserver" const_relation package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2175493 // mViewTreeObserver (<unidirectional association>)
	    b parent class_ref 979845 // ViewTreeObserver
	end

	operation 8401669 "MultiListener"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "transition" type class_ref 990469 // Transition
	    param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8401797 "removeListeners"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8401925 "onViewAttachedToWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "v" type class_ref 970757 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8402053 "onViewDetachedFromWindow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "v" type class_ref 970757 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8402181 "onPreDraw"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      operation 8402309 "sceneChangeSetup"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8402437 "transitionTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "scene" type class_ref 990341 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Change to the given scene, using the
appropriate transition for this particular scene change
(as specified to the TransitionManager, or the default
if no such transition exists).

@param scene The Scene to change to
"
      end

      operation 8402565 "go"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "scene" type class_ref 990341 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convenience method to simply change to the given scene using
the default transition for TransitionManager.

@param scene The Scene to change to
"
      end

      operation 8402693 "go"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "scene" type class_ref 990341 // Scene
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convenience method to simply change to the given scene using
the given transition.

<p>Passing in <code>null</code> for the transition parameter will
result in the scene changing without any transition running, and is
equivalent to calling {@link Scene#exit()} on the scene root's
current scene, followed by {@link Scene#enter()} on the scene
specified by the <code>scene</code> parameter.</p>

@param scene The Scene to change to
@param transition The transition to use for this scene change. A
value of null causes the scene change to happen with no transition.
"
      end

      operation 8402821 "beginDelayedTransition"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convenience method to animate, using the default transition,
to a new scene defined by all changes within the given scene root between
calling this method and the next rendering frame.
Equivalent to calling {@link #beginDelayedTransition(ViewGroup, Transition)}
with a value of <code>null</code> for the <code>transition</code> parameter.

@param sceneRoot The root of the View hierarchy to run the transition on.
"
      end

      operation 8402949 "beginDelayedTransition"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convenience method to animate to a new scene defined by all changes within
the given scene root between calling this method and the next rendering frame.
Calling this method causes TransitionManager to capture current values in the
scene root and then post a request to run a transition on the next frame.
At that time, the new values in the scene root will be captured and changes
will be animated. There is no need to create a Scene; it is implied by
changes which take place between calling this method and the next frame when
the transition begins.

<p>Calling this method several times before the next frame (for example, if
unrelated code also wants to make dynamic changes and run a transition on
the same scene root), only the first call will trigger capturing values
and exiting the current scene. Subsequent calls to the method with the
same scene root during the same frame will be ignored.</p>

<p>Passing in <code>null</code> for the transition parameter will
cause the TransitionManager to use its default transition.</p>

@param sceneRoot The root of the View hierarchy to run the transition on.
@param transition The transition to use for this change. A
value of null causes the TransitionManager to use the default transition.
"
      end

      operation 8403077 "endTransitions"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Ends all pending and ongoing transitions on the specified scene root.

@param sceneRoot The root of the View hierarchy to end transitions on.
"
      end
    end

    class 990341 "Scene"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A scene represents the collection of values that various properties in the
View hierarchy will have when the scene is applied. A Scene can be
configured to automatically run a Transition when it is applied, which will
animate the various property changes that take place during the
scene change.
"
      classrelation 2172165 // mContext (<unidirectional association>)
	relation 2172165 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2172165 // mContext (<unidirectional association>)
	  b parent class_ref 956933 // Context
      end

      attribute 5546117 "mLayoutId"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2172293 // mSceneRoot (<unidirectional association>)
	relation 2172293 --->
	  a role_name "mSceneRoot" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2172293 // mSceneRoot (<unidirectional association>)
	  b parent class_ref 971013 // ViewGroup
      end

      classrelation 2172421 // mLayout (<unidirectional association>)
	relation 2172421 --->
	  a role_name "mLayout" private
	    comment " alternative to layoutId"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2172421 // mLayout (<unidirectional association>)
	  b parent class_ref 970757 // View
      end

      attribute 5546245 "mEnterAction"
	package explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5546373 "mExitAction"
	package explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8395269 "getSceneForLayout"
	class_operation public return_type class_ref 990341 // Scene
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param in name "layoutId" explicit_type "int"
	  param inout name "context" type class_ref 956933 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns a Scene described by the resource file associated with the given
<code>layoutId</code> parameter. If such a Scene has already been created for
the given <code>sceneRoot</code>, that same Scene will be returned.
This caching of layoutId-based scenes enables sharing of common scenes
between those created in code and those referenced by {@link TransitionManager}
XML resource files.

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
@param layoutId The id of a standard layout resource file.
@param context The context used in the process of inflating
the layout resource.
@return The scene for the given root and layout id
"
      end

      operation 8395397 "Scene"
	public explicit_return_type ""
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a Scene with no information about how values will change
when this scene is applied. This constructor might be used when
a Scene is created with the intention of being dynamically configured,
through setting {@link #setEnterAction(Runnable)} and possibly
{@link #setExitAction(Runnable)}.

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
"
      end

      operation 8395525 "Scene"
	private explicit_return_type ""
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param in name "layoutId" explicit_type "int"
	  param inout name "context" type class_ref 956933 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a Scene which, when entered, will remove any
children from the sceneRoot container and will inflate and add
the hierarchy specified by the layoutId resource file.

<p>This method is hidden because layoutId-based scenes should be
created by the caching factory method {@link Scene#getCurrentScene(View)}.</p>

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
@param layoutId The id of a resource file that defines the view
hierarchy of this scene.
@param context The context used in the process of inflating
the layout resource.
"
      end

      operation 8395653 "Scene"
	public explicit_return_type ""
	nparams 2
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "layout" type class_ref 970757 // View
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a Scene which, when entered, will remove any
children from the sceneRoot container and add the layout
object as a new child of that container.

@param sceneRoot The root of the hierarchy in which scene changes
and transitions will take place.
@param layout The view hierarchy of this scene, added as a child
of sceneRoot when this scene is entered.
"
      end

      operation 8395781 "Scene"
	public explicit_return_type ""
	nparams 2
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "layout" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "@deprecated use {@link #Scene(ViewGroup, View)}.
"
      end

      operation 8395909 "getSceneRoot"
	public return_type class_ref 971013 // ViewGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Gets the root of the scene, which is the root of the view hierarchy
affected by changes due to this scene, and which will be animated
when this scene is entered.

@return The root of the view hierarchy affected by this scene.
"
      end

      operation 8396037 "exit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Exits this scene, if it is the current scene
on the scene's {@link #getSceneRoot() scene root}. The current scene is
set when {@link #enter() entering} a scene.
Exiting a scene runs the {@link #setExitAction(Runnable) exit action}
if there is one.
"
      end

      operation 8396165 "enter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Enters this scene, which entails changing all values that
are specified by this scene. These may be values associated
with a layout view group or layout resource file which will
now be added to the scene root, or it may be values changed by
an {@link #setEnterAction(Runnable)} enter action}, or a
combination of the these. No transition will be run when the
scene is entered. To get transition behavior in scene changes,
use one of the methods in {@link TransitionManager} instead.
"
      end

      operation 8396293 "setCurrentScene"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "view" type class_ref 970757 // View
	  param inout name "scene" type class_ref 990341 // Scene
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the scene that the given view is in. The current scene is set only
on the root view of a scene, not for every view in that hierarchy. This
information is used by Scene to determine whether there is a previous
scene which should be exited before the new scene is entered.

@param view The view on which the current scene is being set
"
      end

      operation 8396421 "getCurrentScene"
	class_operation package return_type class_ref 990341 // Scene
	nparams 1
	  param inout name "view" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Gets the current {@link Scene} set on the given view. A scene is set on a view
only if that view is the scene root.

@return The current Scene set on this view. A value of null indicates that
no Scene is currently set.
"
      end

      operation 8396549 "setEnterAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Scenes that are not defined with layout resources or
hierarchies, or which need to perform additional steps
after those hierarchies are changed to, should set an enter
action, and possibly an exit action as well. An enter action
will cause Scene to call back into application code to do
anything else the application needs after transitions have
captured pre-change values and after any other scene changes
have been applied, such as the layout (if any) being added to
the view hierarchy. After this method is called, Transitions will
be played.

@param action The runnable whose {@link Runnable#run() run()} method will
be called when this scene is entered
@see #setExitAction(Runnable)
@see Scene#Scene(ViewGroup, int, Context)
@see Scene#Scene(ViewGroup, ViewGroup)
"
      end

      operation 8396677 "setExitAction"
	public explicit_return_type "void"
	nparams 1
	  param inout name "action" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Scenes that are not defined with layout resources or
hierarchies, or which need to perform additional steps
after those hierarchies are changed to, should set an enter
action, and possibly an exit action as well. An exit action
will cause Scene to call back into application code to do
anything the application needs to do after applicable transitions have
captured pre-change values, but before any other scene changes
have been applied, such as the new layout (if any) being added to
the view hierarchy. After this method is called, the next scene
will be entered, including a call to {@link #setEnterAction(Runnable)}
if an enter action is set.

@see #setEnterAction(Runnable)
@see Scene#Scene(ViewGroup, int, Context)
@see Scene#Scene(ViewGroup, ViewGroup)
"
      end

      operation 8396805 "isCreatedFromLayoutResource"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns whether this Scene was created by a layout resource file, determined
by the layoutId passed into
{@link #getSceneForLayout(android.view.ViewGroup, int, android.content.Context)}.
This is called by TransitionManager to determine whether it is safe for views from
this scene to be removed from their parents when the scene is exited, which is
used by {@link Fade} to fade these views out (the views must be removed from
their parent in order to add them to the overlay for fading purposes). If a
Scene is not based on a resource file, then the impact of removing views
arbitrarily is unknown and should be avoided.
"
      end
    end

    class 990469 "Transition"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A Transition holds information about animations that will be run on its
targets during a scene change. Subclasses of this abstract class may
choreograph several child transitions ({@link TransitionSet} or they may
perform custom animations themselves. Any Transition has two main jobs:
(1) capture property values, and (2) play animations based on changes to
captured property values. A custom transition knows what property values
on View objects are of interest to it, and also knows how to animate
changes to those values. For example, the {@link Fade} transition tracks
changes to visibility-related properties and is able to construct and run
animations that fade items in or out based on changes to those properties.

<p>Note: Transitions may not work correctly with either {@link SurfaceView}
or {@link TextureView}, due to the way that these views are displayed
on the screen. For SurfaceView, the problem is that the view is updated from
a non-UI thread, so changes to the view due to transitions (such as moving
and resizing the view) may be out of sync with the display inside those bounds.
TextureView is more compatible with transitions in general, but some
specific transitions (such as {@link Fade}) may not be compatible
with TextureView because they rely on {@link ViewOverlay} functionality,
which does not currently work with TextureView.</p>

<p>Transitions can be declared in XML resource files inside the <code>res/transition</code>
directory. Transition resources consist of a tag name for one of the Transition
subclasses along with attributes to define some of the attributes of that transition.
For example, here is a minimal resource file that declares a {@link ChangeBounds} transition:

{@sample development/samples/ApiDemos/res/transition/changebounds.xml ChangeBounds}

<p>This TransitionSet contains {@link android.transition.Explode} for visibility,
{@link android.transition.ChangeBounds}, {@link android.transition.ChangeTransform},
and {@link android.transition.ChangeClipBounds} and
{@link android.transition.ChangeImageTransform}:</p>

{@sample development/samples/ApiDemos/res/transition/explode_move_together.xml MultipleTransform}

<p>Custom transition classes may be instantiated with a <code>transition</code> tag:</p>
<pre>&lt;transition class=\"my.app.transition.CustomTransition\"/></pre>
<p>Custom transition classes loaded from XML should have a public constructor taking
a {@link android.content.Context} and {@link android.util.AttributeSet}.</p>

<p>Note that attributes for the transition are not required, just as they are
optional when declared in code; Transitions created from XML resources will use
the same defaults as their code-created equivalents. Here is a slightly more
elaborate example which declares a {@link TransitionSet} transition with
{@link ChangeBounds} and {@link Fade} child transitions:</p>

{@sample
development/samples/ApiDemos/res/transition/changebounds_fadeout_sequential.xml TransitionSet}

<p>In this example, the transitionOrdering attribute is used on the TransitionSet
object to change from the default {@link TransitionSet#ORDERING_TOGETHER} behavior
to be {@link TransitionSet#ORDERING_SEQUENTIAL} instead. Also, the {@link Fade}
transition uses a fadingMode of {@link Fade#OUT} instead of the default
out-in behavior. Finally, note the use of the <code>targets</code> sub-tag, which
takes a set of {@link android.R.styleable#TransitionTarget target} tags, each
of which lists a specific <code>targetId</code>, <code>targetClass</code>,
<code>targetName</code>, <code>excludeId</code>, <code>excludeClass</code>, or
<code>excludeName</code>, which this transition acts upon.
Use of targets is optional, but can be used to either limit the time spent checking
attributes on unchanging views, or limiting the types of animations run on specific views.
In this case, we know that only the <code>grayscaleContainer</code> will be
disappearing, so we choose to limit the {@link Fade} transition to only that view.</p>

Further information on XML resource descriptions for transitions can be found for
{@link android.R.styleable#Transition}, {@link android.R.styleable#TransitionSet},
{@link android.R.styleable#TransitionTarget}, {@link android.R.styleable#Fade},
{@link android.R.styleable#Slide}, and {@link android.R.styleable#ChangeTransform}.

"
      class 1028613 "TransitionListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 5041541 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Notification about the start of the transition.

@param transition The started transition.
"
	end

	operation 5041669 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Notification about the end of the transition. Canceled transitions
will always notify listeners of both the cancellation and end
events. That is, {@link #onTransitionEnd(Transition)} is always called,
regardless of whether the transition was canceled or played
through to completion.

@param transition The transition which reached its end.
"
	end

	operation 5041797 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Notification about the cancellation of the transition.
Note that cancel may be called by a parent {@link TransitionSet} on
a child transition which has not yet started. This allows the child
transition to restore state on target objects which was set at
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)
createAnimator()} time.

@param transition The transition which was canceled.
"
	end

	operation 5041925 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Notification when a transition is paused.
Note that createAnimator() may be called by a parent {@link TransitionSet} on
a child transition which has not yet started. This allows the child
transition to restore state on target objects which was set at
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)
createAnimator()} time.

@param transition The transition which was paused.
"
	end

	operation 5042053 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Notification when a transition is resumed.
Note that resume() may be called by a parent {@link TransitionSet} on
a child transition which has not yet started. This allows the child
transition to restore state which may have changed in an earlier call
to {@link #onTransitionPause(Transition)}.

@param transition The transition which was resumed.
"
	end
      end

      classrelation 1469317 // <realization>
	relation 1469317 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1469317 // <realization>
	  b parent class_ref 1004805 // Cloneable
      end

      attribute 3321477 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Transition\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3321605 "DBG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3321733 "MATCH_INSTANCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by View instance.

"
      end

      attribute 3321861 "MATCH_FIRST"
	class_attribute const_attribute private explicit_type "int"
	init_value " MATCH_INSTANCE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3321989 "MATCH_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by
{@link android.view.View#getTransitionName()}. Null names will not be matched.

"
      end

      attribute 3322117 "MATCH_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by
{@link android.view.View#getId()}. Negative IDs will not be matched.

"
      end

      attribute 3322245 "MATCH_ITEM_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "With {@link #setMatchOrder(int...)}, chooses to match by the {@link android.widget.Adapter}
item id. When {@link android.widget.Adapter#hasStableIds()} returns false, no match
will be made for items.

"
      end

      attribute 3322373 "MATCH_LAST"
	class_attribute const_attribute private explicit_type "int"
	init_value " MATCH_ITEM_ID"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3322501 "MATCH_INSTANCE_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"instance\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3322629 "MATCH_NAME_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"name\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3322757 "MATCH_VIEW_NAME_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"viewName\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " To be removed before L release 
"
      end

      attribute 3322885 "MATCH_ID_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"id\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3323013 "MATCH_ITEM_ID_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"itemId\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3323141 "DEFAULT_MATCH_ORDER"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
        MATCH_NAME,
        MATCH_INSTANCE,
        MATCH_ID,
        MATCH_ITEM_ID,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1469445 // STRAIGHT_PATH_MOTION (<unidirectional association>)
	relation 1469445 --->
	  a role_name "STRAIGHT_PATH_MOTION" init_value " new PathMotion() {
        @Override
        public Path getPath(float startX, float startY, float endX, float endY) {
            Path path = new Path();
            path.moveTo(startX, startY);
            path.lineTo(endX, endY);
            return path;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1469445 // STRAIGHT_PATH_MOTION (<unidirectional association>)
	  b parent class_ref 1028741 // PathMotion
      end

      attribute 3323269 "mName"
	private explicit_type "String"
	init_value " getClass().getName()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3323397 "mStartDelay"
	package explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3323525 "mDuration"
	package explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1469573 // mInterpolator (<unidirectional association>)
	relation 1469573 --->
	  a role_name "mInterpolator" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1469573 // mInterpolator (<unidirectional association>)
	  b parent class_ref 1005317 // TimeInterpolator
      end

      attribute 3323653 "mTargetIds"
	package explicit_type "Integer"
	init_value " new ArrayList<Integer>()"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1469701 // mTargets (<unidirectional association>)
	relation 1469701 --->
	  stereotype "ArrayList"
	  a role_name "mTargets" init_value " new ArrayList<View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1469701 // mTargets (<unidirectional association>)
	  b parent class_ref 970757 // View
      end

      attribute 3323781 "mTargetNames"
	package explicit_type "String"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3323909 "mTargetTypes"
	package explicit_type "Class"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3324037 "mTargetIdExcludes"
	package explicit_type "Integer"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1469829 // mTargetExcludes (<unidirectional association>)
	relation 1469829 --->
	  stereotype "ArrayList"
	  a role_name "mTargetExcludes" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1469829 // mTargetExcludes (<unidirectional association>)
	  b parent class_ref 970757 // View
      end

      attribute 3324165 "mTargetTypeExcludes"
	package explicit_type "Class"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3324293 "mTargetNameExcludes"
	package explicit_type "String"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 3324421 "mTargetIdChildExcludes"
	package explicit_type "Integer"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1469957 // mTargetChildExcludes (<unidirectional association>)
	relation 1469957 --->
	  stereotype "ArrayList"
	  a role_name "mTargetChildExcludes" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1469957 // mTargetChildExcludes (<unidirectional association>)
	  b parent class_ref 970757 // View
      end

      attribute 3324549 "mTargetTypeChildExcludes"
	package explicit_type "Class"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1470085 // mStartValues (<unidirectional association>)
	relation 1470085 --->
	  a role_name "mStartValues" init_value " new TransitionValuesMaps()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470085 // mStartValues (<unidirectional association>)
	  b parent class_ref 1028869 // TransitionValuesMaps
      end

      classrelation 1470213 // mEndValues (<unidirectional association>)
	relation 1470213 --->
	  a role_name "mEndValues" init_value " new TransitionValuesMaps()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470213 // mEndValues (<unidirectional association>)
	  b parent class_ref 1028869 // TransitionValuesMaps
      end

      classrelation 1470341 // mParent (<unidirectional association>)
	relation 1470341 --->
	  a role_name "mParent" init_value " null" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470341 // mParent (<unidirectional association>)
	  b parent class_ref 1028997 // TransitionSet
      end

      attribute 3324677 "mMatchOrder"
	package explicit_type "int"
	multiplicity "[]"
	init_value " DEFAULT_MATCH_ORDER"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1470469 // mStartValuesList (<unidirectional association>)
	relation 1470469 --->
	  stereotype "ArrayList"
	  a role_name "mStartValuesList" package
	    comment " only valid after playTransition starts"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470469 // mStartValuesList (<unidirectional association>)
	  b parent class_ref 1029125 // TransitionValues
      end

      classrelation 1470597 // mEndValuesList (<unidirectional association>)
	relation 1470597 --->
	  stereotype "ArrayList"
	  a role_name "mEndValuesList" package
	    comment " only valid after playTransitions starts"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470597 // mEndValuesList (<unidirectional association>)
	  b parent class_ref 1029125 // TransitionValues
      end

      classrelation 1470725 // sRunningAnimators (<unidirectional association>)
	relation 1470725 --->
	  stereotype "ThreadLocal"
	  a role_name "sRunningAnimators" init_value "
            new ThreadLocal<ArrayMap<Animator, AnimationInfo>>()" class_relation private
	    comment " Per-animator information used for later canceling when future transitions overlap
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<Animator, AnimationInfo>> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470725 // sRunningAnimators (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end

      classrelation 1470853 // mSceneRoot (<unidirectional association>)
	relation 1470853 --->
	  a role_name "mSceneRoot" init_value " null" package
	    comment " Scene Root is set at createAnimator() time in the cloned Transition
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470853 // mSceneRoot (<unidirectional association>)
	  b parent class_ref 971013 // ViewGroup
      end

      attribute 3324805 "mCanRemoveViews"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Whether removing views from their parent is possible. This is only for views
 in the start scene, which are no longer in the view hierarchy. This property
 is determined by whether the previous Scene was created from a layout
 resource, and thus the views from the exited scene are going away anyway
 and can be removed as necessary to achieve a particular effect, such as
 removing them from parents to add them to overlays.
"
      end

      classrelation 1470981 // mCurrentAnimators (<unidirectional association>)
	relation 1470981 --->
	  stereotype "ArrayList"
	  a role_name "mCurrentAnimators" init_value " new ArrayList<Animator>()" private
	    comment " Track all animators in use in case the transition gets canceled and needs to
 cancel running animators
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1470981 // mCurrentAnimators (<unidirectional association>)
	  b parent class_ref 1004677 // Animator
      end

      attribute 3324933 "mNumInstances"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Number of per-target instances of this Transition currently running. This count is
 determined by calls to start() and end()
"
      end

      attribute 3325061 "mPaused"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Whether this transition is currently paused, due to a call to pause()
"
      end

      attribute 3325189 "mEnded"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Whether this transition has ended. Used to avoid pause/resume on transitions
 that have completed
"
      end

      classrelation 1471109 // mListeners (<unidirectional association>)
	relation 1471109 --->
	  stereotype "ArrayList"
	  a role_name "mListeners" init_value " null" package
	    comment " The set of listeners to be sent transition lifecycle events.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1471109 // mListeners (<unidirectional association>)
	  b parent class_ref 1028613 // TransitionListener
      end

      classrelation 1471237 // mAnimators (<unidirectional association>)
	relation 1471237 --->
	  stereotype "ArrayList"
	  a role_name "mAnimators" init_value " new ArrayList<Animator>()" package
	    comment " The set of animators collected from calls to createAnimator(),
 to be run in runAnimators()
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1471237 // mAnimators (<unidirectional association>)
	  b parent class_ref 1004677 // Animator
      end

      classrelation 1471365 // mPropagation (<unidirectional association>)
	relation 1471365 --->
	  a role_name "mPropagation" package
	    comment " The function for calculating the Animation start delay.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1471365 // mPropagation (<unidirectional association>)
	  b parent class_ref 1029253 // TransitionPropagation
      end

      class 1029381 "EpicenterCallback"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 5042565 "onGetEpicenter"
	  abstract public explicit_return_type "Rect"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Implementers must override to return the epicenter of the Transition in screen
coordinates. Transitions like {@link android.transition.Explode} depend upon
an epicenter for the Transition. In Explode, Views move toward or away from the
center of the epicenter Rect along the vector between the epicenter and the center
of the View appearing and disappearing. Some Transitions, such as
{@link android.transition.Fade} pay no attention to the epicenter.

@param transition The transition for which the epicenter applies.
@return The Rect region of the epicenter of <code>transition</code> or null if
there is no epicenter.
"
	end
      end

      classrelation 1471493 // mEpicenterCallback (<unidirectional association>)
	relation 1471493 --->
	  a role_name "mEpicenterCallback" package
	    comment " The rectangular region for Transitions like Explode and TransitionPropagations
 like CircularPropagation
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1471493 // mEpicenterCallback (<unidirectional association>)
	  b parent class_ref 1029381 // EpicenterCallback
      end

      classrelation 1471621 // mNameOverrides (<unidirectional association>)
	relation 1471621 --->
	  a role_name "mNameOverrides" package
	    comment " For Fragment shared element transitions, linking views explicitly by mismatching
 transitionNames.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1471621 // mNameOverrides (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end

      classrelation 1471749 // mPathMotion (<unidirectional association>)
	relation 1471749 --->
	  a role_name "mPathMotion" init_value " STRAIGHT_PATH_MOTION" package
	    comment " The function used to interpolate along two-dimensional points. Typically used
 for adding curves to x/y View motion.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1471749 // mPathMotion (<unidirectional association>)
	  b parent class_ref 1028741 // PathMotion
      end

      operation 5030917 "Transition"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a Transition object with no target objects. A transition with
no targets defaults to running on all target objects in the scene hierarchy
(if the transition is not contained in a TransitionSet), or all target
objects passed down from its parent (if it is in a TransitionSet).
"
      end

      operation 5031045 "Transition"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Perform inflation from XML and apply a class-specific base style from a
theme attribute or style resource. This constructor of Transition allows
subclasses to use their own base style when they are inflating.

@param context The Context the transition is running in, through which it can
       access the current theme, resources, etc.
@param attrs The attributes of the XML tag that is inflating the transition.
"
      end

      operation 5031173 "parseMatchOrder"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "matchOrderString" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5031301 "setDuration"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "duration" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the duration of this transition. By default, there is no duration
(indicated by a negative number), which means that the Animator created by
the transition will have its own specified duration. If the duration of a
Transition is set, that duration will override the Animator duration.

@param duration The length of the animation, in milliseconds.
@return This transition object.
@attr ref android.R.styleable#Transition_duration
"
      end

      operation 5031429 "getDuration"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the duration set on this transition. If no duration has been set,
the returned value will be negative, indicating that resulting animators will
retain their own durations.

@return The duration set on this transition, in milliseconds, if one has been
set, otherwise returns a negative number.
"
      end

      operation 5031557 "setStartDelay"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "startDelay" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the startDelay of this transition. By default, there is no delay
(indicated by a negative number), which means that the Animator created by
the transition will have its own specified startDelay. If the delay of a
Transition is set, that delay will override the Animator delay.

@param startDelay The length of the delay, in milliseconds.
@return This transition object.
@attr ref android.R.styleable#Transition_startDelay
"
      end

      operation 5031685 "getStartDelay"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the startDelay set on this transition. If no startDelay has been set,
the returned value will be negative, indicating that resulting animators will
retain their own startDelays.

@return The startDelay set on this transition, in milliseconds, if one has
been set, otherwise returns a negative number.
"
      end

      operation 5031813 "setInterpolator"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "interpolator" type class_ref 1005317 // TimeInterpolator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the interpolator of this transition. By default, the interpolator
is null, which means that the Animator created by the transition
will have its own specified interpolator. If the interpolator of a
Transition is set, that interpolator will override the Animator interpolator.

@param interpolator The time interpolator used by the transition
@return This transition object.
@attr ref android.R.styleable#Transition_interpolator
"
      end

      operation 5031941 "getInterpolator"
	public return_type class_ref 1005317 // TimeInterpolator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the interpolator set on this transition. If no interpolator has been set,
the returned value will be null, indicating that resulting animators will
retain their own interpolators.

@return The interpolator set on this transition, if one has been set, otherwise
returns null.
"
      end

      operation 5032069 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the set of property names used stored in the {@link TransitionValues}
object passed into {@link #captureStartValues(TransitionValues)} that
this transition cares about for the purposes of canceling overlapping animations.
When any transition is started on a given scene root, all transitions
currently running on that same scene root are checked to see whether the
properties on which they based their animations agree with the end values of
the same properties in the new transition. If the end values are not equal,
then the old animation is canceled since the new transition will start a new
animation to these new values. If the values are equal, the old animation is
allowed to continue and no new animation is started for that transition.

<p>A transition does not need to override this method. However, not doing so
will mean that the cancellation logic outlined in the previous paragraph
will be skipped for that transition, possibly leading to artifacts as
old transitions and new transitions on the same targets run in parallel,
animating views toward potentially different end values.</p>

@return An array of property names as described in the class documentation for
{@link TransitionValues}. The default implementation returns <code>null</code>.
"
      end

      operation 5032197 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method creates an animation that will be run for this transition
given the information in the startValues and endValues structures captured
earlier for the start and end scenes. Subclasses of Transition should override
this method. The method should only be called by the transition system; it is
not intended to be called from external classes.

<p>This method is called by the transition's parent (all the way up to the
topmost Transition in the hierarchy) with the sceneRoot and start/end
values that the transition may need to set up initial target values
and construct an appropriate animation. For example, if an overall
Transition is a {@link TransitionSet} consisting of several
child transitions in sequence, then some of the child transitions may
want to set initial values on target views prior to the overall
Transition commencing, to put them in an appropriate state for the
delay between that start and the child Transition start time. For
example, a transition that fades an item in may wish to set the starting
alpha value to 0, to avoid it blinking in prior to the transition
actually starting the animation. This is necessary because the scene
change that triggers the Transition will automatically set the end-scene
on all target views, so a Transition that wants to animate from a
different value should set that value prior to returning from this method.</p>

<p>Additionally, a Transition can perform logic to determine whether
the transition needs to run on the given target and start/end values.
For example, a transition that resizes objects on the screen may wish
to avoid running for views which are not present in either the start
or end scenes.</p>

<p>If there is an animator created and returned from this method, the
transition mechanism will apply any applicable duration, startDelay,
and interpolator to that animation and start it. A return value of
<code>null</code> indicates that no animation should run. The default
implementation returns null.</p>

<p>The method is called for every applicable target object, which is
stored in the {@link TransitionValues#view} field.</p>


@param sceneRoot The root of the transition hierarchy.
@param startValues The values for a specific target in the start scene.
@param endValues The values for the target in the end scene.
@return A Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 5032325 "setMatchOrder"
	public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "int...matches"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the order in which Transition matches View start and end values.
<p>
The default behavior is to match first by {@link android.view.View#getTransitionName()},
then by View instance, then by {@link android.view.View#getId()} and finally
by its item ID if it is in a direct child of ListView. The caller can
choose to have only some or all of the values of {@link #MATCH_INSTANCE},
{@link #MATCH_NAME}, {@link #MATCH_ITEM_ID}, and {@link #MATCH_ID}. Only
the match algorithms supplied will be used to determine whether Views are the
the same in both the start and end Scene. Views that do not match will be considered
as entering or leaving the Scene.
</p>
@param matches A list of zero or more of {@link #MATCH_INSTANCE},
               {@link #MATCH_NAME}, {@link #MATCH_ITEM_ID}, and {@link #MATCH_ID}.
               If none are provided, then the default match order will be set.
"
      end

      operation 5032453 "isValidMatch"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "match" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5032581 "alreadyContains"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "array" explicit_type "int"
	multiplicity "[]"
	  param in name "searchIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5032709 "matchInstances"
	private explicit_return_type "void"
	nparams 2
	  param inout name "unmatchedStart" type class_ref 956293 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 956293 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Match start/end values by View instance. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd.
"
      end

      operation 5032837 "matchItemIds"
	private explicit_return_type "void"
	nparams 4
	  param inout name "unmatchedStart" type class_ref 956293 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 956293 // ArrayMap
	  param inout name "startItemIds" type class_ref 1029509 // LongSparseArray
	  param inout name "endItemIds" type class_ref 1029509 // LongSparseArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}, ${t2}<View> ${p2}, ${t3}<View> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Match start/end values by Adapter item ID. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd, using
startItemIds and endItemIds as a guide for which Views have unique item IDs.
"
      end

      operation 5032965 "matchIds"
	private explicit_return_type "void"
	nparams 4
	  param inout name "unmatchedStart" type class_ref 956293 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 956293 // ArrayMap
	  param inout name "startIds" type class_ref 964101 // SparseArray
	  param inout name "endIds" type class_ref 964101 // SparseArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}, ${t2}<View> ${p2}, ${t3}<View> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Match start/end values by Adapter view ID. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd, using
startIds and endIds as a guide for which Views have unique IDs.
"
      end

      operation 5033093 "matchNames"
	private explicit_return_type "void"
	nparams 4
	  param inout name "unmatchedStart" type class_ref 956293 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 956293 // ArrayMap
	  param inout name "startNames" type class_ref 956293 // ArrayMap
	  param inout name "endNames" type class_ref 956293 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}, ${t2}<String, View> ${p2}, ${t3}<String, View> ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Match start/end values by Adapter transitionName. Adds matched values to mStartValuesList
and mEndValuesList and removes them from unmatchedStart and unmatchedEnd, using
startNames and endNames as a guide for which Views have unique transitionNames.
"
      end

      operation 5033221 "addUnmatched"
	private explicit_return_type "void"
	nparams 2
	  param inout name "unmatchedStart" type class_ref 956293 // ArrayMap
	  param inout name "unmatchedEnd" type class_ref 956293 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<View, TransitionValues> ${p0}, ${t1}<View, TransitionValues> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds all values from unmatchedStart and unmatchedEnd to mStartValuesList and mEndValuesList,
assuming that there is no match between values in the list.
"
      end

      operation 5033349 "matchStartAndEnd"
	private explicit_return_type "void"
	nparams 2
	  param inout name "startValues" type class_ref 1028869 // TransitionValuesMaps
	  param inout name "endValues" type class_ref 1028869 // TransitionValuesMaps
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5033477 "createAnimators"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1028869 // TransitionValuesMaps
	  param inout name "endValues" type class_ref 1028869 // TransitionValuesMaps
	  param inout name "startValuesList" explicit_type "ArrayList<TransitionValues>"
	  param inout name "endValuesList" explicit_type "ArrayList<TransitionValues>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method, essentially a wrapper around all calls to createAnimator for all
possible target views, is called with the entire set of start/end
values. The implementation in Transition iterates through these lists
and calls {@link #createAnimator(ViewGroup, TransitionValues, TransitionValues)}
with each set of start/end values on this transition. The
TransitionSet subclass overrides this method and delegates it to
each of its children in succession.

@hide
"
      end

      operation 5033605 "isValidTarget"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "target" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Internal utility method for checking whether a given view/id
is valid for this transition, where \"valid\" means that either
the Transition has no target/targetId list (the default, in which
cause the transition should act on all views in the hiearchy), or
the given view is in the target list or the view id is in the
targetId list. If the target parameter is null, then the target list
is not checked (this is in the case of ListView items, where the
views are ignored and only the ids are used).

@hide
"
      end

      operation 5033733 "getRunningAnimators"
	class_operation private return_type class_ref 956293 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Animator, AnimationInfo> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5033861 "runAnimators"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This is called internally once all animations have been set up by the
transition hierarchy.

@hide
"
      end

      operation 5033989 "runAnimator"
	private explicit_return_type "void"
	nparams 2
	  param inout name "animator" type class_ref 1004677 // Animator
	  param in name "runningAnimators" type class_ref 956293 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1}<Animator, AnimationInfo> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5034117 "captureStartValues"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Captures the values in the start scene for the properties that this
transition monitors. These values are then passed as the startValues
structure in a later call to
{@link #createAnimator(ViewGroup, TransitionValues, TransitionValues)}.
The main concern for an implementation is what the
properties are that the transition cares about and what the values are
for all of those properties. The start and end values will be compared
later during the
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)}
method to determine what, if any, animations, should be run.

<p>Subclasses must implement this method. The method should only be called by the
transition system; it is not intended to be called from external classes.</p>

@param transitionValues The holder for any values that the Transition
wishes to store. Values are stored in the <code>values</code> field
of this TransitionValues object and are keyed from
a String value. For example, to store a view's rotation value,
a transition might call
<code>transitionValues.values.put(\"appname:transitionname:rotation\",
view.getRotation())</code>. The target view will already be stored in
the transitionValues structure when this method is called.

@see #captureEndValues(TransitionValues)
@see #createAnimator(ViewGroup, TransitionValues, TransitionValues)
"
      end

      operation 5034245 "captureEndValues"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Captures the values in the end scene for the properties that this
transition monitors. These values are then passed as the endValues
structure in a later call to
{@link #createAnimator(ViewGroup, TransitionValues, TransitionValues)}.
The main concern for an implementation is what the
properties are that the transition cares about and what the values are
for all of those properties. The start and end values will be compared
later during the
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)}
method to determine what, if any, animations, should be run.

<p>Subclasses must implement this method. The method should only be called by the
transition system; it is not intended to be called from external classes.</p>

@param transitionValues The holder for any values that the Transition
wishes to store. Values are stored in the <code>values</code> field
of this TransitionValues object and are keyed from
a String value. For example, to store a view's rotation value,
a transition might call
<code>transitionValues.values.put(\"appname:transitionname:rotation\",
view.getRotation())</code>. The target view will already be stored in
the transitionValues structure when this method is called.

@see #captureStartValues(TransitionValues)
@see #createAnimator(ViewGroup, TransitionValues, TransitionValues)
"
      end

      operation 5034373 "addTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds the id of a target view that this Transition is interested in
animating. By default, there are no targetIds, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targetIds constrains
the Transition to only listen for, and act on, views with these IDs.
Views with different IDs, or no IDs whatsoever, will be ignored.

<p>Note that using ids to specify targets implies that ids should be unique
within the view hierarchy underneath the scene root.</p>

@see View#getId()
@param targetId The id of a target view, must be a positive number.
@return The Transition to which the targetId is added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(someId);</code>
"
      end

      operation 5034501 "addTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "targetName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds the transitionName of a target view that this Transition is interested in
animating. By default, there are no targetNames, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targetNames constrains
the Transition to only listen for, and act on, views with these transitionNames.
Views with different transitionNames, or no transitionName whatsoever, will be ignored.

<p>Note that transitionNames should be unique within the view hierarchy.</p>

@see android.view.View#getTransitionName()
@param targetName The transitionName of a target view, must be non-null.
@return The Transition to which the target transitionName is added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(someName);</code>
"
      end

      operation 5034629 "addTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "targetType" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds the Class of a target view that this Transition is interested in
animating. By default, there are no targetTypes, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targetTypes constrains
the Transition to only listen for, and act on, views with these classes.
Views with different classes will be ignored.

<p>Note that any View that can be cast to targetType will be included, so
if targetType is <code>View.class</code>, all Views will be included.</p>

@see #addTarget(int)
@see #addTarget(android.view.View)
@see #excludeTarget(Class, boolean)
@see #excludeChildren(Class, boolean)

@param targetType The type to include when running this transition.
@return The Transition to which the target class was added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(ImageView.class);</code>
"
      end

      operation 5034757 "removeTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes the given targetId from the list of ids that this Transition
is interested in animating.

@param targetId The id of a target view, must be a positive number.
@return The Transition from which the targetId is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTargetId(someId);</code>
"
      end

      operation 5034885 "removeTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "targetName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes the given targetName from the list of transitionNames that this Transition
is interested in animating.

@param targetName The transitionName of a target view, must not be null.
@return The Transition from which the targetName is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTargetName(someName);</code>
"
      end

      operation 5035013 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param in name "targetId" explicit_type "int"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the given id to the list of target ids to exclude from this
transition. The <code>exclude</code> parameter specifies whether the target
should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeChildren(int, boolean)
@see #excludeTarget(View, boolean)
@see #excludeTarget(Class, boolean)

@param targetId The id of a target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 5035141 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param in name "targetName" explicit_type "String"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the given transitionName to the list of target transitionNames to exclude
from this transition. The <code>exclude</code> parameter specifies whether the target
should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded by their
id, their instance reference, their transitionName, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(View, boolean)
@see #excludeTarget(int, boolean)
@see #excludeTarget(Class, boolean)

@param targetName The name of a target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 5035269 "excludeChildren"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param in name "targetId" explicit_type "int"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the children of the given id to the list of targets to exclude
from this transition. The <code>exclude</code> parameter specifies whether
the children of the target should be added to or removed from the excluded list.
Excluding children in this way provides a simple mechanism for excluding all
children of specific targets, rather than individually excluding each
child individually.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(int, boolean)
@see #excludeChildren(View, boolean)
@see #excludeChildren(Class, boolean)

@param targetId The id of a target whose children should be ignored when running
this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded-child targets.
@return This transition object.
"
      end

      operation 5035397 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param inout name "target" type class_ref 970757 // View
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the given target to the list of targets to exclude from this
transition. The <code>exclude</code> parameter specifies whether the target
should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeChildren(View, boolean)
@see #excludeTarget(int, boolean)
@see #excludeTarget(Class, boolean)

@param target The target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 5035525 "excludeChildren"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param inout name "target" type class_ref 970757 // View
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the children of given target to the list of target children
to exclude from this transition. The <code>exclude</code> parameter specifies
whether the target should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(View, boolean)
@see #excludeChildren(int, boolean)
@see #excludeChildren(Class, boolean)

@param target The target to ignore when running this transition.
@param exclude Whether to add the target to or remove the target from the
current list of excluded targets.
@return This transition object.
"
      end

      operation 5035653 "excludeObject"
	class_operation private explicit_return_type "ArrayList<T>"
	nparams 3
	  param inout name "list" explicit_type "ArrayList<T>"
	  param inout name "target" explicit_type "T"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Utility method to manage the boilerplate code that is the same whether we
are excluding targets or their children.
"
      end

      operation 5035781 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param inout name "type" explicit_type "Class"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the given type to the list of types to exclude from this
transition. The <code>exclude</code> parameter specifies whether the target
type should be added to or removed from the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeChildren(Class, boolean)
@see #excludeTarget(int, boolean)
@see #excludeTarget(View, boolean)

@param type The type to ignore when running this transition.
@param exclude Whether to add the target type to or remove it from the
current list of excluded target types.
@return This transition object.
"
      end

      operation 5035909 "excludeChildren"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param inout name "type" explicit_type "Class"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether to add the given type to the list of types whose children should
be excluded from this transition. The <code>exclude</code> parameter
specifies whether the target type should be added to or removed from
the excluded list.

<p>Excluding targets is a general mechanism for allowing transitions to run on
a view hierarchy while skipping target views that should not be part of
the transition. For example, you may want to avoid animating children
of a specific ListView or Spinner. Views can be excluded either by their
id, or by their instance reference, or by the Class of that view
(eg, {@link Spinner}).</p>

@see #excludeTarget(Class, boolean)
@see #excludeChildren(int, boolean)
@see #excludeChildren(View, boolean)

@param type The type to ignore when running this transition.
@param exclude Whether to add the target type to or remove it from the
current list of excluded target types.
@return This transition object.
"
      end

      operation 5036037 "addTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "target" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the target view instances that this Transition is interested in
animating. By default, there are no targets, and a Transition will
listen for changes on every view in the hierarchy below the sceneRoot
of the Scene being transitioned into. Setting targets constrains
the Transition to only listen for, and act on, these views.
All other views will be ignored.

<p>The target list is like the {@link #addTarget(int) targetId}
list except this list specifies the actual View instances, not the ids
of the views. This is an important distinction when scene changes involve
view hierarchies which have been inflated separately; different views may
share the same id but not actually be the same instance. If the transition
should treat those views as the same, then {@link #addTarget(int)} should be used
instead of {@link #addTarget(View)}. If, on the other hand, scene changes involve
changes all within the same view hierarchy, among views which do not
necessarily have ids set on them, then the target list of views may be more
convenient.</p>

@see #addTarget(int)
@param target A View on which the Transition will act, must be non-null.
@return The Transition to which the target is added.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).addTarget(someView);</code>
"
      end

      operation 5036165 "removeTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "target" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes the given target from the list of targets that this Transition
is interested in animating.

@param target The target view, must be non-null.
@return Transition The Transition from which the target is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTarget(someView);</code>
"
      end

      operation 5036293 "removeTarget"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "target" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes the given target from the list of targets that this Transition
is interested in animating.

@param target The type of the target view, must be non-null.
@return Transition The Transition from which the target is removed.
Returning the same object makes it easier to chain calls during
construction, such as
<code>transitionSet.addTransitions(new Fade()).removeTarget(someType);</code>
"
      end

      operation 5036421 "getTargetIds"
	public explicit_return_type "List<Integer>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the list of target IDs that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target IDs
"
      end

      operation 5036549 "getTargets"
	public return_type class_ref 970757 // View
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the list of target views that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target views
"
      end

      operation 5036677 "getTargetNames"
	public explicit_return_type "List<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the list of target transitionNames that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target transitionNames
"
      end

      operation 5036805 "getTargetViewNames"
	public explicit_return_type "List<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "To be removed before L release.
@hide
"
      end

      operation 5036933 "getTargetTypes"
	public explicit_return_type "List<Class>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the list of target transitionNames that this transition limits itself to
tracking and animating. If the list is null or empty for
{@link #getTargetIds()}, {@link #getTargets()}, {@link #getTargetNames()}, and
{@link #getTargetTypes()} then this transition is
not limited to specific views, and will handle changes to any views
in the hierarchy of a scene change.

@return the list of target Types
"
      end

      operation 5037061 "captureValues"
	package explicit_return_type "void"
	nparams 2
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Recursive method that captures values for the given view and the
hierarchy underneath it.
@param sceneRoot The root of the view hierarchy being captured
@param start true if this capture is happening before the scene change,
false otherwise
"
      end

      operation 5037189 "addViewValues"
	class_operation package explicit_return_type "void"
	nparams 3
	  param inout name "transitionValuesMaps" type class_ref 1028869 // TransitionValuesMaps
	  param inout name "view" type class_ref 970757 // View
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5037317 "clearValues"
	package explicit_return_type "void"
	nparams 1
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Clear valuesMaps for specified start/end state

@param start true if the start values should be cleared, false otherwise
"
      end

      operation 5037445 "captureHierarchy"
	private explicit_return_type "void"
	nparams 2
	  param inout name "view" type class_ref 970757 // View
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Recursive method which captures values for an entire view hierarchy,
starting at some root view. Transitions without targetIDs will use this
method to capture values for all possible views.

@param view The view for which to capture values. Children of this View
will also be captured, recursively down to the leaf nodes.
@param start true if values are being captured in the start scene, false
otherwise.
"
      end

      operation 5037573 "getTransitionValues"
	public return_type class_ref 1029125 // TransitionValues
	nparams 2
	  param inout name "view" type class_ref 970757 // View
	  param inout name "start" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method can be called by transitions to get the TransitionValues for
any particular view during the transition-playing process. This might be
necessary, for example, to query the before/after state of related views
for a given transition.
"
      end

      operation 5037701 "getMatchedTransitionValues"
	package return_type class_ref 1029125 // TransitionValues
	nparams 2
	  param inout name "view" type class_ref 970757 // View
	  param inout name "viewInStart" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Find the matched start or end value for a given View. This is only valid
after playTransition starts. For example, it will be valid in
{@link #createAnimator(android.view.ViewGroup, TransitionValues, TransitionValues)}, but not
in {@link #captureStartValues(TransitionValues)}.

@param view The view to find the match for.
@param viewInStart Is View from the start values or end values.
@return The matching TransitionValues for view in either start or end values, depending
on viewInStart or null if there is no match for the given view.
"
      end

      operation 5037829 "pause"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Pauses this transition, sending out calls to {@link
TransitionListener#onTransitionPause(Transition)} to all listeners
and pausing all running animators started by this transition.

@hide
"
      end

      operation 5037957 "resume"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Resumes this transition, sending out calls to {@link
TransitionListener#onTransitionPause(Transition)} to all listeners
and pausing all running animators started by this transition.

@hide
"
      end

      operation 5038085 "playTransition"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called by TransitionManager to play the transition. This calls
createAnimators() to set things up and create all of the animations and then
runAnimations() to actually start the animations.
"
      end

      operation 5038213 "isTransitionRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Nullable ${t0} ${p0}, @Nullable ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns whether or not the transition should create an Animator, based on the values
captured during {@link #captureStartValues(TransitionValues)} and
{@link #captureEndValues(TransitionValues)}. The default implementation compares the
property values returned from {@link #getTransitionProperties()}, or all property values if
{@code getTransitionProperties()} returns null. Subclasses may override this method to
provide logic more specific to the transition implementation.

@param startValues the values from captureStartValues, This may be {@code null} if the
                   View did not exist in the start state.
@param endValues the values from captureEndValues. This may be {@code null} if the View
                 did not exist in the end state.
"
      end

      operation 5038341 "isValueChanged"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "oldValues" type class_ref 1029125 // TransitionValues
	  param inout name "newValues" type class_ref 1029125 // TransitionValues
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5038469 "animate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "animator" type class_ref 1004677 // Animator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This is a utility method used by subclasses to handle standard parts of
setting up and running an Animator: it sets the {@link #getDuration()
duration} and the {@link #getStartDelay() startDelay}, starts the
animation, and, when the animator ends, calls {@link #end()}.

@param animator The Animator to be run during this transition.

@hide
"
      end

      operation 5038597 "start"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method is called automatically by the transition and
TransitionSet classes prior to a Transition subclass starting;
subclasses should not need to call it directly.

@hide
"
      end

      operation 5038725 "end"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method is called automatically by the Transition and
TransitionSet classes when a transition finishes, either because
a transition did nothing (returned a null Animator from
{@link Transition#createAnimator(ViewGroup, TransitionValues,
TransitionValues)}) or because the transition returned a valid
Animator and end() was called in the onAnimationEnd()
callback of the AnimatorListener.

@hide
"
      end

      operation 5038853 "forceToEnd"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Force the transition to move to its end state, ending all the animators.

@hide
"
      end

      operation 5038981 "cancel"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method cancels a transition that is currently running.

@hide
"
      end

      operation 5039109 "addListener"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "listener" type class_ref 1028613 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds a listener to the set of listeners that are sent events through the
life of an animation, such as start, repeat, and end.

@param listener the listener to be added to the current set of listeners
for this animation.
@return This transition object.
"
      end

      operation 5039237 "removeListener"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "listener" type class_ref 1028613 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes a listener from the set listening to this animation.

@param listener the listener to be removed from the current set of
listeners for this transition.
@return This transition object.
"
      end

      operation 5039365 "setEpicenterCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "epicenterCallback" type class_ref 1029381 // EpicenterCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the callback to use to find the epicenter of a Transition. A null value indicates
that there is no epicenter in the Transition and onGetEpicenter() will return null.
Transitions like {@link android.transition.Explode} use a point or Rect to orient
the direction of travel. This is called the epicenter of the Transition and is
typically centered on a touched View. The
{@link android.transition.Transition.EpicenterCallback} allows a Transition to
dynamically retrieve the epicenter during a Transition.
@param epicenterCallback The callback to use to find the epicenter of the Transition.
"
      end

      operation 5039493 "getEpicenterCallback"
	public return_type class_ref 1029381 // EpicenterCallback
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the callback used to find the epicenter of the Transition.
Transitions like {@link android.transition.Explode} use a point or Rect to orient
the direction of travel. This is called the epicenter of the Transition and is
typically centered on a touched View. The
{@link android.transition.Transition.EpicenterCallback} allows a Transition to
dynamically retrieve the epicenter during a Transition.
@return the callback used to find the epicenter of the Transition.
"
      end

      operation 5039621 "getEpicenter"
	public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the epicenter as specified by the
{@link android.transition.Transition.EpicenterCallback} or null if no callback exists.
@return the epicenter as specified by the
{@link android.transition.Transition.EpicenterCallback} or null if no callback exists.
@see #setEpicenterCallback(android.transition.Transition.EpicenterCallback)
"
      end

      operation 5039749 "setPathMotion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pathMotion" type class_ref 1028741 // PathMotion
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the algorithm used to calculate two-dimensional interpolation.
<p>
    Transitions such as {@link android.transition.ChangeBounds} move Views, typically
    in a straight path between the start and end positions. Applications that desire to
    have these motions move in a curve can change how Views interpolate in two dimensions
    by extending PathMotion and implementing
    {@link android.transition.PathMotion#getPath(float, float, float, float)}.
</p>
<p>
    When describing in XML, use a nested XML tag for the path motion. It can be one of
    the built-in tags <code>arcMotion</code> or <code>patternPathMotion</code> or it can
    be a custom PathMotion using <code>pathMotion</code> with the <code>class</code>
    attributed with the fully-described class name. For example:</p>
<pre>
{@code
<changeBounds>
    <pathMotion class=\"my.app.transition.MyPathMotion\"/>
</changeBounds>
}
</pre>
<p>or</p>
<pre>
{@code
<changeBounds>
  <arcMotion android:minimumHorizontalAngle=\"15\"
    android:minimumVerticalAngle=\"0\" android:maximumAngle=\"90\"/>
</changeBounds>
}
</pre>

@param pathMotion Algorithm object to use for determining how to interpolate in two
                  dimensions. If null, a straight-path algorithm will be used.
@see android.transition.ArcMotion
@see PatternPathMotion
@see android.transition.PathMotion
"
      end

      operation 5039877 "getPathMotion"
	public return_type class_ref 1028741 // PathMotion
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the algorithm object used to interpolate along two dimensions. This is typically
used to determine the View motion between two points.

<p>
    When describing in XML, use a nested XML tag for the path motion. It can be one of
    the built-in tags <code>arcMotion</code> or <code>patternPathMotion</code> or it can
    be a custom PathMotion using <code>pathMotion</code> with the <code>class</code>
    attributed with the fully-described class name. For example:</p>
<pre>{@code
<changeBounds>
    <pathMotion class=\"my.app.transition.MyPathMotion\"/>
</changeBounds>}
</pre>
<p>or</p>
<pre>{@code
<changeBounds>
  <arcMotion android:minimumHorizontalAngle=\"15\"
             android:minimumVerticalAngle=\"0\"
             android:maximumAngle=\"90\"/>
</changeBounds>}
</pre>

@return The algorithm object used to interpolate along two dimensions.
@see android.transition.ArcMotion
@see PatternPathMotion
@see android.transition.PathMotion
"
      end

      operation 5040005 "setPropagation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionPropagation" type class_ref 1029253 // TransitionPropagation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the method for determining Animator start delays.
When a Transition affects several Views like {@link android.transition.Explode} or
{@link android.transition.Slide}, there may be a desire to have a \"wave-front\" effect
such that the Animator start delay depends on position of the View. The
TransitionPropagation specifies how the start delays are calculated.
@param transitionPropagation The class used to determine the start delay of
                             Animators created by this Transition. A null value
                             indicates that no delay should be used.
"
      end

      operation 5040133 "getPropagation"
	public return_type class_ref 1029253 // TransitionPropagation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the {@link android.transition.TransitionPropagation} used to calculate Animator start
delays.
When a Transition affects several Views like {@link android.transition.Explode} or
{@link android.transition.Slide}, there may be a desire to have a \"wave-front\" effect
such that the Animator start delay depends on position of the View. The
TransitionPropagation specifies how the start delays are calculated.
@return the {@link android.transition.TransitionPropagation} used to calculate Animator start
delays. This is null by default.
"
      end

      operation 5040261 "capturePropagationValues"
	package explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Captures TransitionPropagation values for the given view and the
hierarchy underneath it.
"
      end

      operation 5040389 "setSceneRoot"
	package return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5040517 "setCanRemoveViews"
	package explicit_return_type "void"
	nparams 1
	  param inout name "canRemoveViews" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5040645 "canRemoveViews"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5040773 "setNameOverrides"
	public explicit_return_type "void"
	nparams 1
	  param inout name "overrides" type class_ref 956293 // ArrayMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String, String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the shared element names -- a mapping from a name at the start state to
a different name at the end state.
@hide
"
      end

      operation 5040901 "getNameOverrides"
	public return_type class_ref 956293 // ArrayMap
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 5041029 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5041157 "clone"
	public return_type class_ref 990469 // Transition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 5041285 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the name of this Transition. This name is used internally to distinguish
between different transitions to determine when interrupting transitions overlap.
For example, a ChangeBounds running on the same target view as another ChangeBounds
should determine whether the old transition is animating to different end values
and should be canceled in favor of the new transition.

<p>By default, a Transition's name is simply the value of {@link Class#getName()},
but subclasses are free to override and return something different.</p>

@return The name of this transition.
"
      end

      operation 5041413 "toString"
	package explicit_return_type "String"
	nparams 1
	  param in name "indent" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      class 1029637 "AnimationInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1471877 // view (<unidirectional association>)
	  relation 1471877 --->
	    a role_name "view" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1471877 // view (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	attribute 3325317 "name"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1472005 // values (<unidirectional association>)
	  relation 1472005 --->
	    a role_name "values" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1472005 // values (<unidirectional association>)
	    b parent class_ref 1029125 // TransitionValues
	end

	classrelation 1472133 // windowId (<unidirectional association>)
	  relation 1472133 --->
	    a role_name "windowId" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1472133 // windowId (<unidirectional association>)
	    b parent class_ref 983557 // WindowId
	end

	classrelation 1472261 // transition (<unidirectional association>)
	  relation 1472261 --->
	    a role_name "transition" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1472261 // transition (<unidirectional association>)
	    b parent class_ref 990469 // Transition
	end

	operation 5042181 "AnimationInfo"
	  package explicit_return_type ""
	  nparams 5
	    param inout name "view" type class_ref 970757 // View
	    param in name "name" explicit_type "String"
	    param inout name "transition" type class_ref 990469 // Transition
	    param inout name "windowId" type class_ref 983557 // WindowId
	    param inout name "values" type class_ref 1029125 // TransitionValues
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 1029765 "ArrayListManager"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 5042309 "add"
	  class_operation package explicit_return_type "ArrayList<T>"
	  nparams 2
	    param inout name "list" explicit_type "ArrayList<T>"
	    param inout name "item" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Add the specified item to the list, returning the resulting list.
The returned list can either the be same list passed in or, if that
list was null, the new list that was created.

Note that the list holds unique items; if the item already exists in the
list, the list is not modified.
"
	end

	operation 5042437 "remove"
	  class_operation package explicit_return_type "ArrayList<T>"
	  nparams 2
	    param inout name "list" explicit_type "ArrayList<T>"
	    param inout name "item" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Remove the specified item from the list, returning the resulting list.
The returned list can either the be same list passed in or, if that
list becomes empty as a result of the remove(), the new list was created.
"
	end
      end
    end

    class 1028485 "TransitionListenerAdapter"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This adapter class provides empty implementations of the methods from {@link
android.transition.Transition.TransitionListener}.
Any custom listener that cares only about a subset of the methods of this listener can
simply subclass this adapter class instead of implementing the interface directly.
"
      classrelation 1472389 // <realization>
	relation 1472389 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1472389 // <realization>
	  b parent class_ref 1028613 // TransitionListener
      end

      operation 5042693 "onTransitionStart"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "{@inheritDoc}
"
      end

      operation 5042821 "onTransitionEnd"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "{@inheritDoc}
"
      end

      operation 5042949 "onTransitionCancel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "{@inheritDoc}
"
      end

      operation 5043077 "onTransitionPause"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "{@inheritDoc}
"
      end

      operation 5043205 "onTransitionResume"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "{@inheritDoc}
"
      end
    end

    class 1028741 "PathMotion"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This base class can be extended to provide motion along a Path to Transitions.

<p>
Transitions such as {@link android.transition.ChangeBounds} move Views, typically
in a straight path between the start and end positions. Applications that desire to
have these motions move in a curve can change how Views interpolate in two dimensions
by extending PathMotion and implementing {@link #getPath(float, float, float, float)}.
</p>
<p>This may be used in XML as an element inside a transition.</p>
<pre>
{@code
<changeBounds>
    <pathMotion class=\"my.app.transition.MyPathMotion\"/>
</changeBounds>
}
</pre>
"
      operation 8367109 "PathMotion"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8367237 "PathMotion"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8367365 "getPath"
	abstract public explicit_return_type "Path"
	nparams 4
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Provide a Path to interpolate between two points <code>(startX, startY)</code> and
<code>(endX, endY)</code>. This allows controlled curved motion along two dimensions.

@param startX The x coordinate of the starting point.
@param startY The y coordinate of the starting point.
@param endX   The x coordinate of the ending point.
@param endY   The y coordinate of the ending point.
@return A Path along which the points should be interpolated. The returned Path
must start at point <code>(startX, startY)</code>, typically using
{@link android.graphics.Path#moveTo(float, float)} and end at <code>(endX, endY)</code>.
"
      end
    end

    class 1028869 "TransitionValuesMaps"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 2176005 // viewValues (<unidirectional association>)
	relation 2176005 --->
	  a role_name "viewValues" init_value "
            new ArrayMap<View, TransitionValues>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, TransitionValues> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2176005 // viewValues (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end

      classrelation 2176133 // idValues (<unidirectional association>)
	relation 2176133 --->
	  a role_name "idValues" init_value " new SparseArray<View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2176133 // idValues (<unidirectional association>)
	  b parent class_ref 964101 // SparseArray
      end

      classrelation 2176261 // itemIdValues (<unidirectional association>)
	relation 2176261 --->
	  a role_name "itemIdValues" init_value " new LongSparseArray<View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2176261 // itemIdValues (<unidirectional association>)
	  b parent class_ref 1029509 // LongSparseArray
      end

      classrelation 2176389 // nameValues (<unidirectional association>)
	relation 2176389 --->
	  a role_name "nameValues" init_value " new ArrayMap<String, View>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, View> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2176389 // nameValues (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end
    end

    class 1028997 "TransitionSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A TransitionSet is a parent of child transitions (including other
TransitionSets). Using TransitionSets enables more complex
choreography of transitions, where some sets play {@link #ORDERING_TOGETHER} and
others play {@link #ORDERING_SEQUENTIAL}. For example, {@link AutoTransition}
uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by
a {@link ChangeBounds}, followed by a Fade(Fade.OUT) transition.

<p>A TransitionSet can be described in a resource file by using the
tag <code>transitionSet</code>, along with the standard
attributes of {@link android.R.styleable#TransitionSet} and
{@link android.R.styleable#Transition}. Child transitions of the
TransitionSet object can be loaded by adding those child tags inside the
enclosing <code>transitionSet</code> tag. For example, the following xml
describes a TransitionSet that plays a Fade and then a ChangeBounds
transition on the affected view targets:</p>
<pre>
    &lt;transitionSet xmlns:android=\"http://schemas.android.com/apk/res/android\"
            android:transitionOrdering=\"sequential\"&gt;
        &lt;fade/&gt;
        &lt;changeBounds/&gt;
    &lt;/transitionSet&gt;
</pre>
"
      classrelation 2165893 // <generalisation>
	relation 2165893 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2165893 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      classrelation 2166021 // mTransitions (<unidirectional association>)
	relation 2166021 --->
	  stereotype "ArrayList"
	  a role_name "mTransitions" init_value " new ArrayList<Transition>()" package
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2166021 // mTransitions (<unidirectional association>)
	  b parent class_ref 990469 // Transition
      end

      attribute 5531653 "mPlayTogether"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531781 "mCurrentListeners"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531909 "mStarted"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5532037 "ORDERING_TOGETHER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A flag used to indicate that the child transitions of this set
should all start at the same time.

"
      end

      attribute 5532165 "ORDERING_SEQUENTIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A flag used to indicate that the child transitions of this set should
play in sequence; when one child transition ends, the next child
transition begins. Note that a transition does not end until all
instances of it (which are playing on all applicable targets of the
transition) end.

"
      end

      operation 8368773 "TransitionSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs an empty transition set. Add child transitions to the
set by calling {@link #addTransition(Transition)} )}. By default,
child transitions will play {@link #ORDERING_TOGETHER together}.
"
      end

      operation 8368901 "TransitionSet"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8369029 "setOrdering"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "ordering" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the play order of this set's child transitions.

@param ordering {@link #ORDERING_TOGETHER} to play this set's child
transitions together, {@link #ORDERING_SEQUENTIAL} to play the child
transitions in sequence.
@return This transitionSet object.
"
      end

      operation 8369157 "getOrdering"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the ordering of this TransitionSet. By default, the value is
{@link #ORDERING_TOGETHER}.

@return {@link #ORDERING_TOGETHER} if child transitions will play at the same
time, {@link #ORDERING_SEQUENTIAL} if they will play in sequence.

@see #setOrdering(int)
"
      end

      operation 8369285 "addTransition"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds child transition to this set. The order in which this child transition
is added relative to other child transitions that are added, in addition to
the {@link #getOrdering() ordering} property, determines the
order in which the transitions are started.

<p>If this transitionSet has a {@link #getDuration() duration} set on it, the
child transition will inherit that duration. Transitions are assumed to have
a maximum of one transitionSet parent.</p>

@param transition A non-null child transition to be added to this set.
@return This transitionSet object.
"
      end

      operation 8369413 "getTransitionCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the number of child transitions in the TransitionSet.

@return The number of child transitions in the TransitionSet.
@see #addTransition(Transition)
@see #getTransitionAt(int)
"
      end

      operation 8369541 "getTransitionAt"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the child Transition at the specified position in the TransitionSet.

@param index The position of the Transition to retrieve.
@see #addTransition(Transition)
@see #getTransitionCount()
"
      end

      operation 8369669 "setDuration"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "duration" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Setting a non-negative duration on a TransitionSet causes all of the child
transitions (current and future) to inherit this duration.

@param duration The length of the animation, in milliseconds.
@return This transitionSet object.
"
      end

      operation 8369797 "setStartDelay"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "startDelay" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8369925 "setInterpolator"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "interpolator" type class_ref 1005317 // TimeInterpolator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370053 "addTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "target" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370181 "addTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370309 "addTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "targetName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370437 "addTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "targetType" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370565 "addListener"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "listener" type class_ref 1028613 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370693 "removeTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "targetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370821 "removeTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "target" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8370949 "removeTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "target" explicit_type "Class"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371077 "removeTarget"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param in name "target" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371205 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param inout name "target" type class_ref 970757 // View
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371333 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param in name "targetName" explicit_type "String"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371461 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param in name "targetId" explicit_type "int"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371589 "excludeTarget"
	public return_type class_ref 990469 // Transition
	nparams 2
	  param inout name "type" explicit_type "Class"
	  param inout name "exclude" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371717 "removeListener"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "listener" type class_ref 1028613 // TransitionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371845 "setPathMotion"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pathMotion" type class_ref 1028741 // PathMotion
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8371973 "removeTransition"
	public return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes the specified child transition from this set.

@param transition The transition to be removed.
@return This transitionSet object.
"
      end

      operation 8372101 "setupStartEndListeners"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets up listeners for each of the child transitions. This is used to
determine when this transition set is finished (all child transitions
must finish first).
"
      end

      class 1391749 "TransitionSetListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2166149 // <generalisation>
	  relation 2166149 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2166149 // <generalisation>
	    b parent class_ref 1028485 // TransitionListenerAdapter
	end

	classrelation 2166277 // mTransitionSet (<unidirectional association>)
	  relation 2166277 --->
	    a role_name "mTransitionSet" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2166277 // mTransitionSet (<unidirectional association>)
	    b parent class_ref 1028997 // TransitionSet
	end

	operation 8372229 "TransitionSetListener"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "transitionSet" type class_ref 1028997 // TransitionSet
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8372357 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8372485 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      operation 8372613 "createAnimators"
	protected explicit_return_type "void"
	nparams 5
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1028869 // TransitionValuesMaps
	  param inout name "endValues" type class_ref 1028869 // TransitionValuesMaps
	  param inout name "startValuesList" explicit_type "ArrayList<TransitionValues>"
	  param inout name "endValuesList" explicit_type "ArrayList<TransitionValues>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 8372741 "runAnimators"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 8372869 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8372997 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8373125 "capturePropagationValues"
	package explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8373253 "pause"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 8373381 "resume"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 8373509 "cancel"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 8373637 "forceToEnd"
	package explicit_return_type "void"
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 8373765 "setSceneRoot"
	package return_type class_ref 1028997 // TransitionSet
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8373893 "setCanRemoveViews"
	package explicit_return_type "void"
	nparams 1
	  param inout name "canRemoveViews" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8374021 "setPropagation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "propagation" type class_ref 1029253 // TransitionPropagation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8374149 "setEpicenterCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "epicenterCallback" type class_ref 1029381 // EpicenterCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8374277 "toString"
	package explicit_return_type "String"
	nparams 1
	  param in name "indent" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8374405 "clone"
	public return_type class_ref 1028997 // TransitionSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1029125 "TransitionValues"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Data structure which holds cached values for the transition.
The view field is the target which all of the values pertain to.
The values field is a map which holds information for fields
according to names selected by the transitions. These names should
be unique to avoid clobbering values stored by other transitions,
such as the convention project:transition_name:property_name. For
example, the platform might store a property \"alpha\" in a transition
\"Fader\" as \"android:fader:alpha\".

<p>These values are cached during the
{@link Transition#captureStartValues(TransitionValues)}
capture} phases of a scene change, once when the start values are captured
and again when the end values are captured. These start/end values are then
passed into the transitions via the
for {@link Transition#createAnimator(ViewGroup, TransitionValues, TransitionValues)}
method.</p>
"
      classrelation 2175749 // view (<unidirectional association>)
	relation 2175749 --->
	  a role_name "view" public
	    comment "
The View with these values

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2175749 // view (<unidirectional association>)
	  b parent class_ref 970757 // View
      end

      attribute 5548421 "values"
	const_attribute public explicit_type "String, Object"
	init_value " new ArrayMap<String, Object>()"
	stereotype "Map"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The set of values tracked by transitions for this scene

"
      end

      classrelation 2175877 // targetedTransitions (<unidirectional association>)
	relation 2175877 --->
	  stereotype "ArrayList"
	  a role_name "targetedTransitions" init_value " new ArrayList<Transition>()" const_relation package
	    comment "The Transitions that targeted this view.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2175877 // targetedTransitions (<unidirectional association>)
	  b parent class_ref 990469 // Transition
      end

      operation 8403973 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8404101 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8404229 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1029253 "TransitionPropagation"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Extend <code>TransitionPropagation</code> to customize start delays for Animators created
in {@link android.transition.Transition#createAnimator(ViewGroup,
TransitionValues, TransitionValues)}. A Transition such as {@link android.transition.Explode}
defaults to using {@link android.transition.CircularPropagation} and Views closer to the
epicenter will move out of the scene later and into the scene sooner than Views farther
from the epicenter, giving the appearance of inertia. With no TransitionPropagation, all
Views will react simultaneously to the start of the transition.

@see Transition#setPropagation(TransitionPropagation)
@see Transition#getEpicenter()
"
      operation 8384517 "getStartDelay"
	abstract public explicit_return_type "long"
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "transition" type class_ref 990469 // Transition
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called by Transition to alter the Animator start delay. All start delays will be adjusted
such that the minimum becomes zero.
@param sceneRoot The root of the View hierarchy running the transition.
@param transition The transition that created the Animator
@param startValues The values for a specific target in the start scene.
@param endValues The values for the target in the end scene.
@return A start delay to use with the Animator created by <code>transition</code>. The
delay will be offset by the minimum delay of all <code>TransitionPropagation</code>s
used in the Transition so that the smallest delay will be 0. Returned values may be
negative.
"
      end

      operation 8384645 "captureValues"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Captures the values in the start or end scene for the properties that this
transition propagation monitors. These values are then passed as the startValues
or endValues structure in a later call to
{@link #getStartDelay(ViewGroup, Transition, TransitionValues, TransitionValues)}.
The main concern for an implementation is what the
properties are that the transition cares about and what the values are
for all of those properties. The start and end values will be compared
later during the
{@link #getStartDelay(ViewGroup, Transition, TransitionValues, TransitionValues)}.
method to determine the start delay.

<p>Subclasses must implement this method. The method should only be called by the
transition system; it is not intended to be called from external classes.</p>

@param transitionValues The holder for any values that the Transition
wishes to store. Values are stored in the <code>values</code> field
of this TransitionValues object and are keyed from
a String value. For example, to store a view's rotation value,
a transition might call
<code>transitionValues.values.put(\"appname:transitionname:rotation\",
view.getRotation())</code>. The target view will already be stored in
the transitionValues structure when this method is called.
"
      end

      operation 8384773 "getPropagationProperties"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the set of property names stored in the {@link TransitionValues}
object passed into {@link #captureValues(TransitionValues)} that
this transition propagation cares about for the purposes of preventing
duplicate capturing of property values.

<p>A <code>TransitionPropagation</code> must override this method to prevent
duplicate capturing of values and must contain at least one </p>

@return An array of property names as described in the class documentation for
{@link TransitionValues}.
"
      end
    end

    class 1391493 "ArcMotion"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PathMotion that generates a curved path along an arc on an imaginary circle containing
the two points. If the horizontal distance between the points is less than the vertical
distance, then the circle's center point will be horizontally aligned with the end point. If the
vertical distance is less than the horizontal distance then the circle's center point
will be vertically aligned with the end point.
<p>
When the two points are near horizontal or vertical, the curve of the motion will be
small as the center of the circle will be far from both points. To force curvature of
the path, {@link #setMinimumHorizontalAngle(float)} and
{@link #setMinimumVerticalAngle(float)} may be used to set the minimum angle of the
arc between two points.
</p>
<p>This may be used in XML as an element inside a transition.</p>
<pre>{@code
<changeBounds>
  <arcMotion android:minimumHorizontalAngle=\"15\"
             android:minimumVerticalAngle=\"0\"
             android:maximumAngle=\"90\"/>
</changeBounds>}
</pre>
"
      classrelation 2165765 // <generalisation>
	relation 2165765 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2165765 // <generalisation>
	  b parent class_ref 1028741 // PathMotion
      end

      attribute 5530501 "DEFAULT_MIN_ANGLE_DEGREES"
	class_attribute const_attribute private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5530629 "DEFAULT_MAX_ANGLE_DEGREES"
	class_attribute const_attribute private explicit_type "float"
	init_value " 70"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5530757 "DEFAULT_MAX_TANGENT"
	class_attribute const_attribute private explicit_type "float"
	init_value " (float)
            Math.tan(Math.toRadians(DEFAULT_MAX_ANGLE_DEGREES/2))"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5530885 "mMinimumHorizontalAngle"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531013 "mMinimumVerticalAngle"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531141 "mMaximumAngle"
	private explicit_type "float"
	init_value " DEFAULT_MAX_ANGLE_DEGREES"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531269 "mMinimumHorizontalTangent"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531397 "mMinimumVerticalTangent"
	private explicit_type "float"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5531525 "mMaximumTangent"
	private explicit_type "float"
	init_value " DEFAULT_MAX_TANGENT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8367493 "ArcMotion"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8367621 "ArcMotion"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8367749 "setMinimumHorizontalAngle"
	public explicit_return_type "void"
	nparams 1
	  param in name "angleInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the minimum arc along the circle between two points aligned near horizontally.
When start and end points are close to horizontal, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@param angleInDegrees The minimum angle of the arc on a circle describing the Path
                      between two nearly horizontally-separated points.
@attr ref android.R.styleable#ArcMotion_minimumHorizontalAngle
"
      end

      operation 8367877 "getMinimumHorizontalAngle"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the minimum arc along the circle between two points aligned near horizontally.
When start and end points are close to horizontal, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@return  The minimum arc along the circle between two points aligned near horizontally.
@attr ref android.R.styleable#ArcMotion_minimumHorizontalAngle
"
      end

      operation 8368005 "setMinimumVerticalAngle"
	public explicit_return_type "void"
	nparams 1
	  param in name "angleInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the minimum arc along the circle between two points aligned near vertically.
When start and end points are close to vertical, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@param angleInDegrees The minimum angle of the arc on a circle describing the Path
                      between two nearly vertically-separated points.
@attr ref android.R.styleable#ArcMotion_minimumVerticalAngle
"
      end

      operation 8368133 "getMinimumVerticalAngle"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the minimum arc along the circle between two points aligned near vertically.
When start and end points are close to vertical, the calculated center point of the
circle will be far from both points, giving a near straight path between the points.
By setting a minimum angle, this forces the center point to be closer and give an
exaggerated curve to the path.
<p>The default value is 0.</p>

@return The minimum angle of the arc on a circle describing the Path
        between two nearly vertically-separated points.
@attr ref android.R.styleable#ArcMotion_minimumVerticalAngle
"
      end

      operation 8368261 "setMaximumAngle"
	public explicit_return_type "void"
	nparams 1
	  param in name "angleInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the maximum arc along the circle between two points. When start and end points
have close to equal x and y differences, the curve between them is large. This forces
the curved path to have an arc of at most the given angle.
<p>The default value is 70 degrees.</p>

@param angleInDegrees The maximum angle of the arc on a circle describing the Path
                      between the start and end points.
@attr ref android.R.styleable#ArcMotion_maximumAngle
"
      end

      operation 8368389 "getMaximumAngle"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the maximum arc along the circle between two points. When start and end points
have close to equal x and y differences, the curve between them is large. This forces
the curved path to have an arc of at most the given angle.
<p>The default value is 70 degrees.</p>

@return The maximum angle of the arc on a circle describing the Path
        between the start and end points.
@attr ref android.R.styleable#ArcMotion_maximumAngle
"
      end

      operation 8368517 "toTangent"
	class_operation private explicit_return_type "float"
	nparams 1
	  param in name "arcInDegrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8368645 "getPath"
	public explicit_return_type "Path"
	nparams 4
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1391621 "AutoTransition"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Utility class for creating a default transition that automatically fades,
moves, and resizes views during a scene change.

<p>An AutoTransition can be described in a resource file by using the
tag <code>autoTransition</code>, along with the other standard
attributes of {@link android.R.styleable#Transition}.</p>
"
      classrelation 2166405 // <generalisation>
	relation 2166405 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2166405 // <generalisation>
	  b parent class_ref 1028997 // TransitionSet
      end

      operation 8374533 "AutoTransition"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs an AutoTransition object, which is a TransitionSet which
first fades out disappearing targets, then moves and resizes existing
targets, and finally fades in appearing targets.

"
      end

      operation 8374661 "AutoTransition"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8374789 "init"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1391877 "ChangeBounds"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures the layout bounds of target views before and after
the scene change and animates those changes during the transition.

<p>A ChangeBounds transition can be described in a resource file by using the
tag <code>changeBounds</code>, using its attributes of
{@link android.R.styleable#ChangeBounds} along with the other standard
attributes of {@link android.R.styleable#Transition}.</p>
"
      classrelation 2166533 // <generalisation>
	relation 2166533 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2166533 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5532293 "PROPNAME_BOUNDS"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeBounds:bounds\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5532421 "PROPNAME_CLIP"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeBounds:clip\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5532549 "PROPNAME_PARENT"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeBounds:parent\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5532677 "PROPNAME_WINDOW_X"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeBounds:windowX\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5532805 "PROPNAME_WINDOW_Y"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeBounds:windowY\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5532933 "sTransitionProperties"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_BOUNDS,
            PROPNAME_CLIP,
            PROPNAME_PARENT,
            PROPNAME_WINDOW_X,
            PROPNAME_WINDOW_Y
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2166661 // DRAWABLE_ORIGIN_PROPERTY (<unidirectional association>)
	relation 2166661 --->
	  a role_name "DRAWABLE_ORIGIN_PROPERTY" init_value "
            new Property<Drawable, PointF>(PointF.class, \"boundsOrigin\") {
                private Rect mBounds = new Rect();

                @Override
                public void set(Drawable object, PointF value) {
                    object.copyBounds(mBounds);
                    mBounds.offsetTo(Math.round(value.x), Math.round(value.y));
                    object.setBounds(mBounds);
                }

                @Override
                public PointF get(Drawable object) {
                    object.copyBounds(mBounds);
                    return new PointF(mBounds.left, mBounds.top);
                }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Drawable, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2166661 // DRAWABLE_ORIGIN_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      class 1392005 "ViewBounds"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 5533573 "mLeft"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5533701 "mTop"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5533829 "mRight"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5533957 "mBottom"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2167557 // mView (<unidirectional association>)
	  relation 2167557 --->
	    a role_name "mView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2167557 // mView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	attribute 5534085 "mTopLeftCalls"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5534213 "mBottomRightCalls"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8376325 "ViewBounds"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" type class_ref 970757 // View
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8376453 "setTopLeft"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "topLeft" explicit_type "PointF"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8376581 "setBottomRight"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "bottomRight" explicit_type "PointF"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8376709 "setLeftTopRightBottom"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      classrelation 2166789 // TOP_LEFT_PROPERTY (<unidirectional association>)
	relation 2166789 --->
	  a role_name "TOP_LEFT_PROPERTY" init_value "
            new Property<ViewBounds, PointF>(PointF.class, \"topLeft\") {
                @Override
                public void set(ViewBounds viewBounds, PointF topLeft) {
                    viewBounds.setTopLeft(topLeft);
                }

                @Override
                public PointF get(ViewBounds viewBounds) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ViewBounds, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2166789 // TOP_LEFT_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      classrelation 2166917 // BOTTOM_RIGHT_PROPERTY (<unidirectional association>)
	relation 2166917 --->
	  a role_name "BOTTOM_RIGHT_PROPERTY" init_value "
            new Property<ViewBounds, PointF>(PointF.class, \"bottomRight\") {
                @Override
                public void set(ViewBounds viewBounds, PointF bottomRight) {
                    viewBounds.setBottomRight(bottomRight);
                }

                @Override
                public PointF get(ViewBounds viewBounds) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ViewBounds, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2166917 // BOTTOM_RIGHT_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      classrelation 2167045 // BOTTOM_RIGHT_ONLY_PROPERTY (<unidirectional association>)
	relation 2167045 --->
	  a role_name "BOTTOM_RIGHT_ONLY_PROPERTY" init_value "
            new Property<View, PointF>(PointF.class, \"bottomRight\") {
                @Override
                public void set(View view, PointF bottomRight) {
                    int left = view.getLeft();
                    int top = view.getTop();
                    int right = Math.round(bottomRight.x);
                    int bottom = Math.round(bottomRight.y);
                    view.setLeftTopRightBottom(left, top, right, bottom);
                }

                @Override
                public PointF get(View view) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2167045 // BOTTOM_RIGHT_ONLY_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      classrelation 2167173 // TOP_LEFT_ONLY_PROPERTY (<unidirectional association>)
	relation 2167173 --->
	  a role_name "TOP_LEFT_ONLY_PROPERTY" init_value "
            new Property<View, PointF>(PointF.class, \"topLeft\") {
                @Override
                public void set(View view, PointF topLeft) {
                    int left = Math.round(topLeft.x);
                    int top = Math.round(topLeft.y);
                    int right = view.getRight();
                    int bottom = view.getBottom();
                    view.setLeftTopRightBottom(left, top, right, bottom);
                }

                @Override
                public PointF get(View view) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2167173 // TOP_LEFT_ONLY_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      classrelation 2167301 // POSITION_PROPERTY (<unidirectional association>)
	relation 2167301 --->
	  a role_name "POSITION_PROPERTY" init_value "
            new Property<View, PointF>(PointF.class, \"position\") {
                @Override
                public void set(View view, PointF topLeft) {
                    int left = Math.round(topLeft.x);
                    int top = Math.round(topLeft.y);
                    int right = left + view.getWidth();
                    int bottom = top + view.getHeight();
                    view.setLeftTopRightBottom(left, top, right, bottom);
                }

                @Override
                public PointF get(View view) {
                    return null;
                }
            }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<View, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2167301 // POSITION_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      attribute 5533061 "tempLocation"
	package explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5533189 "mResizeClip"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5533317 "mReparent"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5533445 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ChangeBounds\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2167429 // sRectEvaluator (<unidirectional association>)
	relation 2167429 --->
	  a role_name "sRectEvaluator" init_value " new RectEvaluator()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2167429 // sRectEvaluator (<unidirectional association>)
	  b parent class_ref 1013509 // RectEvaluator
      end

      operation 8374917 "ChangeBounds"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8375045 "ChangeBounds"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8375173 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8375301 "setResizeClip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resizeClip" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "When <code>resizeClip</code> is true, ChangeBounds resizes the view using the clipBounds
instead of changing the dimensions of the view during the animation. When
<code>resizeClip</code> is false, ChangeBounds resizes the View by changing its dimensions.

<p>When resizeClip is set to true, the clip bounds is modified by ChangeBounds. Therefore,
{@link android.transition.ChangeClipBounds} is not compatible with ChangeBounds
in this mode.</p>

@param resizeClip Used to indicate whether the view bounds should be modified or the
                  clip bounds should be modified by ChangeBounds.
@see android.view.View#setClipBounds(android.graphics.Rect)
@attr ref android.R.styleable#ChangeBounds_resizeClip
"
      end

      operation 8375429 "getResizeClip"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns true when the ChangeBounds will resize by changing the clip bounds during the
view animation or false when bounds are changed. The default value is false.

@return true when the ChangeBounds will resize by changing the clip bounds during the
view animation or false when bounds are changed. The default value is false.
@attr ref android.R.styleable#ChangeBounds_resizeClip
"
      end

      operation 8375557 "setReparent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reparent" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Setting this flag tells ChangeBounds to track the before/after parent
of every view using this transition. The flag is not enabled by
default because it requires the parent instances to be the same
in the two scenes or else all parents must use ids to allow
the transition to determine which parents are the same.

@param reparent true if the transition should track the parent
container of target views and animate parent changes.
@deprecated Use {@link android.transition.ChangeTransform} to handle
transitions between different parents.
"
      end

      operation 8375685 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8375813 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8375941 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8376069 "parentMatches"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "startParent" type class_ref 970757 // View
	  param inout name "endParent" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8376197 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1392133 "ChangeClipBounds"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "ChangeClipBounds captures the {@link android.view.View#getClipBounds()} before and after the
scene change and animates those changes during the transition.
"
      classrelation 2167685 // <generalisation>
	relation 2167685 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2167685 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5534341 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ChangeTransform\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5534469 "PROPNAME_CLIP"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:clipBounds:clip\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5534597 "PROPNAME_BOUNDS"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:clipBounds:bounds\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5534725 "sTransitionProperties"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_CLIP,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8376837 "ChangeClipBounds"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8376965 "ChangeClipBounds"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377093 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377221 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377349 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377477 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377605 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1392261 "ChangeImageTransform"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This Transition captures an ImageView's matrix before and after the
scene change and animates it during the transition.

<p>In combination with ChangeBounds, ChangeImageTransform allows ImageViews
that change size, shape, or {@link android.widget.ImageView.ScaleType} to animate contents
smoothly.</p>
"
      classrelation 2167813 // <generalisation>
	relation 2167813 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2167813 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5534853 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ChangeImageTransform\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5534981 "PROPNAME_MATRIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeImageTransform:matrix\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5535109 "PROPNAME_BOUNDS"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeImageTransform:bounds\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5535237 "sTransitionProperties"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_MATRIX,
            PROPNAME_BOUNDS,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2167941 // NULL_MATRIX_EVALUATOR (<unidirectional association>)
	relation 2167941 --->
	  a role_name "NULL_MATRIX_EVALUATOR" init_value " new TypeEvaluator<Matrix>() {
        @Override
        public Matrix evaluate(float fraction, Matrix startValue, Matrix endValue) {
            return null;
        }
    }" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Matrix> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2167941 // NULL_MATRIX_EVALUATOR (<unidirectional association>)
	  b parent class_ref 1006085 // TypeEvaluator
      end

      classrelation 2168069 // ANIMATED_TRANSFORM_PROPERTY (<unidirectional association>)
	relation 2168069 --->
	  a role_name "ANIMATED_TRANSFORM_PROPERTY" init_value " new Property<ImageView, Matrix>(Matrix.class, \"animatedTransform\") {
        @Override
        public void set(ImageView object, Matrix value) {
            object.animateTransform(value);
        }

        @Override
        public Matrix get(ImageView object) {
            return null;
        }
    }" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ImageView, Matrix> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2168069 // ANIMATED_TRANSFORM_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      operation 8377733 "ChangeImageTransform"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377861 "ChangeImageTransform"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8377989 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8378117 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8378245 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8378373 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8378501 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates an Animator for ImageViews moving, changing dimensions, and/or changing
{@link android.widget.ImageView.ScaleType}.

@param sceneRoot   The root of the transition hierarchy.
@param startValues The values for a specific target in the start scene.
@param endValues   The values for the target in the end scene.
@return An Animator to move an ImageView or null if the View is not an ImageView,
the Drawable changed, the View is not VISIBLE, or there was no change.
"
      end

      operation 8378629 "createNullAnimator"
	private return_type class_ref 1004421 // ObjectAnimator
	nparams 1
	  param inout name "imageView" type class_ref 1000325 // ImageView
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8378757 "createMatrixAnimator"
	private return_type class_ref 1004421 // ObjectAnimator
	nparams 3
	  param in name "imageView" type class_ref 1000325 // ImageView
	  param inout name "startMatrix" explicit_type "Matrix"
	  param in name "endMatrix" explicit_type "Matrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1392389 "ChangeScroll"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures the scroll properties of targets before and after
the scene change and animates any changes.
"
      classrelation 2168197 // <generalisation>
	relation 2168197 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2168197 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5535365 "PROPNAME_SCROLL_X"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeScroll:x\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5535493 "PROPNAME_SCROLL_Y"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeScroll:y\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5535621 "PROPERTIES"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_SCROLL_X,
            PROPNAME_SCROLL_Y,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8378885 "ChangeScroll"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8379013 "ChangeScroll"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8379141 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8379269 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8379397 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8379525 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8379653 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1392517 "ChangeText"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the text in TextView targets. If the text
changes between the start and end scenes, the transition ensures that the
starting text stays until the transition ends, at which point it changes
to the end text.  This is useful in situations where you want to resize a
text view to its new size before displaying the text that goes there.

@hide
"
      classrelation 2168325 // <generalisation>
	relation 2168325 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2168325 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5535749 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"TextChange\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5535877 "PROPNAME_TEXT"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:textchange:text\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5536005 "PROPNAME_TEXT_SELECTION_START"
	class_attribute const_attribute private explicit_type "String"
	init_value "
            \"android:textchange:textSelectionStart\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5536133 "PROPNAME_TEXT_SELECTION_END"
	class_attribute const_attribute private explicit_type "String"
	init_value "
            \"android:textchange:textSelectionEnd\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5536261 "PROPNAME_TEXT_COLOR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:textchange:textColor\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5536389 "mChangeBehavior"
	private explicit_type "int"
	init_value " CHANGE_BEHAVIOR_KEEP"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5536517 "CHANGE_BEHAVIOR_KEEP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text in affected/changing TextView targets will keep
their original text during the transition, setting it to the final text when
the transition ends. This is the default behavior.

@see #setChangeBehavior(int)

"
      end

      attribute 5536645 "CHANGE_BEHAVIOR_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text changing animation should first fade
out the original text completely. The new text is set on the target
view at the end of the fade-out animation. This transition is typically
used with a later {@link #CHANGE_BEHAVIOR_IN} transition, allowing more
flexibility than the {@link #CHANGE_BEHAVIOR_OUT_IN} by allowing other
transitions to be run sequentially or in parallel with these fades.

@see #setChangeBehavior(int)

"
      end

      attribute 5536773 "CHANGE_BEHAVIOR_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text changing animation should fade in the
end text into the affected target view(s). This transition is typically
used in conjunction with an earlier {@link #CHANGE_BEHAVIOR_OUT}
transition, possibly with other transitions running as well, such as
a sequence to fade out, then resize the view, then fade in.

@see #setChangeBehavior(int)

"
      end

      attribute 5536901 "CHANGE_BEHAVIOR_OUT_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the text changing animation should first fade
out the original text completely and then fade in the
new text.

@see #setChangeBehavior(int)

"
      end

      attribute 5537029 "sTransitionProperties"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_TEXT,
            PROPNAME_TEXT_SELECTION_START,
            PROPNAME_TEXT_SELECTION_END
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8379781 "setChangeBehavior"
	public return_type class_ref 1392517 // ChangeText
	nparams 1
	  param in name "changeBehavior" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the type of changing animation that will be run, one of
{@link #CHANGE_BEHAVIOR_KEEP}, {@link #CHANGE_BEHAVIOR_OUT},
{@link #CHANGE_BEHAVIOR_IN}, and {@link #CHANGE_BEHAVIOR_OUT_IN}.

@param changeBehavior The type of fading animation to use when this
transition is run.
@return this textChange object.
"
      end

      operation 8379909 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8380037 "getChangeBehavior"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the type of changing animation that will be run.

@return either {@link #CHANGE_BEHAVIOR_KEEP}, {@link #CHANGE_BEHAVIOR_OUT},
{@link #CHANGE_BEHAVIOR_IN}, or {@link #CHANGE_BEHAVIOR_OUT_IN}.
"
      end

      operation 8380165 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8380293 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8380421 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8380549 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8380677 "setSelection"
	private explicit_return_type "void"
	nparams 3
	  param inout name "editText" type class_ref 1071493 // EditText
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1392645 "ChangeTransform"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This Transition captures scale and rotation for Views before and after the
scene change and animates those changes during the transition.

A change in parent is handled as well by capturing the transforms from
the parent before and after the scene change and animating those during the
transition.
"
      classrelation 2168453 // <generalisation>
	relation 2168453 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2168453 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5537157 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ChangeTransform\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5537285 "PROPNAME_MATRIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeTransform:matrix\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5537413 "PROPNAME_TRANSFORMS"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeTransform:transforms\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5537541 "PROPNAME_PARENT"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeTransform:parent\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5537669 "PROPNAME_PARENT_MATRIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:changeTransform:parentMatrix\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5537797 "PROPNAME_INTERMEDIATE_PARENT_MATRIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "
            \"android:changeTransform:intermediateParentMatrix\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5537925 "PROPNAME_INTERMEDIATE_MATRIX"
	class_attribute const_attribute private explicit_type "String"
	init_value "
            \"android:changeTransform:intermediateMatrix\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5538053 "sTransitionProperties"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_MATRIX,
            PROPNAME_TRANSFORMS,
            PROPNAME_PARENT_MATRIX,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1392773 "PathAnimatorMatrix"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 5539589 "mMatrix"
	  const_attribute private explicit_type "Matrix"
	  init_value " new Matrix()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2169349 // mView (<unidirectional association>)
	  relation 2169349 --->
	    a role_name "mView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2169349 // mView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	attribute 5539717 "mValues"
	  const_attribute private explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5539845 "mTranslationX"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5539973 "mTranslationY"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8383877 "PathAnimatorMatrix"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "view" type class_ref 970757 // View
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8384005 "setValues"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8384133 "setTranslation"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "translation" explicit_type "PointF"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8384261 "setAnimationMatrix"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8384389 "getMatrix"
	  public explicit_return_type "Matrix"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      classrelation 2168581 // NON_TRANSLATIONS_PROPERTY (<unidirectional association>)
	relation 2168581 --->
	  a role_name "NON_TRANSLATIONS_PROPERTY" init_value "
            new Property<PathAnimatorMatrix, float[]>(float[].class, \"nonTranslations\") {
                @Override
                public float[] get(PathAnimatorMatrix object) {
                    return null;
                }

                @Override
                public void set(PathAnimatorMatrix object, float[] value) {
                    object.setValues(value);
                }
            }" class_relation const_relation private
	    comment "
This property sets the animation matrix properties that are not translations.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PathAnimatorMatrix, float[]> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2168581 // NON_TRANSLATIONS_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      classrelation 2168709 // TRANSLATIONS_PROPERTY (<unidirectional association>)
	relation 2168709 --->
	  a role_name "TRANSLATIONS_PROPERTY" init_value "
            new Property<PathAnimatorMatrix, PointF>(PointF.class, \"translations\") {
                @Override
                public PointF get(PathAnimatorMatrix object) {
                    return null;
                }

                @Override
                public void set(PathAnimatorMatrix object, PointF value) {
                    object.setTranslation(value);
                }
            }" class_relation const_relation private
	    comment "
This property sets the translation animation matrix properties.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PathAnimatorMatrix, PointF> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2168709 // TRANSLATIONS_PROPERTY (<unidirectional association>)
	  b parent class_ref 984069 // Property
      end

      attribute 5538181 "mUseOverlay"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5538309 "mReparent"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5538437 "mTempMatrix"
	private explicit_type "Matrix"
	init_value " new Matrix()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8380805 "ChangeTransform"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8380933 "ChangeTransform"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8381061 "getReparentWithOverlay"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns whether changes to parent should use an overlay or not. When the parent
change doesn't use an overlay, it affects the transforms of the child. The
default value is <code>true</code>.

<p>Note: when Overlays are not used when a parent changes, a view can be clipped when
it moves outside the bounds of its parent. Setting
{@link android.view.ViewGroup#setClipChildren(boolean)} and
{@link android.view.ViewGroup#setClipToPadding(boolean)} can help. Also, when
Overlays are not used and the parent is animating its location, the position of the
child view will be relative to its parent's final position, so it may appear to \"jump\"
at the beginning.</p>

@return <code>true</code> when a changed parent should execute the transition
inside the scene root's overlay or <code>false</code> if a parent change only
affects the transform of the transitioning view.
@attr ref android.R.styleable#ChangeTransform_reparentWithOverlay
"
      end

      operation 8381189 "setReparentWithOverlay"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reparentWithOverlay" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets whether changes to parent should use an overlay or not. When the parent
change doesn't use an overlay, it affects the transforms of the child. The
default value is <code>true</code>.

<p>Note: when Overlays are not used when a parent changes, a view can be clipped when
it moves outside the bounds of its parent. Setting
{@link android.view.ViewGroup#setClipChildren(boolean)} and
{@link android.view.ViewGroup#setClipToPadding(boolean)} can help. Also, when
Overlays are not used and the parent is animating its location, the position of the
child view will be relative to its parent's final position, so it may appear to \"jump\"
at the beginning.</p>

@param reparentWithOverlay <code>true</code> when a changed parent should execute the
                           transition inside the scene root's overlay or <code>false</code>
                           if a parent change only affects the transform of the transitioning
                           view.
@attr ref android.R.styleable#ChangeTransform_reparentWithOverlay
"
      end

      operation 8381317 "getReparent"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns whether parent changes will be tracked by the ChangeTransform. If parent
changes are tracked, then the transform will adjust to the transforms of the
different parents. If they aren't tracked, only the transforms of the transitioning
view will be tracked. Default is true.

@return whether parent changes will be tracked by the ChangeTransform.
@attr ref android.R.styleable#ChangeTransform_reparent
"
      end

      operation 8381445 "setReparent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reparent" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets whether parent changes will be tracked by the ChangeTransform. If parent
changes are tracked, then the transform will adjust to the transforms of the
different parents. If they aren't tracked, only the transforms of the transitioning
view will be tracked. Default is true.

@param reparent Set to true to track parent changes or false to only track changes
                of the transitioning view without considering the parent change.
@attr ref android.R.styleable#ChangeTransform_reparent
"
      end

      operation 8381573 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8381701 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8381829 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8381957 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382085 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382213 "createTransformAnimator"
	private return_type class_ref 1004421 // ObjectAnimator
	nparams 3
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	  param in name "handleParentChange" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382341 "parentsMatch"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "startParent" type class_ref 971013 // ViewGroup
	  param inout name "endParent" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382469 "createGhostView"
	private explicit_return_type "void"
	nparams 3
	  param in name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382597 "setMatricesForParent"
	private explicit_return_type "void"
	nparams 2
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382725 "setIdentityTransforms"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "view" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8382853 "setTransforms"
	class_operation private explicit_return_type "void"
	nparams 9
	  param inout name "view" type class_ref 970757 // View
	  param in name "translationX" explicit_type "float"
	  param in name "translationY" explicit_type "float"
	  param in name "translationZ" explicit_type "float"
	  param in name "scaleX" explicit_type "float"
	  param in name "scaleY" explicit_type "float"
	  param in name "rotationX" explicit_type "float"
	  param in name "rotationY" explicit_type "float"
	  param in name "rotationZ" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      class 1392901 "Transforms"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 5538565 "translationX"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5538693 "translationY"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5538821 "translationZ"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5538949 "scaleX"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5539077 "scaleY"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5539205 "rotationX"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5539333 "rotationY"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5539461 "rotationZ"
	  const_attribute public explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8382981 "Transforms"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" type class_ref 970757 // View
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8383109 "restore"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "view" type class_ref 970757 // View
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8383237 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "that" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 1393029 "GhostListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2168837 // <generalisation>
	  relation 2168837 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2168837 // <generalisation>
	    b parent class_ref 1028485 // TransitionListenerAdapter
	end

	classrelation 2168965 // mView (<unidirectional association>)
	  relation 2168965 --->
	    a role_name "mView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2168965 // mView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	classrelation 2169093 // mStartView (<unidirectional association>)
	  relation 2169093 --->
	    a role_name "mStartView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2169093 // mStartView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	classrelation 2169221 // mGhostView (<unidirectional association>)
	  relation 2169221 --->
	    a role_name "mGhostView" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2169221 // mGhostView (<unidirectional association>)
	    b parent class_ref 980613 // GhostView
	end

	operation 8383365 "GhostListener"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "view" type class_ref 970757 // View
	    param inout name "startView" type class_ref 970757 // View
	    param inout name "ghostView" type class_ref 980613 // GhostView
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8383493 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8383621 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8383749 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end
    end

    class 1393157 "CircularPropagation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A propagation that varies with the distance to the epicenter of the Transition
or center of the scene if no epicenter exists. When a View is visible in the
start of the transition, Views farther from the epicenter will transition
sooner than Views closer to the epicenter. When a View is not in the start
of the transition or is not visible at the start of the transition, it will
transition sooner when closer to the epicenter and later when farther from
the epicenter. This is the default TransitionPropagation used with
{@link android.transition.Explode}.
"
      classrelation 2169605 // <generalisation>
	relation 2169605 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2169605 // <generalisation>
	  b parent class_ref 1393285 // VisibilityPropagation
      end

      attribute 5540485 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"CircularPropagation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5540613 "mPropagationSpeed"
	private explicit_type "float"
	init_value " 3.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8385669 "setPropagationSpeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "propagationSpeed" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the speed at which transition propagation happens, relative to the duration of the
Transition. A <code>propagationSpeed</code> of 1 means that a View centered farthest from
the epicenter and View centered at the epicenter will have a difference
in start delay of approximately the duration of the Transition. A speed of 2 means the
start delay difference will be approximately half of the duration of the transition. A
value of 0 is illegal, but negative values will invert the propagation.

@param propagationSpeed The speed at which propagation occurs, relative to the duration
                        of the transition. A speed of 4 means it works 4 times as fast
                        as the duration of the transition. May not be 0.
"
      end

      operation 8385797 "getStartDelay"
	public explicit_return_type "long"
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "transition" type class_ref 990469 // Transition
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8385925 "distance"
	class_operation private explicit_return_type "double"
	nparams 4
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1393285 "VisibilityPropagation"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Base class for <code>TransitionPropagation</code>s that care about
View Visibility and the center position of the View.
"
      classrelation 2169477 // <generalisation>
	relation 2169477 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2169477 // <generalisation>
	  b parent class_ref 1029253 // TransitionPropagation
      end

      attribute 5540101 "PROPNAME_VISIBILITY"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:visibilityPropagation:visibility\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The property key used for {@link android.view.View#getVisibility()}.

"
      end

      attribute 5540229 "PROPNAME_VIEW_CENTER"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:visibilityPropagation:center\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The property key used for the center of the View in screen coordinates. This is an
int[2] with the index 0 taking the x coordinate and index 1 taking the y coordinate.

"
      end

      attribute 5540357 "VISIBILITY_PROPAGATION_VALUES"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_VISIBILITY,
            PROPNAME_VIEW_CENTER,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8384901 "captureValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8385029 "getPropagationProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8385157 "getViewVisibility"
	public explicit_return_type "int"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns {@link android.view.View#getVisibility()} for the View at the time the values
were captured.
@param values The TransitionValues captured at the start or end of the Transition.
@return {@link android.view.View#getVisibility()} for the View at the time the values
were captured.
"
      end

      operation 8385285 "getViewX"
	public explicit_return_type "int"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the View's center x coordinate, relative to the screen, at the time the values
were captured.
@param values The TransitionValues captured at the start or end of the Transition.
@return the View's center x coordinate, relative to the screen, at the time the values
were captured.
"
      end

      operation 8385413 "getViewY"
	public explicit_return_type "int"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the View's center y coordinate, relative to the screen, at the time the values
were captured.
@param values The TransitionValues captured at the start or end of the Transition.
@return the View's center y coordinate, relative to the screen, at the time the values
were captured.
"
      end

      operation 8385541 "getViewCoordinate"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "values" type class_ref 1029125 // TransitionValues
	  param in name "coordinateIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1393413 "Crossfade"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures bitmap representations of target views before and
after the scene change and fades between them.

<p>Note: This transition is not compatible with {@link TextureView}
or {@link SurfaceView}.</p>

@hide
"
      classrelation 2169733 // <generalisation>
	relation 2169733 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2169733 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5540741 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Crossfade\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " TODO: Add a hook that lets a Transition call user code to query whether it should run on
 a given target view. This would save bitmap comparisons in this transition, for example.
"
      end

      attribute 5540869 "PROPNAME_BITMAP"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:crossfade:bitmap\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5540997 "PROPNAME_DRAWABLE"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:crossfade:drawable\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5541125 "PROPNAME_BOUNDS"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:crossfade:bounds\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2169861 // sRectEvaluator (<unidirectional association>)
	relation 2169861 --->
	  a role_name "sRectEvaluator" init_value " new RectEvaluator()" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2169861 // sRectEvaluator (<unidirectional association>)
	  b parent class_ref 1013509 // RectEvaluator
      end

      attribute 5541253 "mFadeBehavior"
	private explicit_type "int"
	init_value " FADE_BEHAVIOR_REVEAL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5541381 "mResizeBehavior"
	private explicit_type "int"
	init_value " RESIZE_BEHAVIOR_SCALE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5541509 "FADE_BEHAVIOR_CROSSFADE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the fading animation should cross-fade
between the old and new representation of all affected target
views. This means that the old representation will fade out
while the new one fades in. This effect may work well on views
without solid backgrounds, such as TextViews.

@see #setFadeBehavior(int)

"
      end

      attribute 5541637 "FADE_BEHAVIOR_REVEAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the fading animation should reveal the
new representation of all affected target views. This means
that the old representation will fade out, gradually
revealing the new representation, which remains opaque
the whole time. This effect may work well on views
with solid backgrounds, such as ImageViews.

@see #setFadeBehavior(int)

"
      end

      attribute 5541765 "FADE_BEHAVIOR_OUT_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the fading animation should first fade
out the original representation completely and then fade in the
new one. This effect may be more suitable than the other
fade behaviors for views with.

@see #setFadeBehavior(int)

"
      end

      attribute 5541893 "RESIZE_BEHAVIOR_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the transition should not animate any
changes in size between the old and new target views.
This means that no scaling will take place as a result of
this transition

@see #setResizeBehavior(int)

"
      end

      attribute 5542021 "RESIZE_BEHAVIOR_SCALE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag specifying that the transition should animate any
changes in size between the old and new target views.
This means that the animation will scale the start/end
representations of affected views from the starting size
to the ending size over the course of the animation.
This effect may work well on images, but is not recommended
for text.

@see #setResizeBehavior(int)

"
      end

      operation 8386053 "setFadeBehavior"
	public return_type class_ref 1393413 // Crossfade
	nparams 1
	  param in name "fadeBehavior" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " TODO: Add fade/resize behaviors to xml resources

Sets the type of fading animation that will be run, one of
{@link #FADE_BEHAVIOR_CROSSFADE} and {@link #FADE_BEHAVIOR_REVEAL}.

@param fadeBehavior The type of fading animation to use when this
transition is run.
"
      end

      operation 8386181 "getFadeBehavior"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the fading behavior of the animation.

@return This crossfade object.
@see #setFadeBehavior(int)
"
      end

      operation 8386309 "setResizeBehavior"
	public return_type class_ref 1393413 // Crossfade
	nparams 1
	  param in name "resizeBehavior" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the type of resizing behavior that will be used during the
transition animation, one of {@link #RESIZE_BEHAVIOR_NONE} and
{@link #RESIZE_BEHAVIOR_SCALE}.

@param resizeBehavior The type of resizing behavior to use when this
transition is run.
"
      end

      operation 8386437 "getResizeBehavior"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the resizing behavior of the animation.

@return This crossfade object.
@see #setResizeBehavior(int)
"
      end

      operation 8386565 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8386693 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8386821 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8386949 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1393541 "Explode"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes and moves views in or out from the edges of the
scene. Visibility is determined by both the
{@link View#setVisibility(int)} state of the view as well as whether it
is parented in the current view hierarchy. Disappearing Views are
limited as described in {@link Visibility#onDisappear(android.view.ViewGroup,
TransitionValues, int, TransitionValues, int)}.
<p>Views move away from the focal View or the center of the Scene if
no epicenter was provided.</p>
"
      classrelation 2171013 // <generalisation>
	relation 2171013 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2171013 // <generalisation>
	  b parent class_ref 1393669 // Visibility
      end

      classrelation 2171141 // sDecelerate (<unidirectional association>)
	relation 2171141 --->
	  a role_name "sDecelerate" init_value " new DecelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2171141 // sDecelerate (<unidirectional association>)
	  b parent class_ref 1005317 // TimeInterpolator
      end

      classrelation 2171269 // sAccelerate (<unidirectional association>)
	relation 2171269 --->
	  a role_name "sAccelerate" init_value " new AccelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2171269 // sAccelerate (<unidirectional association>)
	  b parent class_ref 1005317 // TimeInterpolator
      end

      attribute 5544197 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Explode\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5544325 "PROPNAME_SCREEN_BOUNDS"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:explode:screenBounds\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5544453 "mTempLoc"
	private explicit_type "int"
	multiplicity "[]"
	init_value " new int[2]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8390789 "Explode"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8390917 "Explode"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391045 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391173 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391301 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391429 "onAppear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391557 "onDisappear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391685 "calculateOut"
	private explicit_return_type "void"
	nparams 3
	  param inout name "sceneRoot" type class_ref 970757 // View
	  param inout name "bounds" explicit_type "Rect"
	  param inout name "outVector" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8391813 "calculateMaxDistance"
	class_operation private explicit_return_type "double"
	nparams 3
	  param inout name "sceneRoot" type class_ref 970757 // View
	  param in name "focalX" explicit_type "int"
	  param in name "focalY" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1393669 "Visibility"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes. Visibility is determined not just by the
{@link View#setVisibility(int)} state of views, but also whether
views exist in the current view hierarchy. The class is intended to be a
utility for subclasses such as {@link Fade}, which use this visibility
information to determine the specific animations to run when visibility
changes occur. Subclasses should implement one or both of the methods
{@link #onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)},
{@link #onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)} or
{@link #onAppear(ViewGroup, View, TransitionValues, TransitionValues)},
{@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)}.
"
      classrelation 2169989 // <generalisation>
	relation 2169989 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2169989 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5542149 "PROPNAME_VISIBILITY"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"android:visibility:visibility\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5542277 "PROPNAME_PARENT"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:visibility:parent\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5542405 "PROPNAME_SCREEN_LOCATION"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:visibility:screenLocation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1393797 "VisibilityMode"
	visibility package stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag=true, value={MODE_IN, MODE_OUT})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 5542533 "MODE_IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Mode used in {@link #setMode(int)} to make the transition
operate on targets that are appearing. Maybe be combined with
{@link #MODE_OUT} to target Visibility changes both in and out.

"
      end

      attribute 5542661 "MODE_OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Mode used in {@link #setMode(int)} to make the transition
operate on targets that are disappearing. Maybe be combined with
{@link #MODE_IN} to target Visibility changes both in and out.

"
      end

      attribute 5542789 "sTransitionProperties"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " {
            PROPNAME_VISIBILITY,
            PROPNAME_PARENT,
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1393925 "VisibilityInfo"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 5542917 "visibilityChange"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5543045 "fadeIn"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5543173 "startVisibility"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5543301 "endVisibility"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2170117 // startParent (<unidirectional association>)
	  relation 2170117 --->
	    a role_name "startParent" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2170117 // startParent (<unidirectional association>)
	    b parent class_ref 971013 // ViewGroup
	end

	classrelation 2170245 // endParent (<unidirectional association>)
	  relation 2170245 --->
	    a role_name "endParent" package
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2170245 // endParent (<unidirectional association>)
	    b parent class_ref 971013 // ViewGroup
	end
      end

      attribute 5543429 "mMode"
	private explicit_type "int"
	init_value " MODE_IN | MODE_OUT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5543557 "mSuppressLayout"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8387077 "Visibility"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8387205 "Visibility"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8387333 "setSuppressLayout"
	public explicit_return_type "void"
	nparams 1
	  param inout name "suppress" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This tells the Visibility transition to suppress layout during the transition and release
the suppression after the transition.
@hide
"
      end

      operation 8387461 "setMode"
	public explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@VisibilityMode ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Changes the transition to support appearing and/or disappearing Views, depending
on <code>mode</code>.

@param mode The behavior supported by this transition, a combination of
            {@link #MODE_IN} and {@link #MODE_OUT}.
@attr ref android.R.styleable#VisibilityTransition_transitionVisibilityMode
"
      end

      operation 8387589 "getMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@VisibilityMode
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns whether appearing and/or disappearing Views are supported.

Returns whether appearing and/or disappearing Views are supported. A combination of
        {@link #MODE_IN} and {@link #MODE_OUT}.
@attr ref android.R.styleable#VisibilityTransition_transitionVisibilityMode
"
      end

      operation 8387717 "getTransitionProperties"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8387845 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8387973 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8388101 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8388229 "isVisible"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "values" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns whether the view is 'visible' according to the given values
object. This is determined by testing the same properties in the values
object that are used to determine whether the object is appearing or
disappearing in the {@link
Transition#createAnimator(ViewGroup, TransitionValues, TransitionValues)}
method. This method can be called by, for example, subclasses that want
to know whether the object is visible in the same way that Visibility
determines it for the actual animation.

@param values The TransitionValues object that holds the information by
which visibility is determined.
@return True if the view reference by <code>values</code> is visible,
false otherwise.
"
      end

      operation 8388357 "getVisibilityChangeInfo"
	class_operation private return_type class_ref 1393925 // VisibilityInfo
	nparams 2
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8388485 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8388613 "onAppear"
	public return_type class_ref 1004677 // Animator
	nparams 5
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param in name "startVisibility" explicit_type "int"
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	  param in name "endVisibility" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "The default implementation of this method calls
{@link #onAppear(ViewGroup, View, TransitionValues, TransitionValues)}.
Subclasses should override this method or
{@link #onAppear(ViewGroup, View, TransitionValues, TransitionValues)}.
if they need to create an Animator when targets appear.
The method should only be called by the Visibility class; it is
not intended to be called from external classes.

@param sceneRoot The root of the transition hierarchy
@param startValues The target values in the start scene
@param startVisibility The target visibility in the start scene
@param endValues The target values in the end scene
@param endVisibility The target visibility in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 8388741 "onAppear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "The default implementation of this method returns a null Animator. Subclasses should
override this method to make targets appear with the desired transition. The
method should only be called from
{@link #onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)}.

@param sceneRoot The root of the transition hierarchy
@param view The View to make appear. This will be in the target scene's View hierarchy and
            will be VISIBLE.
@param startValues The target values in the start scene
@param endValues The target values in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 8388869 "onDisappear"
	public return_type class_ref 1004677 // Animator
	nparams 5
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param in name "startVisibility" explicit_type "int"
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	  param in name "endVisibility" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Subclasses should override this method or
{@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)}
if they need to create an Animator when targets disappear.
The method should only be called by the Visibility class; it is
not intended to be called from external classes.
<p>
The default implementation of this method attempts to find a View to use to call
{@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)},
based on the situation of the View in the View hierarchy. For example,
if a View was simply removed from its parent, then the View will be added
into a {@link android.view.ViewGroupOverlay} and passed as the <code>view</code>
parameter in {@link #onDisappear(ViewGroup, View, TransitionValues, TransitionValues)}.
If a visible View is changed to be {@link View#GONE} or {@link View#INVISIBLE},
then it can be used as the <code>view</code> and the visibility will be changed
to {@link View#VISIBLE} for the duration of the animation. However, if a View
is in a hierarchy which is also altering its visibility, the situation can be
more complicated. In general, if a view that is no longer in the hierarchy in
the end scene still has a parent (so its parent hierarchy was removed, but it
was not removed from its parent), then it will be left alone to avoid side-effects from
improperly removing it from its parent. The only exception to this is if
the previous {@link Scene} was {@link Scene#getSceneForLayout(ViewGroup, int,
android.content.Context) created from a layout resource file}, then it is considered
safe to un-parent the starting scene view in order to make it disappear.</p>

@param sceneRoot The root of the transition hierarchy
@param startValues The target values in the start scene
@param startVisibility The target visibility in the start scene
@param endValues The target values in the end scene
@param endVisibility The target visibility in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      operation 8388997 "isTransitionRequired"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "newValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8389125 "onDisappear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "The default implementation of this method returns a null Animator. Subclasses should
override this method to make targets disappear with the desired transition. The
method should only be called from
{@link #onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)}.

@param sceneRoot The root of the transition hierarchy
@param view The View to make disappear. This will be in the target scene's View
            hierarchy or in an {@link android.view.ViewGroupOverlay} and will be
            VISIBLE.
@param startValues The target values in the start scene
@param endValues The target values in the end scene
@return An Animator to be started at the appropriate time in the
overall transition for this scene change. A null value means no animation
should be run.
"
      end

      class 1394053 "DisappearListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2170373 // <generalisation>
	  relation 2170373 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2170373 // <generalisation>
	    b parent class_ref 1028485 // TransitionListenerAdapter
	end

	classrelation 2170501 // <realization>
	  relation 2170501 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2170501 // <realization>
	    b parent class_ref 1004933 // AnimatorListener
	end

	classrelation 2170629 // <realization>
	  relation 2170629 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2170629 // <realization>
	    b parent class_ref 1005061 // AnimatorPauseListener
	end

	classrelation 2170757 // mView (<unidirectional association>)
	  relation 2170757 --->
	    a role_name "mView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2170757 // mView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	attribute 5543685 "mFinalVisibility"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 2170885 // mParent (<unidirectional association>)
	  relation 2170885 --->
	    a role_name "mParent" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2170885 // mParent (<unidirectional association>)
	    b parent class_ref 971013 // ViewGroup
	end

	attribute 5543813 "mSuppressLayout"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5543941 "mLayoutSuppressed"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5544069 "mCanceled"
	  package explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8389253 "DisappearListener"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "view" type class_ref 970757 // View
	    param in name "finalVisibility" explicit_type "int"
	    param inout name "suppressLayout" explicit_type "boolean"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8389381 "onAnimationPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8389509 "onAnimationResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8389637 "onAnimationCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8389765 "onAnimationRepeat"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8389893 "onAnimationStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8390021 "onAnimationEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8390149 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8390277 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8390405 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8390533 "hideViewWhenNotCanceled"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8390661 "suppressLayout"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "suppress" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end
    end

    class 1394181 "Fade"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes and fades views in or out when they become visible
or non-visible. Visibility is determined by both the
{@link View#setVisibility(int)} state of the view as well as whether it
is parented in the current view hierarchy.

<p>The ability of this transition to fade out a particular view, and the
way that that fading operation takes place, is based on
the situation of the view in the view hierarchy. For example, if a view was
simply removed from its parent, then the view will be added into a {@link
android.view.ViewGroupOverlay} while fading. If a visible view is
changed to be {@link View#GONE} or {@link View#INVISIBLE}, then the
visibility will be changed to {@link View#VISIBLE} for the duration of
the animation. However, if a view is in a hierarchy which is also altering
its visibility, the situation can be more complicated. In general, if a
view that is no longer in the hierarchy in the end scene still has a
parent (so its parent hierarchy was removed, but it was not removed from
its parent), then it will be left alone to avoid side-effects from
improperly removing it from its parent. The only exception to this is if
the previous {@link Scene} was
{@link Scene#getSceneForLayout(android.view.ViewGroup, int, android.content.Context)
created from a layout resource file}, then it is considered safe to un-parent
the starting scene view in order to fade it out.</p>

<p>A Fade transition can be described in a resource file by using the
tag <code>fade</code>, along with the standard
attributes of {@link android.R.styleable#Fade} and
{@link android.R.styleable#Transition}.</p>
"
      classrelation 2171397 // <generalisation>
	relation 2171397 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2171397 // <generalisation>
	  b parent class_ref 1393669 // Visibility
      end

      attribute 5544581 "PROPNAME_TRANSITION_ALPHA"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"android:fade:transitionAlpha\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5544709 "DBG"
	class_attribute private explicit_type "boolean"
	init_value " Transition.DBG && false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5544837 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Fade\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5544965 "IN"
	class_attribute const_attribute public explicit_type "int"
	init_value " Visibility.MODE_IN"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Fading mode used in {@link #Fade(int)} to make the transition
operate on targets that are appearing. Maybe be combined with
{@link #OUT} to fade both in and out. Equivalent to
{@link Visibility#MODE_IN}.

"
      end

      attribute 5545093 "OUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " Visibility.MODE_OUT"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Fading mode used in {@link #Fade(int)} to make the transition
operate on targets that are disappearing. Maybe be combined with
{@link #IN} to fade both in and out. Equivalent to
{@link Visibility#MODE_OUT}.

"
      end

      operation 8391941 "Fade"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a Fade transition that will fade targets in and out.
"
      end

      operation 8392069 "Fade"
	public explicit_return_type ""
	nparams 1
	  param in name "fadingMode" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a Fade transition that will fade targets in
and/or out, according to the value of fadingMode.

@param fadingMode The behavior of this transition, a combination of
{@link #IN} and {@link #OUT}.
"
      end

      operation 8392197 "Fade"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8392325 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8392453 "createAnimation"
	private return_type class_ref 1004677 // Animator
	nparams 3
	  param in name "view" type class_ref 970757 // View
	  param in name "startAlpha" explicit_type "float"
	  param in name "endAlpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Utility method to handle creating and running the Animator.
"
      end

      operation 8392581 "onAppear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8392709 "onDisappear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param in name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8392837 "getStartAlpha"
	class_operation private explicit_return_type "float"
	nparams 2
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param in name "fallbackValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      class 1394309 "FadeAnimatorListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2171525 // <generalisation>
	  relation 2171525 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2171525 // <generalisation>
	    b parent class_ref 1006725 // AnimatorListenerAdapter
	end

	classrelation 2171653 // mView (<unidirectional association>)
	  relation 2171653 --->
	    a role_name "mView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2171653 // mView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	attribute 5545221 "mLayerTypeChanged"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8392965 "FadeAnimatorListener"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "view" type class_ref 970757 // View
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8393093 "onAnimationStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8393221 "onAnimationEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end
    end

    class 1394437 "PatternPathMotion"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A PathMotion that takes a Path pattern and applies it to the separation between two points.
The starting point of the Path will be moved to the origin and the end point will be scaled
and rotated so that it matches with the target end point.
<p>This may be used in XML as an element inside a transition.</p>
<pre>{@code
<changeBounds>
    <patternPathMotion android:patternPathData=\"M0 0 L0 100 L100 100\"/>
</changeBounds>}
</pre>
"
      classrelation 2171781 // <generalisation>
	relation 2171781 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2171781 // <generalisation>
	  b parent class_ref 1028741 // PathMotion
      end

      attribute 5545349 "mOriginalPatternPath"
	private explicit_type "Path"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5545477 "mPatternPath"
	const_attribute private explicit_type "Path"
	init_value " new Path()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5545605 "mTempMatrix"
	const_attribute private explicit_type "Matrix"
	init_value " new Matrix()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8393349 "PatternPathMotion"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructs a PatternPathMotion with a straight-line pattern.
"
      end

      operation 8393477 "PatternPathMotion"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8393605 "PatternPathMotion"
	public explicit_return_type ""
	nparams 1
	  param inout name "patternPath" explicit_type "Path"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a PatternPathMotion with the Path defining a pattern of motion between two
coordinates. The pattern will be translated, rotated, and scaled to fit between the start
and end points. The pattern must not be empty and must have the end point differ from the
start point.

@param patternPath A Path to be used as a pattern for two-dimensional motion.
"
      end

      operation 8393733 "getPatternPath"
	public explicit_return_type "Path"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the Path defining a pattern of motion between two coordinates.
The pattern will be translated, rotated, and scaled to fit between the start and end points.
The pattern must not be empty and must have the end point differ from the start point.

@return the Path defining a pattern of motion between two coordinates.
@attr ref android.R.styleable#PatternPathMotion_patternPathData
"
      end

      operation 8393861 "setPatternPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "patternPath" explicit_type "Path"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the Path defining a pattern of motion between two coordinates.
The pattern will be translated, rotated, and scaled to fit between the start and end points.
The pattern must not be empty and must have the end point differ from the start point.

@param patternPath A Path to be used as a pattern for two-dimensional motion.
@attr ref android.R.styleable#PatternPathMotion_patternPathData
"
      end

      operation 8393989 "getPath"
	public explicit_return_type "Path"
	nparams 4
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1394565 "Recolor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes during scene changes to the
{@link View#setBackground(android.graphics.drawable.Drawable) background}
property of its target views (when the background is a
{@link ColorDrawable}, as well as the
{@link TextView#setTextColor(android.content.res.ColorStateList)
color} of the text for target TextViews. If the color changes between
scenes, the color change is animated.

@hide
"
      classrelation 2171909 // <generalisation>
	relation 2171909 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2171909 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5545733 "PROPNAME_BACKGROUND"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:recolor:background\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5545861 "PROPNAME_TEXT_COLOR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:recolor:textColor\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8394117 "Recolor"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8394245 "Recolor"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8394373 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8394501 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8394629 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8394757 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1394693 "Rotate"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition captures the rotation property of targets before and after
the scene change and animates any changes.

@hide
"
      classrelation 2172037 // <generalisation>
	relation 2172037 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2172037 // <generalisation>
	  b parent class_ref 990469 // Transition
      end

      attribute 5545989 "PROPNAME_ROTATION"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:rotate:rotation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8394885 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8395013 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8395141 "createAnimator"
	public return_type class_ref 1004677 // Animator
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1394821 "SidePropagation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A <code>TransitionPropagation</code> that propagates based on the distance to the side
and, orthogonally, the distance to epicenter. If the transitioning View is visible in
the start of the transition, then it will transition sooner when closer to the side and
later when farther. If the view is not visible in the start of the transition, then
it will transition later when closer to the side and sooner when farther from the edge.
This is the default TransitionPropagation used with {@link android.transition.Slide}.
"
      classrelation 2172549 // <generalisation>
	relation 2172549 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2172549 // <generalisation>
	  b parent class_ref 1393285 // VisibilityPropagation
      end

      attribute 5546501 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SlidePropagation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5546629 "mPropagationSpeed"
	private explicit_type "float"
	init_value " 3.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5546757 "mSide"
	private explicit_type "int"
	init_value " Gravity.BOTTOM"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8396933 "setSide"
	public explicit_return_type "void"
	nparams 1
	  param in name "side" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@GravityFlag ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the side that is used to calculate the transition propagation. If the transitioning
View is visible in the start of the transition, then it will transition sooner when
closer to the side and later when farther. If the view is not visible in the start of
the transition, then it will transition later when closer to the side and sooner when
farther from the edge. The default is {@link Gravity#BOTTOM}.

@param side The side that is used to calculate the transition propagation. Must be one of
            {@link Gravity#LEFT}, {@link Gravity#TOP}, {@link Gravity#RIGHT},
            {@link Gravity#BOTTOM}, {@link Gravity#START}, or {@link Gravity#END}.
"
      end

      operation 8397061 "setPropagationSpeed"
	public explicit_return_type "void"
	nparams 1
	  param in name "propagationSpeed" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the speed at which transition propagation happens, relative to the duration of the
Transition. A <code>propagationSpeed</code> of 1 means that a View centered at the side
set in {@link #setSide(int)} and View centered at the opposite edge will have a difference
in start delay of approximately the duration of the Transition. A speed of 2 means the
start delay difference will be approximately half of the duration of the transition. A
value of 0 is illegal, but negative values will invert the propagation.

@param propagationSpeed The speed at which propagation occurs, relative to the duration
                        of the transition. A speed of 4 means it works 4 times as fast
                        as the duration of the transition. May not be 0.
"
      end

      operation 8397189 "getStartDelay"
	public explicit_return_type "long"
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "transition" type class_ref 990469 // Transition
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8397317 "distance"
	private explicit_return_type "int"
	nparams 9
	  param inout name "sceneRoot" type class_ref 970757 // View
	  param in name "viewX" explicit_type "int"
	  param in name "viewY" explicit_type "int"
	  param in name "epicenterX" explicit_type "int"
	  param in name "epicenterY" explicit_type "int"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8397445 "getMaxDistance"
	private explicit_return_type "int"
	nparams 1
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1394949 "Slide"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This transition tracks changes to the visibility of target views in the
start and end scenes and moves views in or out from one of the edges of the
scene. Visibility is determined by both the
{@link View#setVisibility(int)} state of the view as well as whether it
is parented in the current view hierarchy. Disappearing Views are
limited as described in {@link Visibility#onDisappear(android.view.ViewGroup,
TransitionValues, int, TransitionValues, int)}.
"
      classrelation 2172677 // <generalisation>
	relation 2172677 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2172677 // <generalisation>
	  b parent class_ref 1393669 // Visibility
      end

      attribute 5546885 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Slide\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2172805 // sDecelerate (<unidirectional association>)
	relation 2172805 --->
	  a role_name "sDecelerate" init_value " new DecelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2172805 // sDecelerate (<unidirectional association>)
	  b parent class_ref 1005317 // TimeInterpolator
      end

      classrelation 2172933 // sAccelerate (<unidirectional association>)
	relation 2172933 --->
	  a role_name "sAccelerate" init_value " new AccelerateInterpolator()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2172933 // sAccelerate (<unidirectional association>)
	  b parent class_ref 1005317 // TimeInterpolator
      end

      attribute 5547013 "PROPNAME_SCREEN_POSITION"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android:slide:screenPosition\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1395077 "CalculateSlide"
	visibility private stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 8397573 "getGoneX"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	    param inout name "view" type class_ref 970757 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Returns the translation value for view when it goes out of the scene "
	end

	operation 8397701 "getGoneY"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	    param inout name "view" type class_ref 970757 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Returns the translation value for view when it goes out of the scene "
	end
      end

      classrelation 2173061 // mSlideCalculator (<unidirectional association>)
	relation 2173061 --->
	  a role_name "mSlideCalculator" init_value " sCalculateBottom" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2173061 // mSlideCalculator (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      attribute 5547141 "mSlideEdge"
	private explicit_type "int"
	init_value " Gravity.BOTTOM"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GravityFlag
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 5547269 "mSlideFraction"
	private explicit_type "float"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1395205 "GravityFlag"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef({Gravity.LEFT, Gravity.TOP, Gravity.RIGHT, Gravity.BOTTOM, Gravity.START, Gravity.END})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 1395333 "CalculateSlideHorizontal"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2173189 // <realization>
	  relation 2173189 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2173189 // <realization>
	    b parent class_ref 1395077 // CalculateSlide
	end

	operation 8397829 "getGoneY"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	    param inout name "view" type class_ref 970757 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 1395461 "CalculateSlideVertical"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2173317 // <realization>
	  relation 2173317 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2173317 // <realization>
	    b parent class_ref 1395077 // CalculateSlide
	end

	operation 8397957 "getGoneX"
	  public explicit_return_type "float"
	  nparams 3
	    param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	    param inout name "view" type class_ref 970757 // View
	    param in name "fraction" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      classrelation 2173445 // sCalculateLeft (<unidirectional association>)
	relation 2173445 --->
	  a role_name "sCalculateLeft" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationX() - sceneRoot.getWidth() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2173445 // sCalculateLeft (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      classrelation 2173573 // sCalculateStart (<unidirectional association>)
	relation 2173573 --->
	  a role_name "sCalculateStart" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            final boolean isRtl = sceneRoot.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;
            final float x;
            if (isRtl) {
                x = view.getTranslationX() + sceneRoot.getWidth() * fraction;
            } else {
                x = view.getTranslationX() - sceneRoot.getWidth() * fraction;
            }
            return x;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2173573 // sCalculateStart (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      classrelation 2173701 // sCalculateTop (<unidirectional association>)
	relation 2173701 --->
	  a role_name "sCalculateTop" init_value " new CalculateSlideVertical() {
        @Override
        public float getGoneY(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationY() - sceneRoot.getHeight() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2173701 // sCalculateTop (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      classrelation 2173829 // sCalculateRight (<unidirectional association>)
	relation 2173829 --->
	  a role_name "sCalculateRight" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationX() + sceneRoot.getWidth() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2173829 // sCalculateRight (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      classrelation 2173957 // sCalculateEnd (<unidirectional association>)
	relation 2173957 --->
	  a role_name "sCalculateEnd" init_value " new CalculateSlideHorizontal() {
        @Override
        public float getGoneX(ViewGroup sceneRoot, View view, float fraction) {
            final boolean isRtl = sceneRoot.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;
            final float x;
            if (isRtl) {
                x = view.getTranslationX() - sceneRoot.getWidth() * fraction;
            } else {
                x = view.getTranslationX() + sceneRoot.getWidth() * fraction;
            }
            return x;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2173957 // sCalculateEnd (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      classrelation 2174085 // sCalculateBottom (<unidirectional association>)
	relation 2174085 --->
	  a role_name "sCalculateBottom" init_value " new CalculateSlideVertical() {
        @Override
        public float getGoneY(ViewGroup sceneRoot, View view, float fraction) {
            return view.getTranslationY() + sceneRoot.getHeight() * fraction;
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174085 // sCalculateBottom (<unidirectional association>)
	  b parent class_ref 1395077 // CalculateSlide
      end

      operation 8398085 "Slide"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructor using the default {@link Gravity#BOTTOM}
slide edge direction.
"
      end

      operation 8398213 "Slide"
	public explicit_return_type ""
	nparams 1
	  param in name "slideEdge" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Constructor using the provided slide edge direction.
"
      end

      operation 8398341 "Slide"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8398469 "captureValues"
	private explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8398597 "captureStartValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8398725 "captureEndValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "transitionValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8398853 "setSlideEdge"
	public explicit_return_type "void"
	nparams 1
	  param in name "slideEdge" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@GravityFlag ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Change the edge that Views appear and disappear from.

@param slideEdge The edge of the scene to use for Views appearing and disappearing. One of
                 {@link android.view.Gravity#LEFT}, {@link android.view.Gravity#TOP},
                 {@link android.view.Gravity#RIGHT}, {@link android.view.Gravity#BOTTOM},
                 {@link android.view.Gravity#START}, {@link android.view.Gravity#END}.
@attr ref android.R.styleable#Slide_slideEdge
"
      end

      operation 8398981 "getSlideEdge"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@GravityFlag
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the edge that Views appear and disappear from.

@return the edge of the scene to use for Views appearing and disappearing. One of
        {@link android.view.Gravity#LEFT}, {@link android.view.Gravity#TOP},
        {@link android.view.Gravity#RIGHT}, {@link android.view.Gravity#BOTTOM},
        {@link android.view.Gravity#START}, {@link android.view.Gravity#END}.
@attr ref android.R.styleable#Slide_slideEdge
"
      end

      operation 8399109 "onAppear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8399237 "onDisappear"
	public return_type class_ref 1004677 // Animator
	nparams 4
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "startValues" type class_ref 1029125 // TransitionValues
	  param inout name "endValues" type class_ref 1029125 // TransitionValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8399365 "setSlideFraction"
	public explicit_return_type "void"
	nparams 1
	  param in name "slideFraction" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end
    end

    class 1395589 "TransitionInflater"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class inflates scenes and transitions from resource files.

Information on XML resource descriptions for transitions can be found for
{@link android.R.styleable#Transition}, {@link android.R.styleable#TransitionSet},
{@link android.R.styleable#TransitionTarget}, {@link android.R.styleable#Fade},
and {@link android.R.styleable#TransitionManager}.
"
      attribute 5547397 "sConstructorSignature"
	class_attribute const_attribute private explicit_type "?"
	multiplicity "[]"
	init_value " new Class[] {
            Context.class, AttributeSet.class}"
	stereotype "Class"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}>${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 2174213 // sConstructors (<unidirectional association>)
	relation 2174213 --->
	  a role_name "sConstructors" init_value "
            new ArrayMap<String, Constructor>()" class_relation const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Constructor> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174213 // sConstructors (<unidirectional association>)
	  b parent class_ref 956293 // ArrayMap
      end

      classrelation 2174341 // mContext (<unidirectional association>)
	relation 2174341 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2174341 // mContext (<unidirectional association>)
	  b parent class_ref 956933 // Context
      end

      operation 8399493 "TransitionInflater"
	private explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 956933 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8399621 "from"
	class_operation public return_type class_ref 1395589 // TransitionInflater
	nparams 1
	  param inout name "context" type class_ref 956933 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Obtains the TransitionInflater from the given context.
"
      end

      operation 8399749 "inflateTransition"
	public return_type class_ref 990469 // Transition
	nparams 1
	  param in name "resource" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@TransitionRes ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Loads a {@link Transition} object from a resource

@param resource The resource id of the transition to load
@return The loaded Transition object
@throws android.content.res.Resources.NotFoundException when the
transition cannot be loaded
"
      end

      operation 8399877 "inflateTransitionManager"
	public return_type class_ref 990213 // TransitionManager
	nparams 2
	  param in name "resource" explicit_type "int"
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@TransitionRes ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Loads a {@link TransitionManager} object from a resource

@param resource The resource id of the transition manager to load
@return The loaded TransitionManager object
@throws android.content.res.Resources.NotFoundException when the
transition manager cannot be loaded
"
      end

      operation 8400005 "createTransitionFromXml"
	private return_type class_ref 990469 // Transition
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	  param inout name "parent" type class_ref 990469 // Transition
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Transition loading
"
      end

      operation 8400133 "createCustom"
	private explicit_return_type "Object"
	nparams 3
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	  param inout name "expectedType" explicit_type "Class"
	  param in name "tag" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8400261 "getTargetIds"
	private explicit_return_type "void"
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	  param inout name "transition" type class_ref 990469 // Transition
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8400389 "createTransitionManagerFromXml"
	private return_type class_ref 990213 // TransitionManager
	nparams 3
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " TransitionManager loading
"
      end

      operation 8400517 "loadTransition"
	private explicit_return_type "void"
	nparams 3
	  param inout name "attrs" type class_ref 958981 // AttributeSet
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "transitionManager" type class_ref 990213 // TransitionManager
	nexceptions 1
	  exception class_ref 958853 // NotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1395845 "TransitionUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Static utility methods for Transitions.

@hide
"
      attribute 5547909 "MAX_IMAGE_SIZE"
	class_attribute private explicit_type "int"
	init_value " (1024 * 1024)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 8403205 "mergeAnimators"
	class_operation package return_type class_ref 1004677 // Animator
	nparams 2
	  param inout name "animator1" type class_ref 1004677 // Animator
	  param inout name "animator2" type class_ref 1004677 // Animator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8403333 "mergeTransitions"
	class_operation public return_type class_ref 990469 // Transition
	nparams 1
	  param inout name "" explicit_type "Transition...transitions"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 8403461 "copyViewImage"
	class_operation public return_type class_ref 970757 // View
	nparams 3
	  param inout name "sceneRoot" type class_ref 971013 // ViewGroup
	  param inout name "view" type class_ref 970757 // View
	  param inout name "parent" type class_ref 970757 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a View using the bitmap copy of <code>view</code>. If <code>view</code> is large,
the copy will use a scaled bitmap of the given view.

@param sceneRoot The ViewGroup in which the view copy will be displayed.
@param view The view to create a copy of.
@param parent The parent of view.
"
      end

      operation 8403589 "createDrawableBitmap"
	class_operation public explicit_return_type "Bitmap"
	nparams 1
	  param inout name "drawable" explicit_type "Drawable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get a copy of bitmap of given drawable, return null if intrinsic size is zero
"
      end

      operation 8403717 "createViewBitmap"
	class_operation public explicit_return_type "Bitmap"
	nparams 3
	  param inout name "view" type class_ref 970757 // View
	  param inout name "matrix" explicit_type "Matrix"
	  param inout name "bounds" explicit_type "RectF"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a Bitmap of the given view, using the Matrix matrix to transform to the local
coordinates. <code>matrix</code> will be modified during the bitmap creation.

<p>If the bitmap is large, it will be scaled uniformly down to at most 1MB size.</p>
@param view The view to create a bitmap for.
@param matrix The matrix converting the view local coordinates to the coordinates that
              the bitmap will be displayed in. <code>matrix</code> will be modified before
              returning.
@param bounds The bounds of the bitmap in the destination coordinate system (where the
              view should be presented. Typically, this is matrix.mapRect(viewBounds);
@return A bitmap of the given view or null if bounds has no width or height.
"
      end

      class 1395973 "MatrixEvaluator"
	visibility public 
	nactuals 1
	actual class class_ref 1006085 // TypeEvaluator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2175621 // <realization>
	  relation 2175621 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2175621 // <realization>
	    b parent class_ref 1006085 // TypeEvaluator
	end

	attribute 5548037 "mTempStartValues"
	  package explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[9]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5548165 "mTempEndValues"
	  package explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[9]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5548293 "mTempMatrix"
	  package explicit_type "Matrix"
	  init_value " new Matrix()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8403845 "evaluate"
	  public explicit_return_type "Matrix"
	  nparams 3
	    param in name "fraction" explicit_type "float"
	    param inout name "startValue" explicit_type "Matrix"
	    param inout name "endValue" explicit_type "Matrix"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end
    end

    class 1396101 "TranslationAnimationCreator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is used by Slide and Explode to create an animator that goes from the start
position to the end position. It takes into account the canceled position so that it
will not blink out or shift suddenly when the transition is interrupted.
"
      operation 8404357 "createAnimation"
	class_operation package return_type class_ref 1004677 // Animator
	nparams 10
	  param inout name "view" type class_ref 970757 // View
	  param inout name "values" type class_ref 1029125 // TransitionValues
	  param in name "viewPosX" explicit_type "int"
	  param in name "viewPosY" explicit_type "int"
	  param in name "startX" explicit_type "float"
	  param in name "startY" explicit_type "float"
	  param in name "endX" explicit_type "float"
	  param in name "endY" explicit_type "float"
	  param inout name "interpolator" type class_ref 1005317 // TimeInterpolator
	  param inout name "transition" type class_ref 990469 // Transition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates an animator that can be used for x and/or y translations. When interrupted,
it sets a tag to keep track of the position so that it may be continued from position.

@param view The view being moved. This may be in the overlay for onDisappear.
@param values The values containing the view in the view hierarchy.
@param viewPosX The x screen coordinate of view
@param viewPosY The y screen coordinate of view
@param startX The start translation x of view
@param startY The start translation y of view
@param endX The end translation x of view
@param endY The end translation y of view
@param interpolator The interpolator to use with this animator.
@return An animator that moves from (startX, startY) to (endX, endY) unless there was
a previous interruption, in which case it moves from the current position to (endX, endY).
"
      end

      class 1396229 "TransitionPositionListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 2176517 // <generalisation>
	  relation 2176517 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2176517 // <generalisation>
	    b parent class_ref 1006725 // AnimatorListenerAdapter
	end

	classrelation 2176645 // <realization>
	  relation 2176645 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 2176645 // <realization>
	    b parent class_ref 1028613 // TransitionListener
	end

	classrelation 2176773 // mViewInHierarchy (<unidirectional association>)
	  relation 2176773 --->
	    a role_name "mViewInHierarchy" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2176773 // mViewInHierarchy (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	classrelation 2176901 // mMovingView (<unidirectional association>)
	  relation 2176901 --->
	    a role_name "mMovingView" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 2176901 // mMovingView (<unidirectional association>)
	    b parent class_ref 970757 // View
	end

	attribute 5548549 "mStartX"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5548677 "mStartY"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5548805 "mTransitionPosition"
	  private explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5548933 "mPausedX"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5549061 "mPausedY"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5549189 "mTerminalX"
	  const_attribute private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 5549317 "mTerminalY"
	  const_attribute private explicit_type "float"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 8404485 "TransitionPositionListener"
	  private explicit_return_type ""
	  nparams 6
	    param inout name "movingView" type class_ref 970757 // View
	    param inout name "viewInHierarchy" type class_ref 970757 // View
	    param in name "startX" explicit_type "int"
	    param in name "startY" explicit_type "int"
	    param in name "terminalX" explicit_type "float"
	    param in name "terminalY" explicit_type "float"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8404613 "onAnimationCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animation" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8404741 "onAnimationEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8404869 "onAnimationPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8404997 "onAnimationResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "animator" type class_ref 1004677 // Animator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8405125 "onTransitionStart"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8405253 "onTransitionEnd"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8405381 "onTransitionCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8405509 "onTransitionPause"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 8405637 "onTransitionResume"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "transition" type class_ref 990469 // Transition
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end
    end
  end

  deploymentview 193029 "transition"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 534021 "Transition"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.TimeInterpolator;
import android.annotation.Nullable;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Path;
import android.graphics.Rect;
import android.util.ArrayMap;
import android.util.AttributeSet;
import android.util.Log;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.util.SparseLongArray;
import android.view.InflateException;
import android.view.SurfaceView;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOverlay;
import android.view.WindowId;
import android.view.animation.AnimationUtils;
import android.widget.ListView;
import android.widget.Spinner;
import com.android.internal.R;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 990469 // Transition
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 534149 "TransitionListenerAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1028485 // TransitionListenerAdapter
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 695813 "PathMotion"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.graphics.Path;
import android.util.AttributeSet;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1028741 // PathMotion
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 695941 "ArcMotion"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Path;
import android.util.AttributeSet;
import com.android.internal.R;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1391493 // ArcMotion
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696069 "TransitionSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.TimeInterpolator;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AndroidRuntimeException;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
import java.util.ArrayList;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1028997 // TransitionSet
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696197 "AutoTransition"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.AttributeSet;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1391621 // AutoTransition
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696325 "ChangeBounds"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.animation.PropertyValuesHolder;
import android.animation.RectEvaluator;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Path;
import android.graphics.PointF;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.Property;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
import java.util.Map;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1391877 // ChangeBounds
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696453 "ChangeClipBounds"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ObjectAnimator;
import android.animation.RectEvaluator;
import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1392133 // ChangeClipBounds
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696581 "ChangeImageTransform"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.animation.TypeEvaluator;
import android.content.Context;
import android.graphics.Matrix;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.Property;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import java.util.Map;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1392261 // ChangeImageTransform
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696709 "ChangeScroll"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1392389 // ChangeScroll
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696837 "ChangeText"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ValueAnimator;
import android.graphics.Color;
import android.util.Log;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import java.util.Map;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1392517 // ChangeText
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 696965 "ChangeTransform"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.FloatArrayEvaluator;
import android.animation.ObjectAnimator;
import android.animation.PropertyValuesHolder;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Matrix;
import android.graphics.Path;
import android.graphics.PointF;
import android.util.AttributeSet;
import android.util.Property;
import android.view.GhostView;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1392645 // ChangeTransform
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697093 "TransitionPropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1029253 // TransitionPropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697221 "VisibilityPropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.View;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1393285 // VisibilityPropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697349 "CircularPropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1393157 // CircularPropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697477 "Crossfade"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.animation.RectEvaluator;
import android.animation.ValueAnimator;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.util.Log;
import android.view.SurfaceView;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOverlay;
import java.util.Map;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1393413 // Crossfade
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697605 "Visibility"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.Animator.AnimatorListener;
import android.animation.Animator.AnimatorPauseListener;
import android.annotation.IntDef;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1393669 // Visibility
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697733 "Explode"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.TimeInterpolator;
import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.DecelerateInterpolator;
import com.android.internal.R;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1393541 // Explode
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697861 "Fade"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ObjectAnimator;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import com.android.internal.R;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1394181 // Fade
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 697989 "PatternPathMotion"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Matrix;
import android.graphics.Path;
import android.graphics.PathMeasure;
import android.util.AttributeSet;
import android.util.PathParser;
import com.android.internal.R;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1394437 // PatternPathMotion
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698117 "Recolor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.content.Context;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1394565 // Recolor
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698245 "Rotate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.ObjectAnimator;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1394693 // Rotate
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698373 "Scene"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 990341 // Scene
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698501 "SidePropagation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.transition.Slide.GravityFlag;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1394821 // SidePropagation
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698629 "Slide"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.TimeInterpolator;
import android.annotation.IntDef;
import android.content.Context;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.DecelerateInterpolator;
import com.android.internal.R;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1394949 // Slide
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698757 "TransitionInflater"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.TransitionRes;
import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.util.ArrayMap;
import android.util.AttributeSet;
import android.util.Xml;
import android.view.InflateException;
import android.view.ViewGroup;
import com.android.internal.R;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1395589 // TransitionInflater
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 698885 "TransitionManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.TestApi;
import android.content.Context;
import android.util.ArrayMap;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 990213 // TransitionManager
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 699013 "TransitionUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorSet;
import android.animation.TypeEvaluator;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1395845 // TransitionUtils
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 699141 "TransitionValues"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.ArrayMap;
import android.view.View;
import android.view.ViewGroup;
import java.util.ArrayList;
import java.util.Map;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1029125 // TransitionValues
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 699269 "TransitionValuesMaps"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.ArrayMap;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.view.View;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1028869 // TransitionValuesMaps
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 699397 "TranslationAnimationCreator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.ObjectAnimator;
import android.animation.TimeInterpolator;
import android.graphics.Path;
import android.transition.Transition.TransitionListener;
import android.view.View;
import com.android.internal.R;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1396101 // TranslationAnimationCreator
      end
      comment "Copyright (C) 2014 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end
end
