class FrameEvents
!!!14274309.cpp!!!	hasPostedInfo() : bool
    return FrameEvents::isValidTimestamp(postedTime);
!!!14274437.cpp!!!	hasRequestedPresentInfo() : bool
    return FrameEvents::isValidTimestamp(requestedPresentTime);
!!!14274565.cpp!!!	hasLatchInfo() : bool
    return FrameEvents::isValidTimestamp(latchTime);
!!!14274693.cpp!!!	hasFirstRefreshStartInfo() : bool
    return FrameEvents::isValidTimestamp(firstRefreshStartTime);
!!!14274821.cpp!!!	hasLastRefreshStartInfo() : bool
    // The last refresh start time may continue to update until a new frame
    // is latched. We know we have the final value once the release info is set.
    return addReleaseCalled;
!!!14274949.cpp!!!	hasAcquireInfo() : bool
    return acquireFence->isValid();
!!!14275077.cpp!!!	hasGpuCompositionDoneInfo() : bool
    // We may not get a gpuCompositionDone in addPostComposite if
    // client/gles compositing isn't needed.
    return addPostCompositeCalled;
!!!14275205.cpp!!!	hasDisplayPresentInfo() : bool
    // We may not get a displayPresent in addPostComposite for HWC1.
    return addPostCompositeCalled;
!!!14275333.cpp!!!	hasReleaseInfo() : bool
    return addReleaseCalled;
!!!14275461.cpp!!!	hasDequeueReadyInfo() : bool
    return FrameEvents::isValidTimestamp(dequeueReadyTime);
!!!14275589.cpp!!!	checkFencesForCompletion() : void
    acquireFence->getSignalTime();
    gpuCompositionDoneFence->getSignalTime();
    displayPresentFence->getSignalTime();
    releaseFence->getSignalTime();
!!!14275717.cpp!!!	dump(inout outString : String8) : void
    if (!valid) {
        return;
    }

    outString.appendFormat("-- Frame %" PRIu64 "\n", frameNumber);
    outString.appendFormat("--- Posted      \t%" PRId64 "\n", postedTime);
    outString.appendFormat("--- Req. Present\t%" PRId64 "\n", requestedPresentTime);

    outString.appendFormat("--- Latched     \t");
    if (FrameEvents::isValidTimestamp(latchTime)) {
        outString.appendFormat("%" PRId64 "\n", latchTime);
    } else {
        outString.appendFormat("Pending\n");
    }

    outString.appendFormat("--- Refresh (First)\t");
    if (FrameEvents::isValidTimestamp(firstRefreshStartTime)) {
        outString.appendFormat("%" PRId64 "\n", firstRefreshStartTime);
    } else {
        outString.appendFormat("Pending\n");
    }

    outString.appendFormat("--- Refresh (Last)\t");
    if (FrameEvents::isValidTimestamp(lastRefreshStartTime)) {
        outString.appendFormat("%" PRId64 "\n", lastRefreshStartTime);
    } else {
        outString.appendFormat("Pending\n");
    }

    dumpFenceTime(outString, "Acquire           \t",
            true, *acquireFence);
    dumpFenceTime(outString, "GPU Composite Done\t",
            !addPostCompositeCalled, *gpuCompositionDoneFence);
    dumpFenceTime(outString, "Display Present   \t",
            !addPostCompositeCalled, *displayPresentFence);

    outString.appendFormat("--- DequeueReady  \t");
    if (FrameEvents::isValidTimestamp(dequeueReadyTime)) {
        outString.appendFormat("%" PRId64 "\n", dequeueReadyTime);
    } else {
        outString.appendFormat("Pending\n");
    }

    dumpFenceTime(outString, "Release           \t",
            true, *releaseFence);
