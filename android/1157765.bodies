class DefaultSplitAssetLoader
!!!6358661.java!!!	DefaultSplitAssetLoader(inout pkg : PackageParser::PackageLite, in flags : int)
        mBaseCodePath = pkg.baseCodePath;
        mSplitCodePaths = pkg.splitCodePaths;
        mFlags = flags;
!!!6358789.java!!!	loadApkIntoAssetManager(inout assets : AssetManager, in apkPath : String, in flags : int) : void
        if ((flags & PackageParser.PARSE_MUST_BE_APK) != 0 && !PackageParser.isApkPath(apkPath)) {
            throw new PackageParser.PackageParserException(INSTALL_PARSE_FAILED_NOT_APK,
                    "Invalid package file: " + apkPath);
        }

        if (assets.addAssetPath(apkPath) == 0) {
            throw new PackageParser.PackageParserException(
                    INSTALL_PARSE_FAILED_BAD_MANIFEST,
                    "Failed adding asset path: " + apkPath);
        }
!!!6358917.java!!!	getBaseAssetManager() : AssetManager
        if (mCachedAssetManager != null) {
            return mCachedAssetManager;
        }

        AssetManager assets = new AssetManager();
        try {
            assets.setConfiguration(0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    Build.VERSION.RESOURCES_SDK_INT);
            loadApkIntoAssetManager(assets, mBaseCodePath, mFlags);

            if (!ArrayUtils.isEmpty(mSplitCodePaths)) {
                for (String apkPath : mSplitCodePaths) {
                    loadApkIntoAssetManager(assets, apkPath, mFlags);
                }
            }

            mCachedAssetManager = assets;
            assets = null;
            return mCachedAssetManager;
        } finally {
            if (assets != null) {
                IoUtils.closeQuietly(assets);
            }
        }
!!!6359045.java!!!	getSplitAssetManager(in splitIdx : int) : AssetManager
        return getBaseAssetManager();
!!!6359173.java!!!	close() : void
        if (mCachedAssetManager != null) {
            IoUtils.closeQuietly(mCachedAssetManager);
        }
