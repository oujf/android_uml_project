class WindowNode
!!!5814789.java!!!	WindowNode(inout assist : AssistStructure, inout root : ViewRootImpl, inout forAutoFill : boolean, in flags : int)
            View view = root.getView();
            Rect rect = new Rect();
            view.getBoundsOnScreen(rect);
            mX = rect.left - view.getLeft();
            mY = rect.top - view.getTop();
            mWidth = rect.width();
            mHeight = rect.height();
            mTitle = root.getTitle();
            mDisplayId = root.getDisplayId();
            mRoot = new ViewNode();

            ViewNodeBuilder builder = new ViewNodeBuilder(assist, mRoot, false);
            if ((root.getWindowFlags() & WindowManager.LayoutParams.FLAG_SECURE) != 0) {
                if (forAutoFill) {
                    final int autofillFlags = (flags & FillRequest.FLAG_MANUAL_REQUEST) != 0
                            ? View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS : 0;
                    view.onProvideAutofillStructure(builder, autofillFlags);
                } else {
                    // This is a secure window, so it doesn't want a screenshot, and that
                    // means we should also not copy out its view hierarchy for Assist
                    view.onProvideStructure(builder);
                    builder.setAssistBlocked(true);
                    return;
                }
            }
            if (forAutoFill) {
                final int autofillFlags = (flags & FillRequest.FLAG_MANUAL_REQUEST) != 0
                        ? View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS : 0;
                view.dispatchProvideAutofillStructure(builder, autofillFlags);
            } else {
                view.dispatchProvideStructure(builder);
            }
!!!5814917.java!!!	WindowNode(inout reader : AssistStructure::ParcelTransferReader)
            Parcel in = reader.readParcel(VALIDATE_WINDOW_TOKEN, 0);
            reader.mNumReadWindows++;
            mX = in.readInt();
            mY = in.readInt();
            mWidth = in.readInt();
            mHeight = in.readInt();
            mTitle = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);
            mDisplayId = in.readInt();
            mRoot = new ViewNode(reader, 0);
!!!5815045.java!!!	writeSelfToParcel(inout out : Parcel, inout pwriter : PooledStringWriter, inout tmpMatrix : float [[]]) : void
            out.writeInt(mX);
            out.writeInt(mY);
            out.writeInt(mWidth);
            out.writeInt(mHeight);
            TextUtils.writeToParcel(mTitle, out, 0);
            out.writeInt(mDisplayId);
!!!5815173.java!!!	getLeft() : int
            return mX;
!!!5815301.java!!!	getTop() : int
            return mY;
!!!5815429.java!!!	getWidth() : int
            return mWidth;
!!!5815557.java!!!	getHeight() : int
            return mHeight;
!!!5815685.java!!!	getTitle() : CharSequence
            return mTitle;
!!!5815813.java!!!	getDisplayId() : int
            return mDisplayId;
!!!5815941.java!!!	getRootViewNode() : AssistStructure::ViewNode
            return mRoot;
