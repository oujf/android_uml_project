class SystemUpdatePolicy
!!!5808261.java!!!	SystemUpdatePolicy()
        mPolicyType = TYPE_UNKNOWN;
!!!5808389.java!!!	createAutomaticInstallPolicy() : SystemUpdatePolicy
        SystemUpdatePolicy policy = new SystemUpdatePolicy();
        policy.mPolicyType = TYPE_INSTALL_AUTOMATIC;
        return policy;
!!!5808517.java!!!	createWindowedInstallPolicy(in startTime : int, in endTime : int) : SystemUpdatePolicy
        if (startTime < 0 || startTime >= WINDOW_BOUNDARY
                || endTime < 0 || endTime >= WINDOW_BOUNDARY) {
            throw new IllegalArgumentException("startTime and endTime must be inside [0, 1440)");
        }
        SystemUpdatePolicy policy = new SystemUpdatePolicy();
        policy.mPolicyType = TYPE_INSTALL_WINDOWED;
        policy.mMaintenanceWindowStart = startTime;
        policy.mMaintenanceWindowEnd = endTime;
        return policy;
!!!5808645.java!!!	createPostponeInstallPolicy() : SystemUpdatePolicy
        SystemUpdatePolicy policy = new SystemUpdatePolicy();
        policy.mPolicyType = TYPE_POSTPONE;
        return policy;
!!!5808773.java!!!	getPolicyType() : int
        return mPolicyType;
!!!5808901.java!!!	getInstallWindowStart() : int
        if (mPolicyType == TYPE_INSTALL_WINDOWED) {
            return mMaintenanceWindowStart;
        } else {
            return -1;
        }
!!!5809029.java!!!	getInstallWindowEnd() : int
        if (mPolicyType == TYPE_INSTALL_WINDOWED) {
            return mMaintenanceWindowEnd;
        } else {
            return -1;
        }
!!!5809157.java!!!	isValid() : boolean
        if (mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE) {
            return true;
        } else if (mPolicyType == TYPE_INSTALL_WINDOWED) {
            return mMaintenanceWindowStart >= 0 && mMaintenanceWindowStart < WINDOW_BOUNDARY
                    && mMaintenanceWindowEnd >= 0 && mMaintenanceWindowEnd < WINDOW_BOUNDARY;
        } else {
            return false;
        }
!!!5809285.java!!!	toString() : String
        return String.format("SystemUpdatePolicy (type: %d, windowStart: %d, windowEnd: %d)",
                mPolicyType, mMaintenanceWindowStart, mMaintenanceWindowEnd);
!!!5809413.java!!!	describeContents() : int
        return 0;
!!!5809541.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(mPolicyType);
        dest.writeInt(mMaintenanceWindowStart);
        dest.writeInt(mMaintenanceWindowEnd);
!!!5809669.java!!!	restoreFromXml(inout parser : XmlPullParser) : SystemUpdatePolicy
        try {
            SystemUpdatePolicy policy = new SystemUpdatePolicy();
            String value = parser.getAttributeValue(null, KEY_POLICY_TYPE);
            if (value != null) {
                policy.mPolicyType = Integer.parseInt(value);

                value = parser.getAttributeValue(null, KEY_INSTALL_WINDOW_START);
                if (value != null) {
                    policy.mMaintenanceWindowStart = Integer.parseInt(value);
                }
                value = parser.getAttributeValue(null, KEY_INSTALL_WINDOW_END);
                if (value != null) {
                    policy.mMaintenanceWindowEnd = Integer.parseInt(value);
                }
                return policy;
            }
        } catch (NumberFormatException e) {
            // Fail through
        }
        return null;
!!!5809797.java!!!	saveToXml(inout out : XmlSerializer) : void
        out.attribute(null, KEY_POLICY_TYPE, Integer.toString(mPolicyType));
        out.attribute(null, KEY_INSTALL_WINDOW_START, Integer.toString(mMaintenanceWindowStart));
        out.attribute(null, KEY_INSTALL_WINDOW_END, Integer.toString(mMaintenanceWindowEnd));
