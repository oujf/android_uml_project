class TextServicesSettings
!!!10877957.java!!!	TextServicesSettings(inout resolver : ContentResolver, in userId : int, inout copyOnWrite : boolean)
            mResolver = resolver;
            switchCurrentUser(userId, copyOnWrite);
!!!10878085.java!!!	switchCurrentUser(in userId : int, inout copyOnWrite : boolean) : void
            if (DBG) {
                Slog.d(TAG, "--- Swtich the current user from " + mCurrentUserId + " to "
                        + userId + ", new ime = " + getSelectedSpellChecker());
            }
            if (mCurrentUserId != userId || mCopyOnWrite != copyOnWrite) {
                mCopyOnWriteDataStore.clear();
                // TODO: mCurrentProfileIds should be cleared here.
            }
            // TSMS settings are kept per user, so keep track of current user
            mCurrentUserId = userId;
            mCopyOnWrite = copyOnWrite;
            // TODO: mCurrentProfileIds should be updated here.
!!!10878213.java!!!	putString(in key : String, in str : String) : void
            if (mCopyOnWrite) {
                mCopyOnWriteDataStore.put(key, str);
            } else {
                Settings.Secure.putStringForUser(mResolver, key, str, mCurrentUserId);
            }
!!!10878341.java!!!	getString(in key : String, in defaultValue : String) : String
            final String result;
            if (mCopyOnWrite && mCopyOnWriteDataStore.containsKey(key)) {
                result = mCopyOnWriteDataStore.get(key);
            } else {
                result = Settings.Secure.getStringForUser(mResolver, key, mCurrentUserId);
            }
            return result != null ? result : defaultValue;
!!!10878469.java!!!	putInt(in key : String, in value : int) : void
            if (mCopyOnWrite) {
                mCopyOnWriteDataStore.put(key, String.valueOf(value));
            } else {
                Settings.Secure.putIntForUser(mResolver, key, value, mCurrentUserId);
            }
!!!10878597.java!!!	getInt(in key : String, in defaultValue : int) : int
            if (mCopyOnWrite && mCopyOnWriteDataStore.containsKey(key)) {
                final String result = mCopyOnWriteDataStore.get(key);
                return result != null ? Integer.parseInt(result) : 0;
            }
            return Settings.Secure.getIntForUser(mResolver, key, defaultValue, mCurrentUserId);
!!!10878725.java!!!	putBoolean(in key : String, in value : boolean) : void
            putInt(key, value ? 1 : 0);
!!!10878853.java!!!	getBoolean(in key : String, in defaultValue : boolean) : boolean
            return getInt(key, defaultValue ? 1 : 0) == 1;
!!!10878981.java!!!	setCurrentProfileIds(inout currentProfileIds : int [[]]) : void
            synchronized (mLock) {
                mCurrentProfileIds = currentProfileIds;
            }
!!!10879109.java!!!	isCurrentProfile(in userId : int) : boolean
            synchronized (mLock) {
                if (userId == mCurrentUserId) return true;
                for (int i = 0; i < mCurrentProfileIds.length; i++) {
                    if (userId == mCurrentProfileIds[i]) return true;
                }
                return false;
            }
!!!10879237.java!!!	getCurrentUserId() : int
            return mCurrentUserId;
!!!10879365.java!!!	putSelectedSpellChecker(in sciId : String) : void
            if (TextUtils.isEmpty(sciId)) {
                // OK to coalesce to null, since getSelectedSpellChecker() can take care of the
                // empty data scenario.
                putString(Settings.Secure.SELECTED_SPELL_CHECKER, null);
            } else {
                putString(Settings.Secure.SELECTED_SPELL_CHECKER, sciId);
            }
!!!10879493.java!!!	putSelectedSpellCheckerSubtype(in hashCode : int) : void
            putInt(Settings.Secure.SELECTED_SPELL_CHECKER_SUBTYPE, hashCode);
!!!10879621.java!!!	setSpellCheckerEnabled(inout enabled : boolean) : void
            putBoolean(Settings.Secure.SPELL_CHECKER_ENABLED, enabled);
!!!10879749.java!!!	getSelectedSpellChecker() : String
            return getString(Settings.Secure.SELECTED_SPELL_CHECKER, "");
!!!10879877.java!!!	getSelectedSpellCheckerSubtype(in defaultValue : int) : int
            return getInt(Settings.Secure.SELECTED_SPELL_CHECKER_SUBTYPE, defaultValue);
!!!10880005.java!!!	isSpellCheckerEnabled() : boolean
            return getBoolean(Settings.Secure.SPELL_CHECKER_ENABLED, true);
!!!10880133.java!!!	dumpLocked(in pw : PrintWriter, in prefix : String) : void
            pw.println(prefix + "mCurrentUserId=" + mCurrentUserId);
            pw.println(prefix + "mCurrentProfileIds=" + Arrays.toString(mCurrentProfileIds));
            pw.println(prefix + "mCopyOnWrite=" + mCopyOnWrite);
