format 214
"params" // source::frameworks::base::core::java::org::apache::http::params
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\Users\\Jeff\\Documents\\aosp\\frameworks\\base\\core\\java/org/apache/http/params/"
  java_package "org.apache.http.params"
  classview 231941 "params"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1573509 "HttpParams"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Represents a collection of HTTP protocol and framework parameters.
  
@author <a href=\"mailto:oleg at ural.ru\">Oleg Kalnichevski</a>

@version $Revision: 610763 $

@since 4.0

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details.
"
      operation 10560901 "getParameter"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Obtains the value of the given parameter.

@param name the parent name.

@return  an object that represents the value of the parameter,
         <code>null</code> if the parameter is not set or if it
         is explicitly set to <code>null</code>

@see #setParameter(String, Object)
"
      end

      operation 10561029 "setParameter"
	public return_type class_ref 1573509 // HttpParams
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Assigns the value to the parameter with the given name.

@param name parameter name
@param value parameter value
"
      end

      operation 10561157 "copy"
	public return_type class_ref 1573509 // HttpParams
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a copy of these parameters.

@return  a new set of parameters holding the same values as this one
"
      end

      operation 10561285 "removeParameter"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Removes the parameter with the specified name.

@param name parameter name

@return true if the parameter existed and has been removed, false else.
"
      end

      operation 10561413 "getLongParameter"
	public explicit_return_type "long"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns a {@link Long} parameter value with the given name. 
If the parameter is not explicitly set, the default value is returned.  

@param name the parent name.
@param defaultValue the default value.

@return a {@link Long} that represents the value of the parameter.

@see #setLongParameter(String, long)
"
      end

      operation 10561541 "setLongParameter"
	public return_type class_ref 1573509 // HttpParams
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Assigns a {@link Long} to the parameter with the given name

@param name parameter name
@param value parameter value
"
      end

      operation 10561669 "getIntParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns an {@link Integer} parameter value with the given name. 
If the parameter is not explicitly set, the default value is returned.  

@param name the parent name.
@param defaultValue the default value.

@return a {@link Integer} that represents the value of the parameter.

@see #setIntParameter(String, int)
"
      end

      operation 10561797 "setIntParameter"
	public return_type class_ref 1573509 // HttpParams
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Assigns an {@link Integer} to the parameter with the given name

@param name parameter name
@param value parameter value
"
      end

      operation 10561925 "getDoubleParameter"
	public explicit_return_type "double"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns a {@link Double} parameter value with the given name. 
If the parameter is not explicitly set, the default value is returned.  

@param name the parent name.
@param defaultValue the default value.

@return a {@link Double} that represents the value of the parameter.

@see #setDoubleParameter(String, double)
"
      end

      operation 10562053 "setDoubleParameter"
	public return_type class_ref 1573509 // HttpParams
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Assigns a {@link Double} to the parameter with the given name

@param name parameter name
@param value parameter value
"
      end

      operation 10562181 "getBooleanParameter"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "defaultValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns a {@link Boolean} parameter value with the given name. 
If the parameter is not explicitly set, the default value is returned.  

@param name the parent name.
@param defaultValue the default value.

@return a {@link Boolean} that represents the value of the parameter.

@see #setBooleanParameter(String, boolean)
"
      end

      operation 10562309 "setBooleanParameter"
	public return_type class_ref 1573509 // HttpParams
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Assigns a {@link Boolean} to the parameter with the given name

@param name parameter name
@param value parameter value
"
      end

      operation 10562437 "isParameterTrue"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Checks if a boolean parameter is set to <code>true</code>.

@param name parameter name

@return <tt>true</tt> if the parameter is set to value <tt>true</tt>,
        <tt>false</tt> if it is not set or set to <code>false</code>
"
      end

      operation 10562565 "isParameterFalse"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Checks if a boolean parameter is not set or <code>false</code>.

@param name parameter name

@return <tt>true</tt> if the parameter is either not set or
        set to value <tt>false</tt>,
        <tt>false</tt> if it is set to <code>true</code>
"
      end
    end

    class 1574661 "CoreConnectionPNames"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Defines parameter names for connections in HttpCore.

@version $Revision: 576077 $

@since 4.0

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details.
"
      attribute 6590597 "SO_TIMEOUT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.socket.timeout\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Defines the default socket timeout (<tt>SO_TIMEOUT</tt>) in milliseconds which is the 
timeout for waiting for data. A timeout value of zero is interpreted as an infinite 
timeout. This value is used when no socket timeout is set in the 
method parameters. 
<p>
This parameter expects a value of type {@link Integer}.
</p>
@see java.net.SocketOptions#SO_TIMEOUT

"
      end

      attribute 6590725 "TCP_NODELAY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.tcp.nodelay\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Determines whether Nagle's algorithm is to be used. The Nagle's algorithm 
tries to conserve bandwidth by minimizing the number of segments that are 
sent. When applications wish to decrease network latency and increase 
performance, they can disable Nagle's algorithm (that is enable TCP_NODELAY). 
Data will be sent earlier, at the cost of an increase in bandwidth consumption. 
<p>
This parameter expects a value of type {@link Boolean}.
</p>
@see java.net.SocketOptions#TCP_NODELAY

"
      end

      attribute 6590853 "SOCKET_BUFFER_SIZE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.socket.buffer-size\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Determines the size of the internal socket buffer used to buffer data
while receiving / transmitting HTTP messages.
<p>
This parameter expects a value of type {@link Integer}.
</p>

"
      end

      attribute 6590981 "SO_LINGER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.socket.linger\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sets SO_LINGER with the specified linger time in seconds. The maximum timeout 
value is platform specific. Value <tt>0</tt> implies that the option is disabled.
Value <tt>-1</tt> implies that the JRE default is used. The setting only affects 
socket close.  
<p>
This parameter expects a value of type {@link Integer}.
</p>
@see java.net.SocketOptions#SO_LINGER

"
      end

      attribute 6591109 "CONNECTION_TIMEOUT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.connection.timeout\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Determines the timeout until a connection is etablished. A value of zero 
means the timeout is not used. The default value is zero.
<p>
This parameter expects a value of type {@link Integer}.
</p>

"
      end

      attribute 6591237 "STALE_CONNECTION_CHECK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.connection.stalecheck\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Determines whether stale connection check is to be used. Disabling 
stale connection check may result in slight performance improvement 
at the risk of getting an I/O error when executing a request over a
connection that has been closed at the server side. 
<p>
This parameter expects a value of type {@link Boolean}.
</p>

"
      end

      attribute 6591365 "MAX_LINE_LENGTH"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.connection.max-line-length\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Determines the maximum line length limit. If set to a positive value, any HTTP 
line exceeding this limit will cause an IOException. A negative or zero value
will effectively disable the check.
<p>
This parameter expects a value of type {@link Integer}.
</p>

"
      end

      attribute 6591493 "MAX_HEADER_COUNT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"http.connection.max-header-count\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Determines the maximum HTTP header count allowed. If set to a positive value, 
the number of HTTP headers received from the data stream exceeding this limit 
will cause an IOException. A negative or zero value will effectively disable 
the check. 
<p>
This parameter expects a value of type {@link Integer}.
</p>

"
      end
    end

    class 1574789 "HttpConnectionParams"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An adaptor for accessing connection parameters in {@link HttpParams}.
<br/>
Note that the <i>implements</i> relation to {@link CoreConnectionPNames}
is for compatibility with existing application code only. References to
the parameter names should use the interface, not this class.

@author <a href=\"mailto:oleg at ural.ru\">Oleg Kalnichevski</a>

@version $Revision: 576089 $

@since 4.0

@deprecated Please use {@link java.net.URL#openConnection} instead.
    Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>
    for further details.
"
      classrelation 2592261 // <realization>
	relation 2592261 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2592261 // <realization>
	  b parent class_ref 1574661 // CoreConnectionPNames
      end

      operation 10559237 "HttpConnectionParams"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 10559365 "getSoTimeout"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "params" type class_ref 1573509 // HttpParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the default socket timeout (<tt>SO_TIMEOUT</tt>) in milliseconds which is the 
timeout for waiting for data. A timeout value of zero is interpreted as an infinite 
timeout. This value is used when no socket timeout is set in the 
method parameters. 

@return timeout in milliseconds
"
      end

      operation 10559493 "setSoTimeout"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" type class_ref 1573509 // HttpParams
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the default socket timeout (<tt>SO_TIMEOUT</tt>) in milliseconds which is the 
timeout for waiting for data. A timeout value of zero is interpreted as an infinite 
timeout. This value is used when no socket timeout is set in the 
method parameters. 

@param timeout Timeout in milliseconds
"
      end

      operation 10559621 "getTcpNoDelay"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "params" type class_ref 1573509 // HttpParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Tests if Nagle's algorithm is to be used.  

@return <tt>true</tt> if the Nagle's algorithm is to NOT be used
  (that is enable TCP_NODELAY), <tt>false</tt> otherwise.
"
      end

      operation 10559749 "setTcpNoDelay"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" type class_ref 1573509 // HttpParams
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Determines whether Nagle's algorithm is to be used. The Nagle's algorithm 
tries to conserve bandwidth by minimizing the number of segments that are 
sent. When applications wish to decrease network latency and increase 
performance, they can disable Nagle's algorithm (that is enable TCP_NODELAY). 
Data will be sent earlier, at the cost of an increase in bandwidth consumption. 

@param value <tt>true</tt> if the Nagle's algorithm is to NOT be used
  (that is enable TCP_NODELAY), <tt>false</tt> otherwise.
"
      end

      operation 10559877 "getSocketBufferSize"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "params" type class_ref 1573509 // HttpParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 10560005 "setSocketBufferSize"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" type class_ref 1573509 // HttpParams
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 10560133 "getLinger"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "params" type class_ref 1573509 // HttpParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns linger-on-close timeout. Value <tt>0</tt> implies that the option is 
disabled. Value <tt>-1</tt> implies that the JRE default is used.

@return the linger-on-close timeout
"
      end

      operation 10560261 "setLinger"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" type class_ref 1573509 // HttpParams
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns linger-on-close timeout. This option disables/enables immediate return 
from a close() of a TCP Socket. Enabling this option with a non-zero Integer 
timeout means that a close() will block pending the transmission and 
acknowledgement of all data written to the peer, at which point the socket is 
closed gracefully. Value <tt>0</tt> implies that the option is 
disabled. Value <tt>-1</tt> implies that the JRE default is used.

@param value the linger-on-close timeout
"
      end

      operation 10560389 "getConnectionTimeout"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "params" type class_ref 1573509 // HttpParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the timeout until a connection is etablished. A value of zero 
means the timeout is not used. The default value is zero.

@return timeout in milliseconds.
"
      end

      operation 10560517 "setConnectionTimeout"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" type class_ref 1573509 // HttpParams
	  param in name "timeout" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the timeout until a connection is etablished. A value of zero 
means the timeout is not used. The default value is zero.

@param timeout Timeout in milliseconds.
"
      end

      operation 10560645 "isStaleCheckingEnabled"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "params" type class_ref 1573509 // HttpParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Tests whether stale connection check is to be used. Disabling 
stale connection check may result in slight performance improvement 
at the risk of getting an I/O error when executing a request over a
connection that has been closed at the server side. 

@return <tt>true</tt> if stale connection check is to be used, 
  <tt>false</tt> otherwise.
"
      end

      operation 10560773 "setStaleCheckingEnabled"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "params" type class_ref 1573509 // HttpParams
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Defines whether stale connection check is to be used. Disabling 
stale connection check may result in slight performance improvement 
at the risk of getting an I/O error when executing a request over a
connection that has been closed at the server side. 

@param value <tt>true</tt> if stale connection check is to be used, 
  <tt>false</tt> otherwise.
"
      end
    end
  end

  deploymentview 209157 "params"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 793349 "CoreConnectionPNames"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1574661 // CoreConnectionPNames
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk/module-main/src/main/java/org/apache/http/params/CoreConnectionPNames.java $
$Revision: 576077 $
$Date: 2007-09-16 04:50:22 -0700 (Sun, 16 Sep 2007) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.

"
    end

    artifact 793477 "HttpConnectionParams"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1574789 // HttpConnectionParams
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk/module-main/src/main/java/org/apache/http/params/HttpConnectionParams.java $
$Revision: 576089 $
$Date: 2007-09-16 05:39:56 -0700 (Sun, 16 Sep 2007) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.

"
    end

    artifact 793605 "HttpParams"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1573509 // HttpParams
      end
      comment "$HeadURL: http://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk/module-main/src/main/java/org/apache/http/params/HttpParams.java $
$Revision: 610763 $
$Date: 2008-01-10 04:01:13 -0800 (Thu, 10 Jan 2008) $

====================================================================
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
\"License\"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
====================================================================

This software consists of voluntary contributions made by many
individuals on behalf of the Apache Software Foundation.  For more
information on the Apache Software Foundation, please see
<http://www.apache.org/>.

"
    end
  end
end
