class GnssGeofenceCallback
!!!10569477.cpp!!!	gnssGeofenceTransitionCb(in geofenceId : int32_t, in location : android::hardware::gnss::V1_0::GnssLocation, in transition : GeofenceTransition, in timestamp : hardware::gnss::V1_0::GnssUtcTime) : Return<void>
    JNIEnv* env = getJniEnv();

    jobject jLocation = translateLocation(env, location);

    env->CallVoidMethod(mCallbacksObj,
                        method_reportGeofenceTransition,
                        geofenceId,
                        jLocation,
                        transition,
                        timestamp);

    checkAndClearExceptionFromCallback(env, __FUNCTION__);
    return Void();
!!!10569605.cpp!!!	gnssGeofenceStatusCb(in status : GeofenceAvailability, in location : android::hardware::gnss::V1_0::GnssLocation) : Return<void>
    JNIEnv* env = getJniEnv();

    jobject jLocation = translateLocation(env, location);

    env->CallVoidMethod(mCallbacksObj,
                        method_reportGeofenceStatus,
                        status,
                        jLocation);
    checkAndClearExceptionFromCallback(env, __FUNCTION__);
    return Void();
!!!10569733.cpp!!!	gnssGeofenceAddCb(in geofenceId : int32_t, in status : GeofenceStatus) : Return<void>
    JNIEnv* env = getJniEnv();
    if (status != IGnssGeofenceCallback::GeofenceStatus::OPERATION_SUCCESS) {
        ALOGE("%s: Error in adding a Geofence: %d\n", __func__, status);
    }

    env->CallVoidMethod(mCallbacksObj,
                        method_reportGeofenceAddStatus,
                        geofenceId,
                        status);
    checkAndClearExceptionFromCallback(env, __FUNCTION__);
    return Void();
!!!10569861.cpp!!!	gnssGeofenceRemoveCb(in geofenceId : int32_t, in status : GeofenceStatus) : Return<void>
    JNIEnv* env = getJniEnv();
    if (status != IGnssGeofenceCallback::GeofenceStatus::OPERATION_SUCCESS) {
        ALOGE("%s: Error in removing a Geofence: %d\n", __func__, status);
    }

    env->CallVoidMethod(mCallbacksObj,
                        method_reportGeofenceRemoveStatus,
                        geofenceId, status);
    checkAndClearExceptionFromCallback(env, __FUNCTION__);
    return Void();
!!!10569989.cpp!!!	gnssGeofencePauseCb(in geofenceId : int32_t, in status : GeofenceStatus) : Return<void>
    JNIEnv* env = getJniEnv();
    if (status != IGnssGeofenceCallback::GeofenceStatus::OPERATION_SUCCESS) {
        ALOGE("%s: Error in pausing Geofence: %d\n", __func__, status);
    }

    env->CallVoidMethod(mCallbacksObj,
                        method_reportGeofencePauseStatus,
                        geofenceId, status);
    checkAndClearExceptionFromCallback(env, __FUNCTION__);
    return Void();
!!!10570117.cpp!!!	gnssGeofenceResumeCb(in geofenceId : int32_t, in status : GeofenceStatus) : Return<void>
    JNIEnv* env = getJniEnv();
    if (status != IGnssGeofenceCallback::GeofenceStatus::OPERATION_SUCCESS) {
        ALOGE("%s: Error in resuming Geofence: %d\n", __func__, status);
    }

    env->CallVoidMethod(mCallbacksObj,
                        method_reportGeofenceResumeStatus,
                        geofenceId, status);
    checkAndClearExceptionFromCallback(env, __FUNCTION__);
    return Void();
