class TrackedCollections
!!!4256645.java!!!	track(inout collection : Collection<?>, in tag : String) : void
        CollectionState collectionState = mCollections.get(collection);
        if (collectionState == null) {
            collectionState = new CollectionState();
            collectionState.tag = tag;
            collectionState.startUptime = SystemClock.uptimeMillis();
            mCollections.put(collection, collectionState);
        }
        if (collectionState.halfwayCount == -1
                && SystemClock.uptimeMillis() - collectionState.startUptime > HALFWAY_DELAY) {
            collectionState.halfwayCount = collectionState.lastCount;
        }
        collectionState.lastCount = collection.size();
        collectionState.lastUptime = SystemClock.uptimeMillis();
!!!4257029.java!!!	dump(inout pw : PrintWriter, inout filter : Predicate<Collection<?>>) : void
        for (Map.Entry<WeakReference<Collection<?>>, CollectionState> entry
                : mCollections.entrySet()) {
            Collection<?> key = entry.getKey().get();
            if (filter == null || key != null && filter.test(key)) {
                entry.getValue().dump(pw);
                pw.println();
            }
        }
