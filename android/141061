format 214
"device3" // source::frameworks::av::services::camera::libcameraservice::device3
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/services/camera/libcameraservice/device3/"
  cpp_src_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/services/camera/libcameraservice/device3/"
  cpp_namespace "android::camera3"
  classview 138117 "device3"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 186885 "Camera3StreamBufferListener"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 209029 // <generalisation>
	relation 209029 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 209029 // <generalisation>
	  b parent class_ref 196229 // typedef82
      end

      classrelation 209157 // <generalisation>
	relation 209157 ---|>
	  a private
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 209157 // <generalisation>
	  b parent class_ref 196357 // typedef83
      end

      class 203781 "BufferInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 320517 "mOutput"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " if false then input buffer"
	end

	attribute 320645 "mCrop"
	  public explicit_type "Rect"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 320773 "mTransform"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 320901 "mScalingMode"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 321029 "mTimestamp"
	  public explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 321157 "mFrameNumber"
	  public explicit_type "uint64_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 321285 "mError"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 498181 "onBufferAcquired"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "bufferInfo" type class_ref 203781 // BufferInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Buffer was acquired by the HAL"
      end

      operation 498309 "onBufferReleased"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "bufferInfo" type class_ref 203781 // BufferInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Buffer was released by the HAL"
      end
    end

    class 196101 "Camera3BufferManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class managing the graphic buffers that is used by camera output streams. It allocates and
hands out Gralloc buffers to the clients (e.g., Camera3OutputStream) based on the requests.
When clients request a buffer, buffer manager will pick a buffer if there are some already
allocated buffer available, will allocate a buffer otherwise. When there are too many allocated
buffer maintained by the buffer manager, it will dynamically deallocate some buffers that are
solely owned by this buffer manager.
In doing so, it reduces the memory footprint unless it is already minimal without impacting
performance.

"
      classrelation 199429 // <generalisation>
	relation 199429 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 199429 // <generalisation>
	  b parent class_ref 196229 // typedef82
      end

      classrelation 199557 // <generalisation>
	relation 199557 ---|>
	  a private
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 199557 // <generalisation>
	  b parent class_ref 196357 // typedef83
      end

      operation 465157 "Camera3BufferManager"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 465285 "~Camera3BufferManager"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 465413 "registerStream"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param inout name "stream" explicit_type "wp<Camera3OutputStream>"
	  param in name "streamInfo" type class_ref 196485 // StreamInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method registers an output stream to this buffer manager by using the provided stream
information.

The stream info includes the necessary information such as stream size, format, buffer count,
usage flags, etc. for the buffer manager to allocate and hand out buffers for this stream.

It's illegal to call this method if the stream is not CONFIGURED yet, as some critical
stream properties (e.g., combined usage flags) are only available in this state. It is also
illegal to call this method with an invalid stream set ID (CAMERA3_STREAM_SET_ID_INVALID),
as the invalid stream set ID indicates that this stream doesn't intend to use buffer manager.


Once a stream is successfully registered to this buffer manager, the buffer manager takes
over the buffer allocation role and provides buffers to this stream via getBufferForStream().
The returned buffer can be sent to the camera HAL for image output, and then queued to the
ANativeWindow (Surface) for downstream consumer to acquire. Once the image buffer is released
by the consumer end point, the BufferQueueProducer callback onBufferReleased will call
returnBufferForStream() to return the free buffer to this buffer manager. If the stream
uses buffer manager to manage the stream buffers, it should disable the BufferQueue
allocation via IGraphicBufferProducer::allowAllocation(false).

Registering an already registered stream has no effect.

Return values:

 OK:                Registration of the new stream was successful.
 BAD_VALUE:         This stream is not at CONFIGURED state, or the stream ID or stream set
                    ID are invalid, or attempting to register the same stream to multiple
                    stream sets, or other stream properties are invalid.
 INVALID_OPERATION: This buffer manager doesn't support buffer sharing across this stream
                    and other streams that were already registered with the same stream set
                    ID.
"
      end

      operation 465541 "unregisterStream"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 2
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method unregisters a stream from this buffer manager.

After a stream is unregistered, further getBufferForStream() calls will fail for this stream.
After all streams for a given stream set are unregistered, all the buffers solely owned (for
this stream set) by this buffer manager will be freed; all buffers subsequently returned to
this buffer manager for this stream set will be freed immediately.

Return values:

 OK:        Removal of the a stream from this buffer manager was successful.
 BAD_VALUE: stream ID or stream set ID are invalid, or stream ID and stream set ID
            combination doesn't match what was registered, or this stream wasn't registered
            to this buffer manager before.
"
      end

      operation 465669 "getBufferForStream"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 4
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	  param inout name "gb" explicit_type "sp<GraphicBuffer>"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method obtains a buffer for a stream from this buffer manager.

This method returns the first free buffer from the free buffer list (associated with this
stream set) if there is any. Otherwise, it will allocate a buffer for this stream, return
it and increment its count of handed-out buffers. When the total number of allocated buffers
is too high, it may deallocate the unused buffers to save memory footprint of this stream
set.

After this call, the client takes over the ownership of this buffer if it is not freed.

Return values:

 OK:        Getting buffer for this stream was successful.
 ALREADY_EXISTS: Enough free buffers are already attached to this output buffer queue,
            user should just dequeue from the buffer queue.
 BAD_VALUE: stream ID or streamSetId are invalid, or stream ID and stream set ID
            combination doesn't match what was registered, or this stream wasn't registered
            to this buffer manager before.
 NO_MEMORY: Unable to allocate a buffer for this stream at this time.
"
      end

      operation 465797 "onBufferReleased"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	  param inout name "shouldFreeBuffer" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method notifies the manager that a buffer has been released by the consumer.

The buffer is not returned to the buffer manager, but is available for the stream the buffer
is attached to for dequeuing.

The notification lets the manager know how many buffers are directly available to the stream.

If onBufferReleased is called for a given released buffer,
returnBufferForStream may not be called for the same buffer, until the
buffer has been reused. The manager will call detachBuffer on the stream
if it needs the released buffer otherwise.

When shouldFreeBuffer is set to true, caller must detach and free one buffer from the
buffer queue, and then call notifyBufferRemoved to update the manager.

Return values:

 OK:        Buffer release was processed succesfully
 BAD_VALUE: stream ID or streamSetId are invalid, or stream ID and stream set ID
            combination doesn't match what was registered, or this stream wasn't registered
            to this buffer manager before, or shouldFreeBuffer is null/
"
      end

      operation 465925 "onBuffersRemoved"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 3
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	  param in name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method notifies the manager that certain buffers has been removed from the
buffer queue by detachBuffer from the consumer.

The notification lets the manager update its internal handout buffer count and
attached buffer counts accordingly. When buffers are detached from
consumer, both handout and attached counts are decremented.

Return values:

 OK:        Buffer removal was processed succesfully
 BAD_VALUE: stream ID or streamSetId are invalid, or stream ID and stream set ID
            combination doesn't match what was registered, or this stream wasn't registered
            to this buffer manager before, or the removed buffer count is larger than
            current total handoutCount or attachedCount.
"
      end

      operation 466053 "notifyBufferRemoved"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This method notifiers the manager that a buffer is freed from the buffer queue, usually
because onBufferReleased signals the caller to free a buffer via the shouldFreeBuffer flag.
"
      end

      operation 466181 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Dump the buffer manager statistics.
"
      end

      attribute 300037 "BUFFER_WATERMARK_DEC_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " allocatedBufferWaterMark will be decreased when:
   numAllocatedBuffersThisSet > numHandoutBuffersThisSet + BUFFER_WATERMARK_DEC_THRESHOLD
 This allows the watermark go back down after a burst of buffer requests
"
      end

      attribute 300165 "BUFFER_FREE_THRESHOLD"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " onBufferReleased will set shouldFreeBuffer to true when:
   numAllocatedBuffersThisSet > allocatedBufferWaterMark AND
   numAllocatedBuffersThisStream > numHandoutBuffersThisStream + BUFFER_FREE_THRESHOLD
 So after a burst of buffer requests and back to steady state, the buffer queue should have
 (BUFFER_FREE_THRESHOLD + steady state handout buffer count) buffers.
"
      end

      attribute 300293 "mLock"
	private explicit_type "Mutex"
	cpp_mutable cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Lock to synchronize the access to the methods of this class.

"
      end

      attribute 300421 "kMaxBufferCount"
	class_attribute const_attribute private explicit_type "size_t"
	init_value "=  BufferQueueDefs::NUM_BUFFER_SLOTS"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 196613 "GraphicBufferEntry"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 300549 "graphicBuffer"
	  public explicit_type "GraphicBuffer"
	  stereotype "sp"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 300677 "fenceFd"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 466309 "GraphicBufferEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param in name "gb" explicit_type "sp<GraphicBuffer>"
	      defaultvalue "0"
	    param in name "fd" explicit_type "int"
	      defaultvalue "-1"
	  cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract} :
            graphicBuffer(gb),
            fenceFd(fd) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 196741 "StreamId"
	visibility package stereotype "typedef" explicit_base_type "int"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      class 196869 "BufferEntry"
	visibility package stereotype "typedef" base_type class_ref 196741 // StreamId
	cpp_decl "${comment}typedef KeyedVector<${type},GraphicBufferEntry> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 199685 // <dependency>
	  relation 199685 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 199685 // <dependency>
	    b parent class_ref 196741 // StreamId
	end
      end

      class 196997 "BufferList"
	visibility package stereotype "typedef" base_type class_ref 196869 // BufferEntry
	cpp_decl "${comment}typedef std::list<${type}> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 199813 // <dependency>
	  relation 199813 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 199813 // <dependency>
	    b parent class_ref 196869 // BufferEntry
	end
      end

      class 197125 "InfoMap"
	visibility package stereotype "typedef" base_type class_ref 196741 // StreamId
	cpp_decl "${comment}typedef KeyedVector<${type},StreamInfo> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 199941 // <dependency>
	  relation 199941 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 199941 // <dependency>
	    b parent class_ref 196741 // StreamId
	end
      end

      class 197253 "BufferCountMap"
	visibility package stereotype "typedef" base_type class_ref 196741 // StreamId
	cpp_decl "${comment}typedef KeyedVector<${type},size_t> ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 200069 // <dependency>
	  relation 200069 -_->
	    a public
	      cpp default "#include in source"
	      classrelation_ref 200069 // <dependency>
	    b parent class_ref 196741 // StreamId
	end
      end

      class 197381 "StreamSet"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 300805 "allocatedBufferWaterMark"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Stream set buffer count water mark representing the max number of allocated buffers
(hand-out buffers + free buffers) count for each stream set. For a given stream set, when
getBufferForStream() is called on this buffer manager, if the total allocated buffer
count exceeds this water mark, the buffer manager will attempt to reduce it as follows:

In getBufferForStream(), find a buffer associated with other streams (inside the same
stream set) on the free buffer list and free it. For Gralloc V1, can just free the top
of the free buffer list if the physical buffer sharing in this stream is supported.

For a particular stream set, a larger allocatedBufferWaterMark increases the memory
footprint of the stream set, but reduces the chance that getBufferForStream() will have
to allocate a new buffer. We assume that the streams in one stream set are not streaming
simultaneously, the max allocated buffer count water mark for a stream set will the max
of all streams' total buffer counts. This will avoid new buffer allocation in steady
streaming state.

This water mark can be dynamically changed, and will grow when the hand-out buffer count
of each stream increases, until it reaches the maxAllowedBufferCount.

"
	end

	attribute 300933 "maxAllowedBufferCount"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The max allowed buffer count for this stream set. It is the max of total number of
buffers for each stream. This is the upper bound of the allocatedBufferWaterMark.

"
	end

	classrelation 200197 // streamInfoMap (<directional composition>)
	  relation 200197 *-->
	    a role_name "streamInfoMap" public
	      comment "The stream info for all streams in this set

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${readonly}${attribute}${type} ${name};
"
	      classrelation_ref 200197 // streamInfoMap (<directional composition>)
	    b parent class_ref 197125 // InfoMap
	end

	classrelation 200325 // handoutBufferCountMap (<directional composition>)
	  relation 200325 *-->
	    a role_name "handoutBufferCountMap" public
	      comment "The count of the buffers that were handed out to the streams of this set.

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${readonly}${attribute}${type} ${name};
"
	      classrelation_ref 200325 // handoutBufferCountMap (<directional composition>)
	    b parent class_ref 197253 // BufferCountMap
	end

	classrelation 200453 // attachedBufferCountMap (<directional composition>)
	  relation 200453 *-->
	    a role_name "attachedBufferCountMap" public
	      comment "The count of the buffers that are attached to the streams of this set.
An attached buffer may be free or handed out

"
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${readonly}${attribute}${type} ${name};
"
	      classrelation_ref 200453 // attachedBufferCountMap (<directional composition>)
	    b parent class_ref 197253 // BufferCountMap
	end

	operation 466437 "StreamSet"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {
            allocatedBufferWaterMark = 0;
            maxAllowedBufferCount = 0;
        };
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 197509 "StreamSetId"
	visibility package stereotype "typedef" explicit_base_type "int"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      classrelation 200581 // mStreamSetMap (<directional composition>)
	relation 200581 *-->
	  stereotype "KeyedVector"
	  a role_name "mStreamSetMap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type},StreamSet> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 200581 // mStreamSetMap (<directional composition>)
	  b parent class_ref 197509 // StreamSetId
      end

      classrelation 200709 // mStreamMap (<directional composition>)
	relation 200709 *-->
	  stereotype "KeyedVector"
	  a role_name "mStreamMap" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type},wp<Camera3OutputStream> > ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 200709 // mStreamMap (<directional composition>)
	  b parent class_ref 196741 // StreamId
      end

      attribute 301061 "mGrallocVersion"
	const_attribute private explicit_type "uint32_t"
	init_value "=  GRALLOC_DEVICE_API_VERSION_0_1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " TODO: There is no easy way to query the Gralloc version in this code yet, we have different
 code paths for different Gralloc versions, hardcode something here for now.
"
      end

      operation 466565 "checkIfStreamRegisteredLocked"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 2
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Check if this stream was successfully registered already. This method needs to be called with
mLock held.
"
      end

      operation 466693 "checkAndFreeBufferOnOtherStreamsLocked"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 2
	  param in name "streamId" explicit_type "int"
	  param in name "streamSetId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Check if other streams in the stream set has extra buffer available to be freed, and
free one if so.
"
      end
    end

    class 196229 "typedef82"
      visibility package stereotype "typedef" explicit_base_type "virtual"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 196357 "typedef83"
      visibility package stereotype "typedef" explicit_base_type "RefBase"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 196485 "StreamInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Stream info structure that holds the necessary stream info for buffer manager to use for
buffer allocation and management.
"
      attribute 316933 "streamId"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317061 "streamSetId"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317189 "width"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317317 "height"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317445 "format"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317573 "dataSpace"
	public explicit_type "android_dataspace"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317701 "combinedUsage"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317829 "totalBufferCount"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 317957 "isConfigured"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 491781 "StreamInfo"
	cpp_inline public explicit_return_type ""
	nparams 9
	  param in name "id" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_ID_INVALID"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	  param in name "w" explicit_type "uint32_t"
	    defaultvalue "0"
	  param in name "h" explicit_type "uint32_t"
	    defaultvalue "0"
	  param in name "fmt" explicit_type "uint32_t"
	    defaultvalue "0"
	  param in name "ds" explicit_type "android_dataspace"
	    defaultvalue "HAL_DATASPACE_UNKNOWN"
	  param in name "usage" explicit_type "uint32_t"
	    defaultvalue "0"
	  param in name "bufferCount" explicit_type "size_t"
	    defaultvalue "0"
	  param in name "configured" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw}${abstract} :
                streamId(id),
                streamSetId(setId),
                width(w),
                height(h),
                format(fmt),
                dataSpace(ds),
                combinedUsage(usage),
                totalBufferCount(bufferCount),
                isConfigured(configured){};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 198789 "Camera3StreamBufferFreedListener"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      operation 497925 "onBufferFreed"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "streamId" explicit_type "int"
	  param in name "handle" explicit_type "native_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " onBufferFreed is called when a buffer is no longer being managed
 by this stream. This will not be called in events when all
 buffers are freed due to stream disconnection.

 The input handle may be deleted after this callback ends, so attempting
 to dereference handle post this callback is illegal and might lead to
 crash.

 This callback will be called while holding Camera3Stream's lock, so
 calling into other Camera3Stream APIs within this callback will
 lead to deadlock."
      end

      operation 498053 "~Camera3StreamBufferFreedListener"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end
    end

    class 199685 "Camera3Stream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class for managing a single stream of input or output data from the camera
device.

The stream has an internal state machine to track whether it's
connected/configured/etc.

States:

 STATE_ERROR: A serious error has occurred, stream is unusable. Outstanding
   buffers may still be returned.

 STATE_CONSTRUCTED: The stream is ready for configuration, but buffers cannot
   be gotten yet. Not connected to any endpoint, no buffers are registered
   with the HAL.

 STATE_IN_CONFIG: Configuration has started, but not yet concluded. During this
   time, the usage, max_buffers, and priv fields of camera3_stream returned by
   startConfiguration() may be modified.

 STATE_IN_RE_CONFIG: Configuration has started, and the stream has been
   configured before. Need to track separately from IN_CONFIG to avoid
   re-registering buffers with HAL.

 STATE_CONFIGURED: Stream is configured, and has registered buffers with the
   HAL (if necessary). The stream's getBuffer/returnBuffer work. The priv
   pointer may still be modified.

 STATE_PREPARING: The stream's buffers are being pre-allocated for use.  On
   older HALs, this is done as part of configuration, but in newer HALs
   buffers may be allocated at time of first use. But some use cases require
   buffer allocation upfront, to minmize disruption due to lengthy allocation
   duration.  In this state, only prepareNextBuffer() and cancelPrepare()
   may be called.

Transition table:

   <none>               => STATE_CONSTRUCTED:
       When constructed with valid arguments
   <none>               => STATE_ERROR:
       When constructed with invalid arguments
   STATE_CONSTRUCTED    => STATE_IN_CONFIG:
       When startConfiguration() is called
   STATE_IN_CONFIG      => STATE_CONFIGURED:
       When finishConfiguration() is called
   STATE_IN_CONFIG      => STATE_ERROR:
       When finishConfiguration() fails to allocate or register buffers.
   STATE_CONFIGURED     => STATE_IN_RE_CONFIG:  *
       When startConfiguration() is called again, after making sure stream is
       idle with waitUntilIdle().
   STATE_IN_RE_CONFIG   => STATE_CONFIGURED:
       When finishConfiguration() is called.
   STATE_IN_RE_CONFIG   => STATE_ERROR:
       When finishConfiguration() fails to allocate or register buffers.
   STATE_CONFIGURED     => STATE_CONSTRUCTED:
       When disconnect() is called after making sure stream is idle with
       waitUntilIdle().
   STATE_CONFIGURED     => STATE_PREPARING:
       When startPrepare is called before the stream has a buffer
       queued back into it for the first time.
   STATE_PREPARING      => STATE_CONFIGURED:
       When sufficient prepareNextBuffer calls have been made to allocate
       all stream buffers, or cancelPrepare is called.
   STATE_CONFIGURED     => STATE_ABANDONED:
       When the buffer queue of the stream is abandoned.

Status Tracking:
   Each stream is tracked by StatusTracker as a separate component,
   depending on the handed out buffer count. The state must be STATE_CONFIGURED
   in order for the component to be marked.

   It's marked in one of two ways:

   - ACTIVE: One or more buffers have been handed out (with #getBuffer).
   - IDLE: All buffers have been returned (with #returnBuffer), and their
         respective release_fence(s) have been signaled.

   A typical use case is output streams. When the HAL has any buffers
   dequeued, the stream is marked ACTIVE. When the HAL returns all buffers
   (e.g. if no capture requests are active), the stream is marked IDLE.
   In this use case, the app consumer does not affect the component status.

"
      classrelation 208645 // <generalisation>
	relation 208645 ---|>
	  a protected
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 208645 // <generalisation>
	  b parent class_ref 203397 // typedef93
      end

      classrelation 208773 // <generalisation>
	relation 208773 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 208773 // <generalisation>
	  b parent class_ref 196229 // typedef82
      end

      classrelation 208901 // <generalisation>
	relation 208901 ---|>
	  a private
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 208901 // <generalisation>
	  b parent class_ref 201733 // Camera3StreamInterface
      end
    end

    class 200709 "StatusTracker"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "State tracking for idle and other collective state transitions.
Collects idle notifications from different sources and calls the
parent when all of them become idle.

The parent is responsible for synchronizing the status updates with its
internal state correctly, which means the notifyStatus call to the parent may
block for a while.
"
      classrelation 210309 // <generalisation>
	relation 210309 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 210309 // <generalisation>
	  b parent class_ref 205189 // typedef97
      end

      operation 506629 "StatusTracker"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "parent" explicit_type "wp<Camera3Device>"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)} :
        mComponentsChanged(false),
        mParent(parent),
        mNextComponentId(0),
        mIdleFence(new Fence()),
        mDeviceState(IDLE) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 506757 "~StatusTracker"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 324101 "NO_STATUS_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " An always-invalid component ID
"
      end

      operation 506885 "addComponent"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Add a component to track; returns non-negative unique ID for the new
 component on success, negative error code on failure.
 New components start in the idle state."
      end

      operation 507013 "removeComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Remove existing component from idle tracking. Ignores unknown IDs"
      end

      operation 507141 "markComponentIdle"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param in name "componentFence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Set the state of a tracked component to be idle. Ignores unknown IDs; can
 accept a fence to wait on to complete idle.  The fence is merged with any
 previous fences given, which means they all must signal before the
 component is considered idle."
      end

      operation 507269 "markComponentActive"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Set the state of a tracked component to be active. Ignores unknown IDs."
      end

      operation 507397 "requestExit"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 507525 "threadLoop"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      class 205317 "ComponentState"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 324229 "IDLE"
	  public type class_ref 205317 // ComponentState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${name},${comment}"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 324357 "ACTIVE"
	  public type class_ref 205317 // ComponentState
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${name},${comment}"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 507653 "markComponent"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "id" explicit_type "int"
	  param in name "state" type class_ref 205317 // ComponentState
	  param in name "componentFence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 324485 "mPendingLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Guards mPendingChange, mPendingStates, mComponentsChanged
"
      end

      attribute 324613 "mPendingChangeSignal"
	private explicit_type "Condition"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 205445 "StateChange"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 324741 "id"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 210437 // state (<directional composition>)
	  relation 210437 *-->
	    a role_name "state" public
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${readonly}${attribute}${type} ${name};
"
	      classrelation_ref 210437 // state (<directional composition>)
	    b parent class_ref 205317 // ComponentState
	end

	attribute 324869 "fence"
	  public explicit_type "Fence"
	  stereotype "sp"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      classrelation 210565 // mPendingChangeQueue (<directional composition>)
	relation 210565 *-->
	  stereotype "Vector"
	  a role_name "mPendingChangeQueue" private
	    comment " A queue of yet-to-be-processed state changes to components
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 210565 // mPendingChangeQueue (<directional composition>)
	  b parent class_ref 205445 // StateChange
      end

      attribute 324997 "mComponentsChanged"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 210693 // mParent (<directional composition>)
	relation 210693 *-->
	  stereotype "wp"
	  a role_name "mParent" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 210693 // mParent (<directional composition>)
	  b parent class_ref 197893 // Camera3Device
      end

      attribute 325125 "mLock"
	private explicit_type "Mutex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Guards rest of internals. Must be locked after mPendingLock if both used.
"
      end

      attribute 325253 "mNextComponentId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 210821 // mStates (<directional composition>)
	relation 210821 *-->
	  stereotype "KeyedVector"
	  a role_name "mStates" private
	    comment " Current component states
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<int,${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 210821 // mStates (<directional composition>)
	  b parent class_ref 205317 // ComponentState
      end

      attribute 325381 "mIdleFence"
	private explicit_type "Fence"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Merged fence for all processed state changes
"
      end

      classrelation 210949 // mDeviceState (<directional composition>)
	relation 210949 *-->
	  a role_name "mDeviceState" private
	    comment " Current overall device state
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 210949 // mDeviceState (<directional composition>)
	  b parent class_ref 205317 // ComponentState
      end

      operation 507781 "getDeviceStateLocked"
	preserve_cpp_body_indent private return_type class_ref 205317 // ComponentState
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Private to threadLoop
 Determine current overall device state
 We're IDLE iff
 - All components are currently IDLE
 - The merged fence for all component updates has signalled"
      end

      classrelation 211077 // mStateTransitions (<directional composition>)
	relation 211077 *-->
	  stereotype "Vector"
	  a role_name "mStateTransitions" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 211077 // mStateTransitions (<directional composition>)
	  b parent class_ref 205317 // ComponentState
      end

      attribute 325509 "kWaitDuration"
	class_attribute const_attribute private explicit_type "nsecs_t"
	init_value "=  250000000LL"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " 250 ms"
      end
    end

    class 201733 "Camera3StreamInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for managing a single stream of input and/or output data from
the camera device.
"
      classrelation 209285 // <generalisation>
	relation 209285 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 209285 // <generalisation>
	  b parent class_ref 196229 // typedef82
      end

      classrelation 209413 // <generalisation>
	relation 209413 ---|>
	  a private
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 209413 // <generalisation>
	  b parent class_ref 196357 // typedef83
      end

      class 204037 "anonymous15"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 321669 "ALLOCATE_PIPELINE_MAX"
	  public type class_ref 204037 // anonymous15
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${name},${comment}"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 498437 "getId"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get the stream's ID
"
      end

      operation 498565 "getStreamSetId"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get the output stream set id.
"
      end

      operation 498693 "getWidth"
	abstract const cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get the stream's dimensions and format
"
      end

      operation 498821 "getHeight"
	abstract const cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 498949 "getFormat"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 499077 "getDataSpace"
	abstract const cpp_virtual public explicit_return_type "android_dataspace"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 499205 "asHalStream"
	abstract cpp_virtual public explicit_return_type "camera3_stream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get a HAL3 handle for the stream, without starting stream configuration.
"
      end

      operation 499333 "startConfiguration"
	abstract cpp_virtual public explicit_return_type "camera3_stream"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Start the stream configuration process. Returns a handle to the stream's
information to be passed into the HAL device's configure_streams call.

Until finishConfiguration() is called, no other methods on the stream may
be called. The usage and max_buffers fields of camera3_stream may be
modified between start/finishConfiguration, but may not be changed after
that. The priv field of camera3_stream may be modified at any time after
startConfiguration.

Returns NULL in case of error starting configuration.
"
      end

      operation 499461 "isConfiguring"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Check if the stream is mid-configuration (start has been called, but not
finish).  Used for lazy completion of configuration.
"
      end

      operation 499589 "finishConfiguration"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Completes the stream configuration process. During this call, the stream
may call the device's register_stream_buffers() method. The stream
information structure returned by startConfiguration() may no longer be
modified after this call, but can still be read until the destruction of
the stream.

Returns:
  OK on a successful configuration
  NO_INIT in case of a serious error from the HAL device
  NO_MEMORY in case of an error registering buffers
  INVALID_OPERATION in case connecting to the consumer failed
"
      end

      operation 499717 "cancelConfiguration"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Cancels the stream configuration process. This returns the stream to the
initial state, allowing it to be configured again later.
This is done if the HAL rejects the proposed combined stream configuration
"
      end

      operation 499845 "isUnpreparable"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Determine whether the stream has already become in-use (has received
a valid filled buffer), which determines if a stream can still have
prepareNextBuffer called on it.
"
      end

      operation 499973 "startPrepare"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "maxCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Start stream preparation. May only be called in the CONFIGURED state,
when no valid buffers have yet been returned to this stream. Prepares
up to maxCount buffers, or the maximum number of buffers needed by the
pipeline if maxCount is ALLOCATE_PIPELINE_MAX.

If no prepartion is necessary, returns OK and does not transition to
PREPARING state. Otherwise, returns NOT_ENOUGH_DATA and transitions
to PREPARING.

Returns:
   OK if no more buffers need to be preallocated
   NOT_ENOUGH_DATA if calls to prepareNextBuffer are needed to finish
       buffer pre-allocation, and transitions to the PREPARING state.
   NO_INIT in case of a serious error from the HAL device
   INVALID_OPERATION if called when not in CONFIGURED state, or a
       valid buffer has already been returned to this stream.
"
      end

      operation 500101 "isPreparing"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Check if the stream is mid-preparing.
"
      end

      operation 500229 "prepareNextBuffer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Continue stream buffer preparation by allocating the next
buffer for this stream.  May only be called in the PREPARED state.

Returns OK and transitions to the CONFIGURED state if all buffers
are allocated after the call concludes. Otherwise returns NOT_ENOUGH_DATA.

Returns:
   OK if no more buffers need to be preallocated, and transitions
       to the CONFIGURED state.
   NOT_ENOUGH_DATA if more calls to prepareNextBuffer are needed to finish
       buffer pre-allocation.
   NO_INIT in case of a serious error from the HAL device
   INVALID_OPERATION if called when not in CONFIGURED state, or a
       valid buffer has already been returned to this stream.
"
      end

      operation 500357 "cancelPrepare"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Cancel stream preparation early. In case allocation needs to be
stopped, this method transitions the stream back to the CONFIGURED state.
Buffers that have been allocated with prepareNextBuffer remain that way,
but a later use of prepareNextBuffer will require just as many
calls as if the earlier prepare attempt had not existed.

Returns:
   OK if cancellation succeeded, and transitions to the CONFIGURED state
   INVALID_OPERATION if not in the PREPARING state
   NO_INIT in case of a serious error from the HAL device
"
      end

      operation 500485 "tearDown"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Tear down memory for this stream. This frees all unused gralloc buffers
allocated for this stream, but leaves it ready for operation afterward.

May only be called in the CONFIGURED state, and keeps the stream in
the CONFIGURED state.

Returns:
   OK if teardown succeeded.
   INVALID_OPERATION if not in the CONFIGURED state
   NO_INIT in case of a serious error from the HAL device
"
      end

      operation 500613 "getBuffer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "surface_ids" explicit_type "std::vector<size_t>"
	    defaultvalue "std::vector<size_t>()"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Fill in the camera3_stream_buffer with the next valid buffer for this
stream, to hand over to the HAL.

Multiple surfaces could share the same HAL stream, but a request may
be only for a subset of surfaces. In this case, the
Camera3StreamInterface object needs the surface ID information to acquire
buffers for those surfaces. For the case of single surface for a HAL
stream, surface_ids parameter has no effect.

This method may only be called once finishConfiguration has been called.
For bidirectional streams, this method applies to the output-side
buffers.

"
      end

      operation 500741 "returnBuffer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return a buffer to the stream after use by the HAL.

This method may only be called for buffers provided by getBuffer().
For bidirectional streams, this method applies to the output-side buffers
"
      end

      operation 500869 "getInputBuffer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Fill in the camera3_stream_buffer with the next valid buffer for this
stream, to hand over to the HAL.

This method may only be called once finishConfiguration has been called.
For bidirectional streams, this method applies to the input-side
buffers.

"
      end

      operation 500997 "returnInputBuffer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return a buffer to the stream after use by the HAL.

This method may only be called for buffers provided by getBuffer().
For bidirectional streams, this method applies to the input-side buffers
"
      end

      operation 501125 "getInputBufferProducer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "producer" explicit_type "sp<IGraphicBufferProducer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get the buffer producer of the input buffer queue.

This method only applies to input streams.
"
      end

      operation 501253 "hasOutstandingBuffers"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Whether any of the stream's buffers are currently in use by the HAL,
including buffers that have been returned but not yet had their
release fence signaled.
"
      end

      class 204165 "anonymous16"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 321797 "TIMEOUT_NEVER"
	  public type class_ref 204165 // anonymous16
	  init_value " -1
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${name},${comment}"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 501381 "setStatusTracker"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "statusTracker" explicit_type "sp<StatusTracker>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the state tracker to use for signaling idle transitions.
"
      end

      operation 501509 "disconnect"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Disconnect stream from its non-HAL endpoint. After this,
start/finishConfiguration must be called before the stream can be used
again. This cannot be called if the stream has outstanding dequeued
buffers.
"
      end

      operation 501637 "isAbandoned"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if the buffer queue of the stream is abandoned.
"
      end

      operation 501765 "dump"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Debug dump of the stream's state.
"
      end

      operation 501893 "addBufferListener"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "listener" explicit_type "wp<Camera3StreamBufferListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 502021 "removeBufferListener"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "listener" explicit_type "sp<Camera3StreamBufferListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 502149 "setBufferFreedListener"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 198789 // Camera3StreamBufferFreedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Setting listner will remove previous listener (if exists)
Only allow set listener during stream configuration because stream is guaranteed to be IDLE
at this state, so setBufferFreedListener won't collide with onBufferFreed callbacks.
Client is responsible to keep the listener object alive throughout the lifecycle of this
Camera3Stream.
"
      end
    end

    class 202117 "Camera3DummyStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A dummy output stream class, to be used as a placeholder when no valid
streams are configured by the client.
This is necessary because camera HAL v3.2 or older disallow configuring
0 output streams, while the public camera2 API allows for it.
"
      classrelation 206597 // <generalisation>
	relation 206597 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 206597 // <generalisation>
	  b parent class_ref 202245 // Camera3IOStreamBase
      end

      classrelation 206725 // <generalisation>
	relation 206725 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 206725 // <generalisation>
	  b parent class_ref 202373 // Camera3OutputStreamInterface
      end

      operation 486661 "Camera3DummyStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)} :
        Camera3IOStreamBase(id, CAMERA3_STREAM_OUTPUT, DUMMY_WIDTH, DUMMY_HEIGHT,
                /*maxSize*/0, DUMMY_FORMAT, DUMMY_DATASPACE, DUMMY_ROTATION) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Set up a dummy stream; doesn't actually connect to anything, and uses
a default dummy format and size.
"
      end

      operation 486789 "~Camera3DummyStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 486917 "dump"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Camera3Stream interface
"
      end

      operation 487045 "setTransform"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "transform" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 487173 "detachBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "sp<GraphicBuffer>"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 487301 "isVideoStream"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if this output stream is for video encoding.
"
      end

      operation 487429 "isConsumerConfigurationDeferred"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "surface_id" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if the consumer configuration of this stream is deferred.
"
      end

      operation 487557 "setConsumers"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "consumers" explicit_type "std::vector<sp<Surface>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the consumer surfaces to the output stream.
"
      end

      operation 487685 "returnBufferCheckedLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 4
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	  param in name "output" explicit_type "bool"
	  param inout name "releaseFenceOut" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Note that we release the lock briefly in this function
"
      end

      operation 487813 "disconnectLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 314885 "DUMMY_WIDTH"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  320"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Default dummy parameters; 320x240 is a required size for all devices,
 otherwise act like a SurfaceView would.
"
      end

      attribute 315013 "DUMMY_HEIGHT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  240"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 315141 "DUMMY_FORMAT"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 315269 "DUMMY_DATASPACE"
	class_attribute const_attribute private explicit_type "android_dataspace"
	init_value "=  HAL_DATASPACE_UNKNOWN"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 315397 "DUMMY_ROTATION"
	class_attribute const_attribute private explicit_type "camera3_stream_rotation_t"
	init_value "=  CAMERA3_STREAM_ROTATION_0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 315525 "DUMMY_USAGE"
	class_attribute const_attribute private explicit_type "uint32_t"
	init_value "=  GRALLOC_USAGE_HW_COMPOSER"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 487941 "getBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "surface_ids" explicit_type "std::vector<size_t>"
	    defaultvalue "std::vector<size_t>()"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Internal Camera3Stream interface
"
      end

      operation 488069 "returnBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 2
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 488197 "configureQueueLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 488325 "getEndpointUsage"
	preserve_cpp_body_indent const cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param inout name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 202245 "Camera3IOStreamBase"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A base class for managing a single stream of I/O data from the camera device.
"
      classrelation 207109 // <generalisation>
	relation 207109 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 207109 // <generalisation>
	  b parent class_ref 199685 // Camera3Stream
      end

      operation 489861 "Camera3IOStreamBase"
	preserve_cpp_body_indent protected explicit_return_type ""
	nparams 9
	  param in name "id" explicit_type "int"
	  param in name "type" explicit_type "camera3_stream_type_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "maxSize" explicit_type "size_t"
	  param in name "format" explicit_type "int"
	  param in name "dataSpace" explicit_type "android_dataspace"
	  param in name "rotation" explicit_type "camera3_stream_rotation_t"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)} :
        Camera3Stream(id, type,
                width, height, maxSize, format, dataSpace, rotation, setId),
        mTotalBufferCount(0),
        mHandoutTotalBufferCount(0),
        mHandoutOutputBufferCount(0),
        mFrameCount(0),
        mLastTimestamp(0) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 489989 "~Camera3IOStreamBase"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 490117 "dump"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Camera3Stream interface
"
      end

      attribute 316037 "mTotalBufferCount"
	protected explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 316165 "mHandoutTotalBufferCount"
	protected explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " sum of input and output buffers that are currently acquired by HAL
"
      end

      attribute 316293 "mHandoutOutputBufferCount"
	protected explicit_type "size_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " number of output buffers that are currently acquired by HAL. This will be
 Redundant when camera3 streams are no longer bidirectional streams.
"
      end

      attribute 316421 "mBufferReturnedSignal"
	protected explicit_type "Condition"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 316549 "mFrameCount"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 316677 "mLastTimestamp"
	protected explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Last received output buffer's timestamp
"
      end

      attribute 316805 "mCombinedFence"
	protected explicit_type "Fence"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " The merged release fence for all returned buffers
"
      end

      operation 490245 "returnAnyBufferLocked"
	preserve_cpp_body_indent protected explicit_return_type "status_t"
	nparams 3
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	  param in name "output" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 490373 "returnBufferCheckedLocked"
	abstract cpp_virtual protected explicit_return_type "status_t"
	nparams 4
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	  param in name "output" explicit_type "bool"
	  param inout name "releaseFenceOut" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 490501 "hasOutstandingBuffersLocked"
	preserve_cpp_body_indent const cpp_virtual protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Internal Camera3Stream interface
"
      end

      operation 490629 "getBufferCountLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 490757 "getHandoutOutputBufferCountLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 490885 "getHandoutInputBufferCountLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 491013 "getEndpointUsage"
	abstract const cpp_virtual protected explicit_return_type "status_t"
	nparams 1
	  param inout name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 491141 "getBufferPreconditionCheckLocked"
	preserve_cpp_body_indent const protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 491269 "returnBufferPreconditionCheckLocked"
	preserve_cpp_body_indent const protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 491397 "configureQueueLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " State check only"
      end

      operation 491525 "disconnectLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " State checks only"
      end

      operation 491653 "handoutBufferLocked"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 6
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	  param inout name "handle" explicit_type "buffer_handle_t"
	  param in name "acquireFence" explicit_type "int"
	  param in name "releaseFence" explicit_type "int"
	  param in name "status" explicit_type "camera3_buffer_status_t"
	  param in name "output" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Hand out the buffer to a native location,
   incrementing the internal refcount and dequeued buffer count"
      end
    end

    class 202373 "Camera3OutputStreamInterface"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "An interface for managing a single stream of output data from the camera
device.
"
      classrelation 208133 // <generalisation>
	relation 208133 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 208133 // <generalisation>
	  b parent class_ref 196229 // typedef82
      end

      classrelation 208261 // <generalisation>
	relation 208261 ---|>
	  a private
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 208261 // <generalisation>
	  b parent class_ref 201733 // Camera3StreamInterface
      end

      operation 495877 "setTransform"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "transform" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the transform on the output stream; one of the
HAL_TRANSFORM_* / NATIVE_WINDOW_TRANSFORM_* constants.
"
      end

      operation 496005 "isVideoStream"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if this output stream is for video encoding.
"
      end

      operation 496133 "isConsumerConfigurationDeferred"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "surface_id" explicit_type "size_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if the consumer configuration of this stream is deferred.
"
      end

      operation 496261 "setConsumers"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "consumers" explicit_type "std::vector<sp<Surface>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the consumer surfaces to the output stream.
"
      end

      operation 496389 "detachBuffer"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "sp<GraphicBuffer>"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Detach an unused buffer from the stream.

buffer must be non-null; fenceFd may null, and if it is non-null, but
there is no valid fence associated with the detached buffer, it will be
set to -1.

"
      end
    end

    class 202501 "Camera3InputStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class for managing a single stream of input data to the camera device.

This class serves as a consumer adapter for the HAL, and will consume the
buffers by feeding them into the HAL, as well as releasing the buffers back
the buffers once the HAL is done with them.
"
      classrelation 206853 // <generalisation>
	relation 206853 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 206853 // <generalisation>
	  b parent class_ref 202245 // Camera3IOStreamBase
      end

      classrelation 206981 // <generalisation>
	relation 206981 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 206981 // <generalisation>
	  b parent class_ref 202629 // typedef91
      end

      operation 488453 "Camera3InputStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param in name "id" explicit_type "int"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)} :
        Camera3IOStreamBase(id, CAMERA3_STREAM_INPUT, width, height, /*maxSize*/0,
                            format, HAL_DATASPACE_UNKNOWN, CAMERA3_STREAM_ROTATION_0) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Set up a stream for formats that have fixed size, such as RAW and YUV.
"
      end

      operation 488581 "~Camera3InputStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 488709 "dump"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 315653 "mConsumer"
	private explicit_type "BufferItemConsumer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " TODO: expose an interface to get the IGraphicBufferProducer
"
      end

      attribute 315781 "mProducer"
	private explicit_type "IGraphicBufferProducer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 315909 "mBuffersInFlight"
	private explicit_type "BufferItem"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 488837 "returnBufferCheckedLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 4
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	  param in name "output" explicit_type "bool"
	  param inout name "releaseFenceOut" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Camera3IOStreamBase
"
      end

      operation 488965 "getInputBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Camera3Stream interface
"
      end

      operation 489093 "returnInputBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 489221 "getInputBufferProducerLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param inout name "producer" explicit_type "sp<IGraphicBufferProducer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 489349 "disconnectLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 489477 "configureQueueLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 489605 "getEndpointUsage"
	preserve_cpp_body_indent const cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param inout name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 489733 "onBufferFreed"
	preserve_cpp_body_indent cpp_virtual cpp_override private explicit_return_type "void"
	nparams 1
	  param in name "gb" explicit_type "wp<GraphicBuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "BufferItemConsumer::BufferFreedListener interface
"
      end
    end

    class 202629 "typedef91"
      visibility package stereotype "typedef" explicit_base_type "BufferItemConsumer::BufferFreedListener"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 202757 "Camera3OutputStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "A class for managing a single stream of output data from the camera device.
"
      classrelation 207237 // <generalisation>
	relation 207237 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 207237 // <generalisation>
	  b parent class_ref 202245 // Camera3IOStreamBase
      end

      classrelation 207365 // <generalisation>
	relation 207365 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 207365 // <generalisation>
	  b parent class_ref 202373 // Camera3OutputStreamInterface
      end

      operation 491909 "Camera3OutputStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 9
	  param in name "id" explicit_type "int"
	  param in name "consumer" explicit_type "sp<Surface>"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "dataSpace" explicit_type "android_dataspace"
	  param in name "rotation" explicit_type "camera3_stream_rotation_t"
	  param in name "timestampOffset" explicit_type "nsecs_t"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)} :
        Camera3IOStreamBase(id, CAMERA3_STREAM_OUTPUT, width, height,
                            /*maxSize*/0, format, dataSpace, rotation, setId),
        mConsumer(consumer),
        mTransform(0),
        mTraceFirstBuffer(true),
        mUseBufferManager(false),
        mTimestampOffset(timestampOffset),
        mConsumerUsage(0),
        mDequeueBufferLatency(kDequeueLatencyBinSize) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Set up a stream for formats that have 2 dimensions, such as RAW and YUV.
A valid stream set id needs to be set to support buffer sharing between multiple
streams.
"
      end

      operation 492037 "Camera3OutputStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 10
	  param in name "id" explicit_type "int"
	  param in name "consumer" explicit_type "sp<Surface>"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "maxSize" explicit_type "size_t"
	  param in name "format" explicit_type "int"
	  param in name "dataSpace" explicit_type "android_dataspace"
	  param in name "rotation" explicit_type "camera3_stream_rotation_t"
	  param in name "timestampOffset" explicit_type "nsecs_t"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)} :
        Camera3IOStreamBase(id, CAMERA3_STREAM_OUTPUT, width, height, maxSize,
                            format, dataSpace, rotation, setId),
        mConsumer(consumer),
        mTransform(0),
        mTraceFirstBuffer(true),
        mUseMonoTimestamp(false),
        mUseBufferManager(false),
        mTimestampOffset(timestampOffset),
        mConsumerUsage(0),
        mDequeueBufferLatency(kDequeueLatencyBinSize) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Set up a stream for formats that have a variable buffer size for the same
dimensions, such as compressed JPEG.
A valid stream set id needs to be set to support buffer sharing between multiple
streams.
"
      end

      operation 492165 "Camera3OutputStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 9
	  param in name "id" explicit_type "int"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "consumerUsage" explicit_type "uint32_t"
	  param in name "dataSpace" explicit_type "android_dataspace"
	  param in name "rotation" explicit_type "camera3_stream_rotation_t"
	  param in name "timestampOffset" explicit_type "nsecs_t"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)} :
        Camera3IOStreamBase(id, CAMERA3_STREAM_OUTPUT, width, height,
                            /*maxSize*/0, format, dataSpace, rotation, setId),
        mConsumer(nullptr),
        mTransform(0),
        mTraceFirstBuffer(true),
        mUseBufferManager(false),
        mTimestampOffset(timestampOffset),
        mConsumerUsage(consumerUsage),
        mDequeueBufferLatency(kDequeueLatencyBinSize) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Set up a stream with deferred consumer for formats that have 2 dimensions, such as
RAW and YUV. The consumer must be set before using this stream for output. A valid
stream set id needs to be set to support buffer sharing between multiple streams.
"
      end

      operation 492293 "~Camera3OutputStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 492421 "dump"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Camera3Stream interface
"
      end

      operation 492549 "setTransform"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "transform" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the transform on the output stream; one of the
HAL_TRANSFORM_* / NATIVE_WINDOW_TRANSFORM_* constants.
"
      end

      operation 492677 "isVideoStream"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if this output stream is for video encoding.
"
      end

      operation 492805 "isConsumedByHWComposer"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if this output stream is consumed by hardware composer.
"
      end

      operation 492933 "isConsumedByHWTexture"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if this output stream is consumed by hardware texture.
"
      end

      operation 493061 "isConsumerConfigurationDeferred"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "surface_id" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return if the consumer configuration of this stream is deferred.
"
      end

      operation 493189 "setConsumers"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "consumers" explicit_type "std::vector<sp<Surface>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the consumer surfaces to the output stream.
"
      end

      class 202885 "BufferReleasedListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 207493 // <generalisation>
	  relation 207493 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 207493 // <generalisation>
	    b parent class_ref 203013 // typedef92
	end

	operation 493317 "BufferReleasedListener"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "parent" explicit_type "wp<Camera3OutputStream>"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract} : mParent(parent) {};
"
	  java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 493445 "onBufferReleased"
	  preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Implementation of IProducerListener, used to notify this stream that the consumer
has returned a buffer and it is ready to return to Camera3BufferManager for reuse.
"
	end

	classrelation 207621 // mParent (<directional composition>)
	  relation 207621 *-->
	    stereotype "wp"
	    a role_name "mParent" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 207621 // mParent (<directional composition>)
	    b parent class_ref 202757 // Camera3OutputStream
	end
      end

      class 203013 "typedef92"
	visibility package stereotype "typedef" explicit_base_type "BnProducerListener"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      operation 493573 "detachBuffer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "sp<GraphicBuffer>"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 493701 "notifyBufferReleased"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "anwBuffer" explicit_type "ANativeWindowBuffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Notify that the buffer is being released to the buffer queue instead of
being queued to the consumer.
"
      end

      operation 493829 "setBufferManager"
	preserve_cpp_body_indent public explicit_return_type "status_t"
	nparams 1
	  param in name "bufferManager" explicit_type "sp<Camera3BufferManager>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the graphic buffer manager to get/return the stream buffers.

It is only legal to call this method when stream is in STATE_CONSTRUCTED state.
"
      end

      operation 493957 "Camera3OutputStream"
	preserve_cpp_body_indent protected explicit_return_type ""
	nparams 10
	  param in name "id" explicit_type "int"
	  param in name "type" explicit_type "camera3_stream_type_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "dataSpace" explicit_type "android_dataspace"
	  param in name "rotation" explicit_type "camera3_stream_rotation_t"
	  param in name "consumerUsage" explicit_type "uint32_t"
	    defaultvalue "0"
	  param in name "timestampOffset" explicit_type "nsecs_t"
	    defaultvalue "0"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)} :
        Camera3IOStreamBase(id, type, width, height,
                            /*maxSize*/0,
                            format, dataSpace, rotation, setId),
        mTransform(0),
        mTraceFirstBuffer(true),
        mUseMonoTimestamp(false),
        mUseBufferManager(false),
        mTimestampOffset(timestampOffset),
        mConsumerUsage(consumerUsage),
        mDequeueBufferLatency(kDequeueLatencyBinSize) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 494085 "returnBufferCheckedLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 4
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	  param in name "output" explicit_type "bool"
	  param inout name "releaseFenceOut" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Note that we release the lock briefly in this function
"
      end

      operation 494213 "disconnectLocked"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 494341 "getEndpointUsageForSurface"
	preserve_cpp_body_indent const protected explicit_return_type "status_t"
	nparams 2
	  param inout name "usage" explicit_type "uint32_t"
	  param in name "surface" explicit_type "sp<Surface>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 494469 "configureConsumerQueueLocked"
	preserve_cpp_body_indent protected explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 318085 "mConsumer"
	protected explicit_type "Surface"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Consumer as the output of camera HAL
"
      end

      operation 494597 "getPresetConsumerUsage"
	const cpp_inline protected explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mConsumerUsage; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 318213 "kDequeueBufferTimeout"
	class_attribute const_attribute protected explicit_type "nsecs_t"
	init_value "=  1000000000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " 1 sec"
      end

      operation 494725 "getBufferLockedCommon"
	preserve_cpp_body_indent protected explicit_return_type "status_t"
	nparams 2
	  param inout name "anb" explicit_type "ANativeWindowBuffer"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 318341 "mTransform"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 494853 "setTransformLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param in name "transform" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 318469 "mTraceFirstBuffer"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 318597 "mConsumerName"
	private explicit_type "String8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Name of Surface consumer
"
      end

      attribute 318725 "mUseMonoTimestamp"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Whether consumer assumes MONOTONIC timestamp
"
      end

      classrelation 207749 // mBufferManager (<directional composition>)
	relation 207749 *-->
	  stereotype "sp"
	  a role_name "mBufferManager" private
	    comment "GraphicBuffer manager this stream is registered to. Used to replace the buffer
allocation/deallocation role of BufferQueue.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 207749 // mBufferManager (<directional composition>)
	  b parent class_ref 196101 // Camera3BufferManager
      end

      classrelation 207877 // mBufferReleasedListener (<directional composition>)
	relation 207877 *-->
	  stereotype "sp"
	  a role_name "mBufferReleasedListener" private
	    comment "Buffer released listener, used to notify the buffer manager that a buffer is released
from consumer side.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 207877 // mBufferReleasedListener (<directional composition>)
	  b parent class_ref 202885 // BufferReleasedListener
      end

      attribute 318853 "mUseBufferManager"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Flag indicating if the buffer manager is used to allocate the stream buffers

"
      end

      attribute 318981 "mTimestampOffset"
	private explicit_type "nsecs_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Timestamp offset for video and hardware composer consumed streams

"
      end

      attribute 319109 "mConsumerUsage"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Consumer end point usage flag set by the constructor for the deferred
consumer case.

"
      end

      operation 494981 "getBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "surface_ids" explicit_type "std::vector<size_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Internal Camera3Stream interface
"
      end

      operation 495109 "returnBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 2
	  param in name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "timestamp" explicit_type "nsecs_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 495237 "queueBufferToConsumer"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 3
	  param inout name "consumer" explicit_type "sp<ANativeWindow>"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	  param in name "anwReleaseFence" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 495365 "configureQueueLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 495493 "getEndpointUsage"
	preserve_cpp_body_indent const cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param inout name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 495621 "onBuffersRemovedLocked"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "removedBuffers" explicit_type "std::vector<sp<GraphicBuffer>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Private methods
"
      end

      operation 495749 "detachBufferLocked"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "sp<GraphicBuffer>"
	  param inout name "fenceFd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 319237 "kDequeueLatencyBinSize"
	class_attribute const_attribute private explicit_type "int32_t"
	init_value "=  5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " in ms"
      end

      classrelation 208005 // mDequeueBufferLatency (<directional composition>)
	relation 208005 *-->
	  a role_name "mDequeueBufferLatency" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 208005 // mDequeueBufferLatency (<directional composition>)
	  b parent class_ref 200965 // CameraLatencyHistogram
      end
    end

    class 203141 "Camera3SharedOutputStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 208389 // <generalisation>
	relation 208389 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 208389 // <generalisation>
	  b parent class_ref 202757 // Camera3OutputStream
      end

      operation 496517 "Camera3SharedOutputStream"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 10
	  param in name "id" explicit_type "int"
	  param in name "surfaces" explicit_type "std::vector<sp<Surface>>"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "consumerUsage" explicit_type "uint32_t"
	  param in name "dataSpace" explicit_type "android_dataspace"
	  param in name "rotation" explicit_type "camera3_stream_rotation_t"
	  param in name "timestampOffset" explicit_type "nsecs_t"
	  param in name "setId" explicit_type "int"
	    defaultvalue "CAMERA3_STREAM_SET_ID_INVALID"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)} :
        Camera3OutputStream(id, CAMERA3_STREAM_OUTPUT, width, height,
                            format, dataSpace, rotation, consumerUsage,
                            timestampOffset, setId),
        mSurfaces(surfaces) ${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Set up a stream for formats that have 2 dimensions, with multiple
surfaces. A valid stream set id needs to be set to support buffer
sharing between multiple streams.
"
      end

      operation 496645 "~Camera3SharedOutputStream"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 496773 "notifyBufferReleased"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param inout name "anwBuffer" explicit_type "ANativeWindowBuffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 496901 "isConsumerConfigurationDeferred"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "surface_id" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 497029 "setConsumers"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "status_t"
	nparams 1
	  param in name "surfaces" explicit_type "std::vector<sp<Surface>>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 319365 "mSurfaces"
	private explicit_type "sp<Surface> "
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Surfaces passed in constructor from app
"
      end

      classrelation 208517 // mStreamSplitter (<directional composition>)
	relation 208517 *-->
	  stereotype "sp"
	  a role_name "mStreamSplitter" private
	    comment "The Camera3StreamSplitter object this stream uses for stream
sharing.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 208517 // mStreamSplitter (<directional composition>)
	  b parent class_ref 203269 // Camera3StreamSplitter
      end

      operation 497157 "connectStreamSplitterLocked"
	preserve_cpp_body_indent private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Initialize stream splitter.
"
      end

      operation 497285 "getBufferLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 2
	  param inout name "buffer" explicit_type "camera3_stream_buffer"
	  param in name "surface_ids" explicit_type "std::vector<size_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Internal Camera3Stream interface
"
      end

      operation 497413 "queueBufferToConsumer"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 3
	  param inout name "consumer" explicit_type "sp<ANativeWindow>"
	  param inout name "buffer" explicit_type "ANativeWindowBuffer"
	  param in name "anwReleaseFence" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 497541 "configureQueueLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 497669 "disconnectLocked"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 497797 "getEndpointUsage"
	preserve_cpp_body_indent const cpp_virtual private explicit_return_type "status_t"
	nparams 1
	  param inout name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 203397 "typedef93"
      visibility package stereotype "typedef" explicit_base_type "camera3_stream"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 205189 "typedef97"
      visibility package stereotype "typedef" explicit_base_type "Thread"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 137605 "device3"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 146821 "Camera3BufferManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 196229 // typedef82
	class_ref 196357 // typedef83
	class_ref 196101 // Camera3BufferManager
      end
    end

    artifact 147205 "Camera3DummyStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 202117 // Camera3DummyStream
      end
    end

    artifact 147333 "Camera3InputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 202629 // typedef91
	class_ref 202501 // Camera3InputStream
      end
    end

    artifact 147461 "Camera3IOStreamBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 202245 // Camera3IOStreamBase
      end
    end

    artifact 147589 "Camera3OutputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 196485 // StreamInfo
	class_ref 202757 // Camera3OutputStream
      end
    end

    artifact 147717 "Camera3OutputStreamInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 202373 // Camera3OutputStreamInterface
      end
    end

    artifact 147845 "Camera3SharedOutputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 203141 // Camera3SharedOutputStream
      end
    end

    artifact 147973 "Camera3Stream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 203397 // typedef93
      end
    end

    artifact 148229 "Camera3StreamBufferFreedListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 198789 // Camera3StreamBufferFreedListener
      end
    end

    artifact 148357 "Camera3StreamBufferListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 186885 // Camera3StreamBufferListener
      end
    end

    artifact 148613 "Camera3StreamInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 201733 // Camera3StreamInterface
      end
    end

    artifact 148869 "StatusTracker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 205189 // typedef97
	class_ref 200709 // StatusTracker
      end
    end
  end

  package_ref 141445 // device3

  package_ref 141573 // android
end
