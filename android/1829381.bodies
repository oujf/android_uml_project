class Proxy
!!!13223045.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13223173.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13223301.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13223429.java!!!	onAppStatusChanged(inout device : android.bluetooth.BluetoothDevice, inout config : android.bluetooth.BluetoothHidDeviceAppConfiguration, inout registered : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((config!=null)) {
_data.writeInt(1);
config.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((registered)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onAppStatusChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13223557.java!!!	onConnectionStateChanged(inout device : android.bluetooth.BluetoothDevice, in state : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(state);
mRemote.transact(Stub.TRANSACTION_onConnectionStateChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13223685.java!!!	onGetReport(inout device : android.bluetooth.BluetoothDevice, in type : byte, in id : byte, in bufferSize : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeByte(type);
_data.writeByte(id);
_data.writeInt(bufferSize);
mRemote.transact(Stub.TRANSACTION_onGetReport, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13223813.java!!!	onSetReport(inout device : android.bluetooth.BluetoothDevice, in type : byte, in id : byte, inout data : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeByte(type);
_data.writeByte(id);
_data.writeByteArray(data);
mRemote.transact(Stub.TRANSACTION_onSetReport, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13223941.java!!!	onSetProtocol(inout device : android.bluetooth.BluetoothDevice, in protocol : byte) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeByte(protocol);
mRemote.transact(Stub.TRANSACTION_onSetProtocol, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13224069.java!!!	onIntrData(inout device : android.bluetooth.BluetoothDevice, in reportId : byte, inout data : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeByte(reportId);
_data.writeByteArray(data);
mRemote.transact(Stub.TRANSACTION_onIntrData, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13224197.java!!!	onVirtualCableUnplug(inout device : android.bluetooth.BluetoothDevice) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((device!=null)) {
_data.writeInt(1);
device.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_onVirtualCableUnplug, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
