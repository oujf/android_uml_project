class AudioServiceInternal
!!!11322373.java!!!	setRingerModeDelegate(inout delegate : RingerModeDelegate) : void
            mRingerModeDelegate = delegate;
            if (mRingerModeDelegate != null) {
                updateRingerModeAffectedStreams();
                setRingerModeInternal(getRingerModeInternal(), TAG + ".setRingerModeDelegate");
            }
!!!11322501.java!!!	adjustSuggestedStreamVolumeForUid(in streamType : int, in direction : int, in flags : int, in callingPackage : String, in uid : int) : void
            // direction and stream type swap here because the public
            // adjustSuggested has a different order than the other methods.
            adjustSuggestedStreamVolume(direction, streamType, flags, callingPackage,
                    callingPackage, uid);
!!!11322629.java!!!	adjustStreamVolumeForUid(in streamType : int, in direction : int, in flags : int, in callingPackage : String, in uid : int) : void
            adjustStreamVolume(streamType, direction, flags, callingPackage,
                    callingPackage, uid);
!!!11322757.java!!!	setStreamVolumeForUid(in streamType : int, in direction : int, in flags : int, in callingPackage : String, in uid : int) : void
            setStreamVolume(streamType, direction, flags, callingPackage, callingPackage, uid);
!!!11322885.java!!!	getRingerModeInternal() : int
            return AudioService.this.getRingerModeInternal();
!!!11323013.java!!!	setRingerModeInternal(in ringerMode : int, in caller : String) : void
            AudioService.this.setRingerModeInternal(ringerMode, caller);
!!!11323141.java!!!	updateRingerModeAffectedStreamsInternal() : void
            synchronized (mSettingsLock) {
                if (updateRingerModeAffectedStreams()) {
                    setRingerModeInt(getRingerModeInternal(), false);
                }
            }
!!!11323269.java!!!	setAccessibilityServiceUids(inout uids : IntArray) : void
            synchronized (mAccessibilityServiceUidsLock) {
                if (uids.size() == 0) {
                    mAccessibilityServiceUids = null;
                } else {
                    boolean changed = (mAccessibilityServiceUids == null)
                            || (mAccessibilityServiceUids.length != uids.size());
                    if (!changed) {
                        for (int i = 0; i < mAccessibilityServiceUids.length; i++) {
                            if (uids.get(i) != mAccessibilityServiceUids[i]) {
                                changed = true;
                                break;
                            }
                        }
                    }
                    if (changed) {
                        mAccessibilityServiceUids = uids.toArray();
                    }
                }
            }
