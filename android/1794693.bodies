class WindowId
!!!12817285.java!!!	WindowId(inout outer : WindowState)

            // Use a weak reference for the outer class. This is important to prevent the following
            // leak: Since we send this class to the client process, binder will keep it alive as
            // long as the client keeps it alive. Now, if the window is removed, we need to clear
            // out our reference so even though this class is kept alive we don't leak WindowState,
            // which can keep a whole lot of classes alive.
            mOuter = new WeakReference<>(outer);
!!!12817413.java!!!	registerFocusObserver(inout observer : IWindowFocusObserver) : void
            final WindowState outer = mOuter.get();
            if (outer != null) {
                outer.registerFocusObserver(observer);
            }
!!!12817541.java!!!	unregisterFocusObserver(inout observer : IWindowFocusObserver) : void
            final WindowState outer = mOuter.get();
            if (outer != null) {
                outer.unregisterFocusObserver(observer);
            }
!!!12817669.java!!!	isFocused() : boolean
            final WindowState outer = mOuter.get();
            return outer != null && outer.isFocused();
