class OverlayInfo
!!!6223237.java!!!	OverlayInfo(inout source : OverlayInfo, in state : int)
        this(source.packageName, source.targetPackageName, source.baseCodePath, state,
                source.userId);
!!!6223365.java!!!	OverlayInfo(in packageName : String, in targetPackageName : String, in baseCodePath : String, in state : int, in userId : int)
        this.packageName = packageName;
        this.targetPackageName = targetPackageName;
        this.baseCodePath = baseCodePath;
        this.state = state;
        this.userId = userId;
        ensureValidState();
!!!6223493.java!!!	OverlayInfo(inout source : Parcel)
        packageName = source.readString();
        targetPackageName = source.readString();
        baseCodePath = source.readString();
        state = source.readInt();
        userId = source.readInt();
        ensureValidState();
!!!6223621.java!!!	ensureValidState() : void
        if (packageName == null) {
            throw new IllegalArgumentException("packageName must not be null");
        }
        if (targetPackageName == null) {
            throw new IllegalArgumentException("targetPackageName must not be null");
        }
        if (baseCodePath == null) {
            throw new IllegalArgumentException("baseCodePath must not be null");
        }
        switch (state) {
            case STATE_UNKNOWN:
            case STATE_MISSING_TARGET:
            case STATE_NO_IDMAP:
            case STATE_DISABLED:
            case STATE_ENABLED:
                break;
            default:
                throw new IllegalArgumentException("State " + state + " is not a valid state");
        }
!!!6223749.java!!!	describeContents() : int
        return 0;
!!!6223877.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(packageName);
        dest.writeString(targetPackageName);
        dest.writeString(baseCodePath);
        dest.writeInt(state);
        dest.writeInt(userId);
!!!6224005.java!!!	isEnabled() : boolean
        switch (state) {
            case STATE_ENABLED:
                return true;
            default:
                return false;
        }
!!!6224133.java!!!	stateToString(in state : int) : String
        switch (state) {
            case STATE_UNKNOWN:
                return "STATE_UNKNOWN";
            case STATE_MISSING_TARGET:
                return "STATE_MISSING_TARGET";
            case STATE_NO_IDMAP:
                return "STATE_NO_IDMAP";
            case STATE_DISABLED:
                return "STATE_DISABLED";
            case STATE_ENABLED:
                return "STATE_ENABLED";
            default:
                return "<unknown state>";
        }
!!!6224261.java!!!	hashCode() : int
        final int prime = 31;
        int result = 1;
        result = prime * result + userId;
        result = prime * result + state;
        result = prime * result + ((packageName == null) ? 0 : packageName.hashCode());
        result = prime * result + ((targetPackageName == null) ? 0 : targetPackageName.hashCode());
        result = prime * result + ((baseCodePath == null) ? 0 : baseCodePath.hashCode());
        return result;
!!!6224389.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        OverlayInfo other = (OverlayInfo) obj;
        if (userId != other.userId) {
            return false;
        }
        if (state != other.state) {
            return false;
        }
        if (!packageName.equals(other.packageName)) {
            return false;
        }
        if (!targetPackageName.equals(other.targetPackageName)) {
            return false;
        }
        if (!baseCodePath.equals(other.baseCodePath)) {
            return false;
        }
        return true;
!!!6224517.java!!!	toString() : String
        return "OverlayInfo { overlay=" + packageName + ", target=" + targetPackageName + ", state="
                + state + " (" + stateToString(state) + "), userId=" + userId + " }";
