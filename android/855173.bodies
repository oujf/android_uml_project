class NotificationViewWrapper
!!!3868677.java!!!	wrap(inout ctx : Context, inout v : View, inout row : ExpandableNotificationRow) : NotificationViewWrapper
        if (v.getId() == com.android.internal.R.id.status_bar_latest_event_content) {
            if ("bigPicture".equals(v.getTag())) {
                return new NotificationBigPictureTemplateViewWrapper(ctx, v, row);
            } else if ("bigText".equals(v.getTag())) {
                return new NotificationBigTextTemplateViewWrapper(ctx, v, row);
            } else if ("media".equals(v.getTag()) || "bigMediaNarrow".equals(v.getTag())) {
                return new NotificationMediaTemplateViewWrapper(ctx, v, row);
            } else if ("messaging".equals(v.getTag())) {
                return new NotificationMessagingTemplateViewWrapper(ctx, v, row);
            }
            return new NotificationTemplateViewWrapper(ctx, v, row);
        } else if (v instanceof NotificationHeaderView) {
            return new NotificationHeaderViewWrapper(ctx, v, row);
        } else {
            return new NotificationCustomViewWrapper(ctx, v, row);
        }
!!!3868805.java!!!	NotificationViewWrapper(inout ctx : Context, inout view : View, inout row : ExpandableNotificationRow)
        mView = view;
        mRow = row;
        mDozer = createDozer(ctx);
        onReinflated();
!!!3868933.java!!!	createDozer(inout ctx : Context) : NotificationDozeHelper
        return new NotificationDozeHelper();
!!!3869061.java!!!	getDozer() : NotificationDozeHelper
        return mDozer;
!!!3869189.java!!!	setDark(inout dark : boolean, inout fade : boolean, in delay : long) : void
        mDark = dark;
        mDarkInitialized = true;
!!!3869317.java!!!	onContentUpdated(inout row : ExpandableNotificationRow) : void
        mDarkInitialized = false;
!!!3869445.java!!!	onReinflated() : void
        if (shouldClearBackgroundOnReapply()) {
            mBackgroundColor = 0;
        }
        Drawable background = mView.getBackground();
        if (background instanceof ColorDrawable) {
            mBackgroundColor = ((ColorDrawable) background).getColor();
            mView.setBackground(null);
        }
        mShouldInvertDark = mBackgroundColor == 0 || isColorLight(mBackgroundColor);
!!!3869573.java!!!	shouldClearBackgroundOnReapply() : boolean
        return true;
!!!3869701.java!!!	isColorLight(in backgroundColor : int) : boolean
        return Color.alpha(backgroundColor) == 0
                || ColorUtils.calculateLuminance(backgroundColor) > 0.5;
!!!3869957.java!!!	getNotificationHeader() : NotificationHeaderView
        return null;
!!!3870085.java!!!	getCurrentState(in fadingView : int) : TransformState
        return null;
!!!3870213.java!!!	transformTo(inout notification : TransformableView, inout endRunnable : Runnable) : void
        // By default we are fading out completely
        CrossFadeHelper.fadeOut(mView, endRunnable);
!!!3870341.java!!!	transformTo(inout notification : TransformableView, in transformationAmount : float) : void
        CrossFadeHelper.fadeOut(mView, transformationAmount);
!!!3870469.java!!!	transformFrom(inout notification : TransformableView) : void
        // By default we are fading in completely
        CrossFadeHelper.fadeIn(mView);
!!!3870597.java!!!	transformFrom(inout notification : TransformableView, in transformationAmount : float) : void
        CrossFadeHelper.fadeIn(mView, transformationAmount);
!!!3870725.java!!!	setVisible(inout visible : boolean) : void
        mView.animate().cancel();
        mView.setVisibility(visible ? View.VISIBLE : View.INVISIBLE);
!!!3870853.java!!!	getCustomBackgroundColor() : int
        // Parent notifications should always use the normal background color
        return mRow.isSummaryWithChildren() ? 0 : mBackgroundColor;
!!!3871493.java!!!	isDimmable() : boolean
        return true;
