format 214
"graphics" // source::frameworks::base::packages::SystemUI::internal::graphics
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\Users\\Jeff\\Documents\\aosp\\frameworks\\base\\core\\java/com/android/internal/graphics/"
  java_package "com.android.internal.graphics"
  classview 228869 "graphics"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1513605 "ColorUtils"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Copied from: frameworks/support/core-utils/java/android/support/v4/graphics/ColorUtils.java

A set of color-related utility methods, building upon those available in {@code Color}.
"
      attribute 6273029 "XYZ_WHITE_REFERENCE_X"
	class_attribute const_attribute private explicit_type "double"
	init_value " 95.047"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273157 "XYZ_WHITE_REFERENCE_Y"
	class_attribute const_attribute private explicit_type "double"
	init_value " 100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273285 "XYZ_WHITE_REFERENCE_Z"
	class_attribute const_attribute private explicit_type "double"
	init_value " 108.883"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273413 "XYZ_EPSILON"
	class_attribute const_attribute private explicit_type "double"
	init_value " 0.008856"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273541 "XYZ_KAPPA"
	class_attribute const_attribute private explicit_type "double"
	init_value " 903.3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273669 "MIN_ALPHA_SEARCH_MAX_ITERATIONS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273797 "MIN_ALPHA_SEARCH_PRECISION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 6273925 "TEMP_ARRAY"
	class_attribute const_attribute private explicit_type "double[]"
	init_value " new ThreadLocal<>()"
	stereotype "ThreadLocal"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 9906949 "ColorUtils"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9907077 "compositeColors"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "foreground" explicit_type "int"
	  param in name "background" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @ColorInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Composite two potentially translucent colors over each other and returns the result.
"
      end

      operation 9907205 "compositeAlpha"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "foregroundAlpha" explicit_type "int"
	  param in name "backgroundAlpha" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9907333 "compositeComponent"
	class_operation private explicit_return_type "int"
	nparams 5
	  param in name "fgC" explicit_type "int"
	  param in name "fgA" explicit_type "int"
	  param in name "bgC" explicit_type "int"
	  param in name "bgA" explicit_type "int"
	  param in name "a" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9907461 "calculateLuminance"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FloatRange(from = 0.0, to = 1.0)
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the luminance of a color as a float between {@code 0.0} and {@code 1.0}.
<p>Defined as the Y component in the XYZ representation of {@code color}.</p>
"
      end

      operation 9907589 "calculateContrast"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "foreground" explicit_type "int"
	  param in name "background" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @ColorInt ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the contrast ratio between {@code foreground} and {@code background}.
{@code background} must be opaque.
<p>
Formula defined
<a href=\"http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\">here</a>.
"
      end

      operation 9907717 "calculateMinimumAlpha"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "foreground" explicit_type "int"
	  param in name "background" explicit_type "int"
	  param in name "minContrastRatio" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @ColorInt ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Calculates the minimum alpha value which can be applied to {@code foreground} so that would
have a contrast value of at least {@code minContrastRatio} when compared to
{@code background}.

@param foreground       the foreground color
@param background       the opaque background color
@param minContrastRatio the minimum contrast ratio
@return the alpha value in the range 0-255, or -1 if no value could be calculated
"
      end

      operation 9907845 "RGBToHSL"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param inout name "outHsl" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@IntRange(from = 0x0, to = 0xFF) ${t0} ${p0}, @IntRange(from = 0x0, to = 0xFF) ${t1} ${p1}, @IntRange(from = 0x0, to = 0xFF) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert RGB components to HSL (hue-saturation-lightness).
<ul>
<li>outHsl[0] is Hue [0 .. 360)</li>
<li>outHsl[1] is Saturation [0...1]</li>
<li>outHsl[2] is Lightness [0...1]</li>
</ul>

@param r      red component value [0..255]
@param g      green component value [0..255]
@param b      blue component value [0..255]
@param outHsl 3-element array which holds the resulting HSL components
"
      end

      operation 9907973 "colorToHSL"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "color" explicit_type "int"
	  param inout name "outHsl" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert the ARGB color to its HSL (hue-saturation-lightness) components.
<ul>
<li>outHsl[0] is Hue [0 .. 360)</li>
<li>outHsl[1] is Saturation [0...1]</li>
<li>outHsl[2] is Lightness [0...1]</li>
</ul>

@param color  the ARGB color to convert. The alpha component is ignored
@param outHsl 3-element array which holds the resulting HSL components
"
      end

      operation 9908101 "HSLToColor"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "hsl" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ColorInt
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert HSL (hue-saturation-lightness) components to a RGB color.
<ul>
<li>hsl[0] is Hue [0 .. 360)</li>
<li>hsl[1] is Saturation [0...1]</li>
<li>hsl[2] is Lightness [0...1]</li>
</ul>
If hsv values are out of range, they are pinned.

@param hsl 3-element array which holds the input HSL components
@return the resulting RGB color
"
      end

      operation 9908229 "setAlphaComponent"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "alpha" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @IntRange(from = 0x0, to = 0xFF) ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ColorInt
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the alpha component of {@code color} to be {@code alpha}.
"
      end

      operation 9908357 "colorToLAB"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "color" explicit_type "int"
	  param inout name "outLab" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert the ARGB color to its CIE Lab representative components.

@param color  the ARGB color to convert. The alpha component is ignored
@param outLab 3-element array which holds the resulting LAB components
"
      end

      operation 9908485 "RGBToLAB"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param inout name "outLab" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@IntRange(from = 0x0, to = 0xFF) ${t0} ${p0}, @IntRange(from = 0x0, to = 0xFF) ${t1} ${p1}, @IntRange(from = 0x0, to = 0xFF) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert RGB components to its CIE Lab representative components.

<ul>
<li>outLab[0] is L [0 ...1)</li>
<li>outLab[1] is a [-128...127)</li>
<li>outLab[2] is b [-128...127)</li>
</ul>

@param r      red component value [0..255]
@param g      green component value [0..255]
@param b      blue component value [0..255]
@param outLab 3-element array which holds the resulting LAB components
"
      end

      operation 9908613 "colorToXYZ"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "color" explicit_type "int"
	  param inout name "outXyz" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert the ARGB color to its CIE XYZ representative components.

<p>The resulting XYZ representation will use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outXyz[0] is X [0 ...95.047)</li>
<li>outXyz[1] is Y [0...100)</li>
<li>outXyz[2] is Z [0...108.883)</li>
</ul>

@param color  the ARGB color to convert. The alpha component is ignored
@param outXyz 3-element array which holds the resulting LAB components
"
      end

      operation 9908741 "RGBToXYZ"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "int"
	  param in name "g" explicit_type "int"
	  param in name "b" explicit_type "int"
	  param inout name "outXyz" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@IntRange(from = 0x0, to = 0xFF) ${t0} ${p0}, @IntRange(from = 0x0, to = 0xFF) ${t1} ${p1}, @IntRange(from = 0x0, to = 0xFF) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Convert RGB components to its CIE XYZ representative components.

<p>The resulting XYZ representation will use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outXyz[0] is X [0 ...95.047)</li>
<li>outXyz[1] is Y [0...100)</li>
<li>outXyz[2] is Z [0...108.883)</li>
</ul>

@param r      red component value [0..255]
@param g      green component value [0..255]
@param b      blue component value [0..255]
@param outXyz 3-element array which holds the resulting XYZ components
"
      end

      operation 9908869 "XYZToLAB"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "z" explicit_type "double"
	  param inout name "outLab" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_X) ${t0} ${p0}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Y) ${t1} ${p1}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Z) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Converts a color from CIE XYZ to CIE Lab representation.

<p>This method expects the XYZ representation to use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outLab[0] is L [0 ...1)</li>
<li>outLab[1] is a [-128...127)</li>
<li>outLab[2] is b [-128...127)</li>
</ul>

@param x      X component value [0...95.047)
@param y      Y component value [0...100)
@param z      Z component value [0...108.883)
@param outLab 3-element array which holds the resulting Lab components
"
      end

      operation 9908997 "LABToXYZ"
	class_operation public explicit_return_type "void"
	nparams 4
	  param in name "l" explicit_type "double"
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	  param inout name "outXyz" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = 100) final ${t0} ${p0}, @FloatRange(from = -128, to = 127) final ${t1} ${p1}, @FloatRange(from = -128, to = 127) final ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Converts a color from CIE Lab to CIE XYZ representation.

<p>The resulting XYZ representation will use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

<ul>
<li>outXyz[0] is X [0 ...95.047)</li>
<li>outXyz[1] is Y [0...100)</li>
<li>outXyz[2] is Z [0...108.883)</li>
</ul>

@param l      L component value [0...100)
@param a      A component value [-128...127)
@param b      B component value [-128...127)
@param outXyz 3-element array which holds the resulting XYZ components
"
      end

      operation 9909125 "XYZToColor"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	  param in name "z" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_X) ${t0} ${p0}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Y) ${t1} ${p1}, @FloatRange(from = 0f, to = XYZ_WHITE_REFERENCE_Z) ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ColorInt
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Converts a color from CIE XYZ to its RGB representation.

<p>This method expects the XYZ representation to use the D65 illuminant and the CIE
2° Standard Observer (1931).</p>

@param x X component value [0...95.047)
@param y Y component value [0...100)
@param z Z component value [0...108.883)
@return int containing the RGB representation
"
      end

      operation 9909253 "LABToColor"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "l" explicit_type "double"
	  param in name "a" explicit_type "double"
	  param in name "b" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@FloatRange(from = 0f, to = 100) final ${t0} ${p0}, @FloatRange(from = -128, to = 127) final ${t1} ${p1}, @FloatRange(from = -128, to = 127) final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ColorInt
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Converts a color from CIE Lab to its RGB representation.

@param l L component value [0...100]
@param a A component value [-128...127]
@param b B component value [-128...127]
@return int containing the RGB representation
"
      end

      operation 9909381 "distanceEuclidean"
	class_operation public explicit_return_type "double"
	nparams 2
	  param inout name "labX" explicit_type "double"
	multiplicity "[]"
	  param inout name "labY" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0}[] ${p0}, @NonNull ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the euclidean distance between two LAB colors.
"
      end

      operation 9909509 "constrain"
	class_operation private explicit_return_type "float"
	nparams 3
	  param in name "amount" explicit_type "float"
	  param in name "low" explicit_type "float"
	  param in name "high" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9909637 "constrain"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "amount" explicit_type "int"
	  param in name "low" explicit_type "int"
	  param in name "high" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9909765 "pivotXyzComponent"
	class_operation private explicit_return_type "double"
	nparams 1
	  param in name "component" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9909893 "blendARGB"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "color1" explicit_type "int"
	  param in name "color2" explicit_type "int"
	  param in name "ratio" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@ColorInt ${t0} ${p0}, @ColorInt ${t1} ${p1}, @FloatRange(from = 0.0, to = 1.0) ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@ColorInt
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Blend between two ARGB colors using the given ratio.

<p>A blend ratio of 0.0 will result in {@code color1}, 0.5 will give an even blend,
1.0 will result in {@code color2}.</p>

@param color1 the first ARGB color
@param color2 the second ARGB color
@param ratio  the blend ratio of {@code color1} to {@code color2}
"
      end

      operation 9910021 "blendHSL"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "hsl1" explicit_type "float"
	multiplicity "[]"
	  param inout name "hsl2" explicit_type "float"
	multiplicity "[]"
	  param in name "ratio" explicit_type "float"
	  param inout name "outResult" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0}[] ${p0}, @NonNull ${t1}[] ${p1}, @FloatRange(from = 0.0, to = 1.0) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Blend between {@code hsl1} and {@code hsl2} using the given ratio. This will interpolate
the hue using the shortest angle.

<p>A blend ratio of 0.0 will result in {@code hsl1}, 0.5 will give an even blend,
1.0 will result in {@code hsl2}.</p>

@param hsl1      3-element array which holds the first HSL color
@param hsl2      3-element array which holds the second HSL color
@param ratio     the blend ratio of {@code hsl1} to {@code hsl2}
@param outResult 3-element array which holds the resulting HSL components
"
      end

      operation 9910149 "blendLAB"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "lab1" explicit_type "double"
	multiplicity "[]"
	  param inout name "lab2" explicit_type "double"
	multiplicity "[]"
	  param in name "ratio" explicit_type "double"
	  param inout name "outResult" explicit_type "double"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@NonNull ${t0}[] ${p0}, @NonNull ${t1}[] ${p1}, @FloatRange(from = 0.0, to = 1.0) ${t2} ${p2}, @NonNull ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Blend between two CIE-LAB colors using the given ratio.

<p>A blend ratio of 0.0 will result in {@code lab1}, 0.5 will give an even blend,
1.0 will result in {@code lab2}.</p>

@param lab1      3-element array which holds the first LAB color
@param lab2      3-element array which holds the second LAB color
@param ratio     the blend ratio of {@code lab1} to {@code lab2}
@param outResult 3-element array which holds the resulting LAB components
"
      end

      operation 9910277 "circularInterpolate"
	class_operation package explicit_return_type "float"
	nparams 3
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9910405 "getTempDouble3Array"
	class_operation private explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1513733 "SfVsyncFrameCallbackProvider"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Provider of timing pulse that uses SurfaceFlinger Vsync Choreographer for frame callbacks.

@hide
"
      classrelation 2448901 // <realization>
	relation 2448901 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 2448901 // <realization>
	  b parent class_ref 1004037 // AnimationFrameCallbackProvider
      end

      classrelation 2449029 // mChoreographer (<unidirectional association>)
	relation 2449029 --->
	  a role_name "mChoreographer" init_value " Choreographer.getSfInstance()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 2449029 // mChoreographer (<unidirectional association>)
	  b parent class_ref 1004165 // Choreographer
      end

      operation 9910533 "postFrameCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1004293 // FrameCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9910661 "postCommitCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "runnable" explicit_type "Runnable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9910789 "getFrameTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9910917 "getFrameDelay"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 9911045 "setFrameDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "delay" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end
  end

  deploymentview 206213 "graphics"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 759941 "ColorUtils"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.ColorInt;
import android.annotation.FloatRange;
import android.annotation.IntRange;
import android.annotation.NonNull;
import android.graphics.Color;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1513605 // ColorUtils
      end
      comment "Copyright (C) 2017 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
"
    end

    artifact 760069 "SfVsyncFrameCallbackProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.animation.AnimationHandler.AnimationFrameCallbackProvider;
import android.view.Choreographer;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1513733 // SfVsyncFrameCallbackProvider
      end
      comment "Copyright (C) 2017 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end
  end

  package_ref 242949 // drawable

  package_ref 243077 // palette
end
