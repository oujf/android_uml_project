class AlarmManager
!!!5113733.java!!!	AlarmManager(inout service : IAlarmManager, inout ctx : Context)
        mService = service;

        mPackageName = ctx.getPackageName();
        mTargetSdkVersion = ctx.getApplicationInfo().targetSdkVersion;
        mAlwaysExact = (mTargetSdkVersion < Build.VERSION_CODES.KITKAT);
        mMainThreadHandler = new Handler(ctx.getMainLooper());
!!!5113861.java!!!	legacyExactLength() : long
        return (mAlwaysExact ? WINDOW_EXACT : WINDOW_HEURISTIC);
!!!5113989.java!!!	set(in type : int, in triggerAtMillis : long, inout operation : PendingIntent) : void
        setImpl(type, triggerAtMillis, legacyExactLength(), 0, 0, operation, null, null,
                null, null, null);
!!!5114117.java!!!	set(in type : int, in triggerAtMillis : long, in tag : String, inout listener : AlarmManager::OnAlarmListener, inout targetHandler : Handler) : void
        setImpl(type, triggerAtMillis, legacyExactLength(), 0, 0, null, listener, tag,
                targetHandler, null, null);
!!!5114245.java!!!	setRepeating(in type : int, in triggerAtMillis : long, in intervalMillis : long, inout operation : PendingIntent) : void
        setImpl(type, triggerAtMillis, legacyExactLength(), intervalMillis, 0, operation,
                null, null, null, null, null);
!!!5114373.java!!!	setWindow(in type : int, in windowStartMillis : long, in windowLengthMillis : long, inout operation : PendingIntent) : void
        setImpl(type, windowStartMillis, windowLengthMillis, 0, 0, operation,
                null, null, null, null, null);
!!!5114501.java!!!	setWindow(in type : int, in windowStartMillis : long, in windowLengthMillis : long, in tag : String, inout listener : AlarmManager::OnAlarmListener, inout targetHandler : Handler) : void
        setImpl(type, windowStartMillis, windowLengthMillis, 0, 0, null, listener, tag,
                targetHandler, null, null);
!!!5114629.java!!!	setExact(in type : int, in triggerAtMillis : long, inout operation : PendingIntent) : void
        setImpl(type, triggerAtMillis, WINDOW_EXACT, 0, 0, operation, null, null, null,
                null, null);
!!!5114757.java!!!	setExact(in type : int, in triggerAtMillis : long, in tag : String, inout listener : AlarmManager::OnAlarmListener, inout targetHandler : Handler) : void
        setImpl(type, triggerAtMillis, WINDOW_EXACT, 0, 0, null, listener, tag,
                targetHandler, null, null);
!!!5114885.java!!!	setIdleUntil(in type : int, in triggerAtMillis : long, in tag : String, inout listener : AlarmManager::OnAlarmListener, inout targetHandler : Handler) : void
        setImpl(type, triggerAtMillis, WINDOW_EXACT, 0, FLAG_IDLE_UNTIL, null,
                listener, tag, targetHandler, null, null);
!!!5115013.java!!!	setAlarmClock(inout info : AlarmManager::AlarmClockInfo, inout operation : PendingIntent) : void
        setImpl(RTC_WAKEUP, info.getTriggerTime(), WINDOW_EXACT, 0, 0, operation,
                null, null, null, null, info);
!!!5115141.java!!!	set(in type : int, in triggerAtMillis : long, in windowMillis : long, in intervalMillis : long, inout operation : PendingIntent, inout workSource : WorkSource) : void
        setImpl(type, triggerAtMillis, windowMillis, intervalMillis, 0, operation, null, null,
                null, workSource, null);
!!!5115269.java!!!	set(in type : int, in triggerAtMillis : long, in windowMillis : long, in intervalMillis : long, in tag : String, inout listener : AlarmManager::OnAlarmListener, inout targetHandler : Handler, inout workSource : WorkSource) : void
        setImpl(type, triggerAtMillis, windowMillis, intervalMillis, 0, null, listener, tag,
                targetHandler, workSource, null);
!!!5115397.java!!!	set(in type : int, in triggerAtMillis : long, in windowMillis : long, in intervalMillis : long, inout listener : AlarmManager::OnAlarmListener, inout targetHandler : Handler, inout workSource : WorkSource) : void
        setImpl(type, triggerAtMillis, windowMillis, intervalMillis, 0, null, listener, null,
                targetHandler, workSource, null);
!!!5115525.java!!!	setImpl(in type : int, in triggerAtMillis : long, in windowMillis : long, in intervalMillis : long, in flags : int, inout operation : PendingIntent, in listener : AlarmManager::OnAlarmListener, in listenerTag : String, inout targetHandler : Handler, inout workSource : WorkSource, inout alarmClock : AlarmManager::AlarmClockInfo) : void
        if (triggerAtMillis < 0) {
            /* NOTYET
            if (mAlwaysExact) {
                // Fatal error for KLP+ apps to use negative trigger times
                throw new IllegalArgumentException("Invalid alarm trigger time "
                        + triggerAtMillis);
            }
            */
            triggerAtMillis = 0;
        }

        ListenerWrapper recipientWrapper = null;
        if (listener != null) {
            synchronized (AlarmManager.class) {
                if (sWrappers == null) {
                    sWrappers = new ArrayMap<OnAlarmListener, ListenerWrapper>();
                }

                recipientWrapper = sWrappers.get(listener);
                // no existing wrapper => build a new one
                if (recipientWrapper == null) {
                    recipientWrapper = new ListenerWrapper(listener);
                    sWrappers.put(listener, recipientWrapper);
                }
            }

            final Handler handler = (targetHandler != null) ? targetHandler : mMainThreadHandler;
            recipientWrapper.setHandler(handler);
        }

        try {
            mService.set(mPackageName, type, triggerAtMillis, windowMillis, intervalMillis, flags,
                    operation, recipientWrapper, listenerTag, workSource, alarmClock);
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!5115653.java!!!	setInexactRepeating(in type : int, in triggerAtMillis : long, in intervalMillis : long, inout operation : PendingIntent) : void
        setImpl(type, triggerAtMillis, WINDOW_HEURISTIC, intervalMillis, 0, operation, null,
                null, null, null, null);
!!!5115781.java!!!	setAndAllowWhileIdle(in type : int, in triggerAtMillis : long, inout operation : PendingIntent) : void
        setImpl(type, triggerAtMillis, WINDOW_HEURISTIC, 0, FLAG_ALLOW_WHILE_IDLE,
                operation, null, null, null, null, null);
!!!5115909.java!!!	setExactAndAllowWhileIdle(in type : int, in triggerAtMillis : long, inout operation : PendingIntent) : void
        setImpl(type, triggerAtMillis, WINDOW_EXACT, 0, FLAG_ALLOW_WHILE_IDLE, operation,
                null, null, null, null, null);
!!!5116037.java!!!	cancel(inout operation : PendingIntent) : void
        if (operation == null) {
            final String msg = "cancel() called with a null PendingIntent";
            if (mTargetSdkVersion >= Build.VERSION_CODES.N) {
                throw new NullPointerException(msg);
            } else {
                Log.e(TAG, msg);
                return;
            }
        }

        try {
            mService.remove(operation, null);
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!5116165.java!!!	cancel(inout listener : AlarmManager::OnAlarmListener) : void
        if (listener == null) {
            throw new NullPointerException("cancel() called with a null OnAlarmListener");
        }

        ListenerWrapper wrapper = null;
        synchronized (AlarmManager.class) {
            if (sWrappers != null) {
                wrapper = sWrappers.get(listener);
            }
        }

        if (wrapper == null) {
            Log.w(TAG, "Unrecognized alarm listener " + listener);
            return;
        }

        wrapper.cancel();
!!!5116293.java!!!	setTime(in millis : long) : void
        try {
            mService.setTime(millis);
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!5116421.java!!!	setTimeZone(in timeZone : String) : void
        if (TextUtils.isEmpty(timeZone)) {
            return;
        }

        // Reject this timezone if it isn't an Olson zone we recognize.
        if (mTargetSdkVersion >= Build.VERSION_CODES.M) {
            boolean hasTimeZone = false;
            try {
                hasTimeZone = ZoneInfoDB.getInstance().hasTimeZone(timeZone);
            } catch (IOException ignored) {
            }

            if (!hasTimeZone) {
                throw new IllegalArgumentException("Timezone: " + timeZone + " is not an Olson ID");
            }
        }

        try {
            mService.setTimeZone(timeZone);
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!5116549.java!!!	getNextWakeFromIdleTime() : long
        try {
            return mService.getNextWakeFromIdleTime();
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!5116677.java!!!	getNextAlarmClock() : AlarmManager::AlarmClockInfo
        return getNextAlarmClock(UserHandle.myUserId());
!!!5116805.java!!!	getNextAlarmClock(in userId : int) : AlarmManager::AlarmClockInfo
        try {
            return mService.getNextAlarmClock(userId);
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
