class Stub
!!!13494405.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!13494533.java!!!	asInterface(inout obj : android.os.IBinder) : IEthernetManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.net.IEthernetManager))) {
return ((android.net.IEthernetManager)iin);
}
return new android.net.IEthernetManager.Stub.Proxy(obj);
!!!13494661.java!!!	asBinder() : android.os.IBinder
return this;
!!!13494789.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getConfiguration:
{
data.enforceInterface(DESCRIPTOR);
android.net.IpConfiguration _result = this.getConfiguration();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_setConfiguration:
{
data.enforceInterface(DESCRIPTOR);
android.net.IpConfiguration _arg0;
if ((0!=data.readInt())) {
_arg0 = android.net.IpConfiguration.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.setConfiguration(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_isAvailable:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isAvailable();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_addListener:
{
data.enforceInterface(DESCRIPTOR);
android.net.IEthernetServiceListener _arg0;
_arg0 = android.net.IEthernetServiceListener.Stub.asInterface(data.readStrongBinder());
this.addListener(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_removeListener:
{
data.enforceInterface(DESCRIPTOR);
android.net.IEthernetServiceListener _arg0;
_arg0 = android.net.IEthernetServiceListener.Stub.asInterface(data.readStrongBinder());
this.removeListener(_arg0);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
