class ExpandableView
!!!3644805.java!!!	ExpandableView(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!3644933.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        final int givenSize = MeasureSpec.getSize(heightMeasureSpec);
        int ownMaxHeight = Integer.MAX_VALUE;
        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
        if (heightMode != MeasureSpec.UNSPECIFIED && givenSize != 0) {
            ownMaxHeight = Math.min(givenSize, ownMaxHeight);
        }
        int newHeightSpec = MeasureSpec.makeMeasureSpec(ownMaxHeight, MeasureSpec.AT_MOST);
        int maxChildHeight = 0;
        int childCount = getChildCount();
        for (int i = 0; i < childCount; i++) {
            View child = getChildAt(i);
            if (child.getVisibility() == GONE) {
                continue;
            }
            int childHeightSpec = newHeightSpec;
            ViewGroup.LayoutParams layoutParams = child.getLayoutParams();
            if (layoutParams.height != ViewGroup.LayoutParams.MATCH_PARENT) {
                if (layoutParams.height >= 0) {
                    // An actual height is set
                    childHeightSpec = layoutParams.height > ownMaxHeight
                        ? MeasureSpec.makeMeasureSpec(ownMaxHeight, MeasureSpec.EXACTLY)
                        : MeasureSpec.makeMeasureSpec(layoutParams.height, MeasureSpec.EXACTLY);
                }
                child.measure(
                        getChildMeasureSpec(widthMeasureSpec, 0 /* padding */, layoutParams.width),
                        childHeightSpec);
                int childHeight = child.getMeasuredHeight();
                maxChildHeight = Math.max(maxChildHeight, childHeight);
            } else {
                mMatchParentViews.add(child);
            }
        }
        int ownHeight = heightMode == MeasureSpec.EXACTLY
                ? givenSize : Math.min(ownMaxHeight, maxChildHeight);
        newHeightSpec = MeasureSpec.makeMeasureSpec(ownHeight, MeasureSpec.EXACTLY);
        for (View child : mMatchParentViews) {
            child.measure(getChildMeasureSpec(
                    widthMeasureSpec, 0 /* padding */, child.getLayoutParams().width),
                    newHeightSpec);
        }
        mMatchParentViews.clear();
        int width = MeasureSpec.getSize(widthMeasureSpec);
        setMeasuredDimension(width, ownHeight);
!!!3645061.java!!!	onLayout(inout changed : boolean, in left : int, in top : int, in right : int, in bottom : int) : void
        super.onLayout(changed, left, top, right, bottom);
        updateClipping();
!!!3645189.java!!!	pointInView(in localX : float, in localY : float, in slop : float) : boolean
        float top = mClipTopAmount;
        float bottom = mActualHeight;
        return localX >= -slop && localY >= top - slop && localX < ((mRight - mLeft) + slop) &&
                localY < (bottom + slop);
!!!3645317.java!!!	setActualHeight(in actualHeight : int, inout notifyListeners : boolean) : void
        mActualHeight = actualHeight;
        updateClipping();
        if (notifyListeners) {
            notifyHeightChanged(false  /* needsAnimation */);
        }
!!!3645445.java!!!	setActualHeight(in actualHeight : int) : void
        setActualHeight(actualHeight, true /* notifyListeners */);
!!!3645573.java!!!	getActualHeight() : int
        return mActualHeight;
!!!3645701.java!!!	getMaxContentHeight() : int
        return getHeight();
!!!3645829.java!!!	getMinHeight() : int
        return getHeight();
!!!3645957.java!!!	getCollapsedHeight() : int
        return getHeight();
!!!3646213.java!!!	setDark(inout dark : boolean, inout fade : boolean, in delay : long) : void
        mDark = dark;
!!!3646341.java!!!	isDark() : boolean
        return mDark;
!!!3646725.java!!!	getIntrinsicHeight() : int
        return getHeight();
!!!3646853.java!!!	setClipTopAmount(in clipTopAmount : int) : void
        mClipTopAmount = clipTopAmount;
        updateClipping();
!!!3646981.java!!!	setClipBottomAmount(in clipBottomAmount : int) : void
        mClipBottomAmount = clipBottomAmount;
        updateClipping();
!!!3647109.java!!!	getClipTopAmount() : int
        return mClipTopAmount;
!!!3647237.java!!!	getClipBottomAmount() : int
        return mClipBottomAmount;
!!!3647365.java!!!	setOnHeightChangedListener(inout listener : ExpandableView::OnHeightChangedListener) : void
        mOnHeightChangedListener = listener;
!!!3647493.java!!!	isContentExpandable() : boolean
        return false;
!!!3647621.java!!!	notifyHeightChanged(inout needsAnimation : boolean) : void
        if (mOnHeightChangedListener != null) {
            mOnHeightChangedListener.onHeightChanged(this, needsAnimation);
        }
!!!3647749.java!!!	isTransparent() : boolean
        return false;
!!!3648261.java!!!	getPinnedHeadsUpHeight() : int
        return getIntrinsicHeight();
!!!3648389.java!!!	setTranslation(in translation : float) : void
        setTranslationX(translation);
!!!3648517.java!!!	getTranslation() : float
        return getTranslationX();
!!!3648645.java!!!	onHeightReset() : void
        if (mOnHeightChangedListener != null) {
            mOnHeightChangedListener.onReset(this);
        }
!!!3648773.java!!!	getDrawingRect(inout outRect : Rect) : void
        super.getDrawingRect(outRect);
        outRect.left += getTranslationX();
        outRect.right += getTranslationX();
        outRect.bottom = (int) (outRect.top + getTranslationY() + getActualHeight());
        outRect.top += getTranslationY() + getClipTopAmount();
!!!3648901.java!!!	getBoundsOnScreen(inout outRect : Rect, inout clipToParent : boolean) : void
        super.getBoundsOnScreen(outRect, clipToParent);
        if (getTop() + getTranslationY() < 0) {
            // We got clipped to the parent here - make sure we undo that.
            outRect.top += getTop() + getTranslationY();
        }
        outRect.bottom = outRect.top + getActualHeight();
        outRect.top += getClipTopAmount();
!!!3649029.java!!!	isSummaryWithChildren() : boolean
        return false;
!!!3649157.java!!!	areChildrenExpanded() : boolean
        return false;
!!!3649285.java!!!	updateClipping() : void
        if (mClipToActualHeight) {
            int top = getClipTopAmount();
            mClipRect.set(0, top, getWidth(), Math.max(getActualHeight() + getExtraBottomPadding()
                                - mClipBottomAmount, top));
            setClipBounds(mClipRect);
        } else {
            setClipBounds(null);
        }
!!!3649413.java!!!	setClipToActualHeight(inout clipToActualHeight : boolean) : void
        mClipToActualHeight = clipToActualHeight;
        updateClipping();
!!!3649541.java!!!	willBeGone() : boolean
        return mWillBeGone;
!!!3649669.java!!!	setWillBeGone(inout willBeGone : boolean) : void
        mWillBeGone = willBeGone;
!!!3649797.java!!!	getMinClipTopAmount() : int
        return mMinClipTopAmount;
!!!3649925.java!!!	setMinClipTopAmount(in minClipTopAmount : int) : void
        mMinClipTopAmount = minClipTopAmount;
!!!3650053.java!!!	setLayerType(in layerType : int, inout paint : Paint) : void
        if (hasOverlappingRendering()) {
            super.setLayerType(layerType, paint);
        }
!!!3650181.java!!!	hasOverlappingRendering() : boolean
        // Otherwise it will be clipped
        return super.hasOverlappingRendering() && getActualHeight() <= getHeight();
!!!3650309.java!!!	getShadowAlpha() : float
        return 0.0f;
!!!3650565.java!!!	getIncreasedPaddingAmount() : float
        return 0.0f;
!!!3650693.java!!!	mustStayOnScreen() : boolean
        return false;
!!!3650949.java!!!	getOutlineAlpha() : float
        return 0.0f;
!!!3651077.java!!!	getOutlineTranslation() : int
        return 0;
!!!3651205.java!!!	setChangingPosition(inout changingPosition : boolean) : void
        mChangingPosition = changingPosition;
!!!3651333.java!!!	isChangingPosition() : boolean
        return mChangingPosition;
!!!3651461.java!!!	setTransientContainer(inout transientContainer : ViewGroup) : void
        mTransientContainer = transientContainer;
!!!3651589.java!!!	getTransientContainer() : ViewGroup
        return mTransientContainer;
!!!3651717.java!!!	getExtraBottomPadding() : int
        return 0;
!!!3651845.java!!!	isGroupExpansionChanging() : boolean
        return false;
!!!3651973.java!!!	isGroupExpanded() : boolean
        return false;
!!!3652101.java!!!	isChildInGroup() : boolean
        return false;
!!!3652357.java!!!	createNewViewState(inout stackScrollState : StackScrollState) : ExpandableViewState
        return new ExpandableViewState();
!!!3652485.java!!!	hasNoContentHeight() : boolean
        return false;
!!!3652613.java!!!	setInShelf(inout inShelf : boolean) : void
        mInShelf = inShelf;
!!!3652741.java!!!	isInShelf() : boolean
        return mInShelf;
!!!3652869.java!!!	setTransformingInShelf(inout transformingInShelf : boolean) : void
        mTransformingInShelf = transformingInShelf;
!!!3652997.java!!!	isTransformingIntoShelf() : boolean
        return mTransformingInShelf;
!!!3653125.java!!!	isAboveShelf() : boolean
        return false;
