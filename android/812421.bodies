class ColorInversionTile
!!!3433861.java!!!	ColorInversionTile(inout host : QSHost)
        super(host);

        mSetting = new SecureSetting(mContext, mHandler,
                Secure.ACCESSIBILITY_DISPLAY_INVERSION_ENABLED) {
            @Override
            protected void handleValueChanged(int value, boolean observedChange) {
                handleRefreshState(value);
            }
        };
!!!3433989.java!!!	handleDestroy() : void
        super.handleDestroy();
        mSetting.setListening(false);
!!!3434117.java!!!	newTileState() : BooleanState
        return new BooleanState();
!!!3434245.java!!!	setListening(inout listening : boolean) : void
        mSetting.setListening(listening);
!!!3434373.java!!!	handleUserSwitch(in newUserId : int) : void
        mSetting.setUserId(newUserId);
        handleRefreshState(mSetting.getValue());
!!!3434501.java!!!	getLongClickIntent() : Intent
        return new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
!!!3434629.java!!!	handleClick() : void
        mSetting.setValue(mState.value ? 0 : 1);
!!!3434757.java!!!	getTileLabel() : CharSequence
        return mContext.getString(R.string.quick_settings_inversion_label);
!!!3434885.java!!!	handleUpdateState(inout state : BooleanState, inout arg : Object) : void
        final int value = arg instanceof Integer ? (Integer) arg : mSetting.getValue();
        final boolean enabled = value != 0;
        state.value = enabled;
        state.state = state.value ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE;
        state.label = mContext.getString(R.string.quick_settings_inversion_label);
        state.icon = enabled ? mEnable : mDisable;
        state.expandedAccessibilityClassName = Switch.class.getName();
        state.contentDescription = state.label;
!!!3435013.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_COLORINVERSION;
!!!3435141.java!!!	composeChangeAnnouncement() : String
        if (mState.value) {
            return mContext.getString(
                    R.string.accessibility_quick_settings_color_inversion_changed_on);
        } else {
            return mContext.getString(
                    R.string.accessibility_quick_settings_color_inversion_changed_off);
        }
