class NfcA
!!!7353605.java!!!	get(inout tag : Tag) : NfcA
        if (!tag.hasTech(TagTechnology.NFC_A)) return null;
        try {
            return new NfcA(tag);
        } catch (RemoteException e) {
            return null;
        }
!!!7353733.java!!!	NfcA(inout tag : Tag)
        super(tag, TagTechnology.NFC_A);
        Bundle extras = tag.getTechExtras(TagTechnology.NFC_A);
        mSak = extras.getShort(EXTRA_SAK);
        mAtqa = extras.getByteArray(EXTRA_ATQA);
!!!7353861.java!!!	getAtqa() : byte
        return mAtqa;
!!!7353989.java!!!	getSak() : short
        return mSak;
!!!7354117.java!!!	transceive(inout data : byte [[]]) : byte
        return transceive(data, true);
!!!7354245.java!!!	getMaxTransceiveLength() : int
        return getMaxTransceiveLengthInternal();
!!!7354373.java!!!	setTimeout(in timeout : int) : void
        try {
            int err = mTag.getTagService().setTimeout(TagTechnology.NFC_A, timeout);
            if (err != ErrorCodes.SUCCESS) {
                throw new IllegalArgumentException("The supplied timeout is not valid");
            }
        } catch (RemoteException e) {
            Log.e(TAG, "NFC service dead", e);
        }
!!!7354501.java!!!	getTimeout() : int
        try {
            return mTag.getTagService().getTimeout(TagTechnology.NFC_A);
        } catch (RemoteException e) {
            Log.e(TAG, "NFC service dead", e);
            return 0;
        }
