class Proxy
!!!13958789.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13958917.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13959045.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13959173.java!!!	onShowingStateChanged(inout showing : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((showing)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onShowingStateChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13959301.java!!!	onSimSecureStateChanged(inout simSecure : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((simSecure)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onSimSecureStateChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13959429.java!!!	onInputRestrictedStateChanged(inout inputRestricted : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((inputRestricted)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onInputRestrictedStateChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13959557.java!!!	onTrustedChanged(inout trusted : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((trusted)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onTrustedChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13959685.java!!!	onHasLockscreenWallpaperChanged(inout hasLockscreenWallpaper : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((hasLockscreenWallpaper)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onHasLockscreenWallpaperChanged, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
