class UserTile
!!!3463685.java!!!	UserTile(inout host : QSHost)
        super(host);
        mUserSwitcherController = Dependency.get(UserSwitcherController.class);
        mUserInfoController = Dependency.get(UserInfoController.class);
!!!3463813.java!!!	newTileState() : State
        return new QSTile.State();
!!!3463941.java!!!	getLongClickIntent() : Intent
        return new Intent(Settings.ACTION_USER_SETTINGS);
!!!3464069.java!!!	handleClick() : void
        showDetail(true);
!!!3464197.java!!!	getDetailAdapter() : DetailAdapter
        return mUserSwitcherController.userDetailAdapter;
!!!3464325.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_USER_TILE;
!!!3464453.java!!!	setListening(inout listening : boolean) : void
        if (listening) {
            mUserInfoController.addCallback(this);
        } else {
            mUserInfoController.removeCallback(this);
        }
!!!3464581.java!!!	getTileLabel() : CharSequence
        return getState().label;
!!!3464709.java!!!	handleUpdateState(inout state : State, inout arg : Object) : void
        final Pair<String, Drawable> p = arg != null ? (Pair<String, Drawable>) arg : mLastUpdate;
        if (p != null) {
            state.label = p.first;
            // TODO: Better content description.
            state.contentDescription = p.first;
            state.icon = new Icon() {
                @Override
                public Drawable getDrawable(Context context) {
                    return p.second;
                }
            };
        } else {
            // TODO: Default state.
        }
!!!3464837.java!!!	onUserInfoChanged(in name : String, inout picture : Drawable, in userAccount : String) : void
        mLastUpdate = new Pair<>(name, picture);
        refreshState(mLastUpdate);
