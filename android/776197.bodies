class PluginFragmentManager
!!!3220229.java!!!	removePlugin(in tag : String, in currentClass : String, in defaultClass : String) : void
            Fragment fragment = getFragmentManager().findFragmentByTag(tag);
            mPluginLookup.remove(currentClass);
            getFragmentManager().beginTransaction()
                    .replace(((View) fragment.getView().getParent()).getId(),
                            instantiate(mContext, defaultClass, null), tag)
                    .commit();
            reloadFragments();
!!!3220357.java!!!	setCurrentPlugin(in tag : String, in currentClass : String, inout context : Context) : void
            Fragment fragment = getFragmentManager().findFragmentByTag(tag);
            mPluginLookup.put(currentClass, context);
            getFragmentManager().beginTransaction()
                    .replace(((View) fragment.getView().getParent()).getId(),
                            instantiate(context, currentClass, null), tag)
                    .commit();
            reloadFragments();
!!!3220485.java!!!	reloadFragments() : void
            // Save the old state.
            Parcelable p = destroyFragmentHost();
            // Generate a new fragment host and restore its state.
            createFragmentHost(p);
!!!3220613.java!!!	instantiate(inout context : Context, in className : String, inout arguments : Bundle) : Fragment
            Context pluginContext = mPluginLookup.get(className);
            if (pluginContext != null) {
                Fragment f = Fragment.instantiate(pluginContext, className, arguments);
                if (f instanceof Plugin) {
                    ((Plugin) f).onCreate(mContext, pluginContext);
                }
                return f;
            }
            return Fragment.instantiate(context, className, arguments);
