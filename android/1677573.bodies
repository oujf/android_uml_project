class LocalService
!!!11489157.java!!!	initPowerManagement(in callbacks : DisplayManagerInternal::DisplayPowerCallbacks, inout handler : Handler, inout sensorManager : SensorManager) : void
            synchronized (mSyncRoot) {
                DisplayBlanker blanker = new DisplayBlanker() {
                    @Override
                    public void requestDisplayState(int state, int brightness) {
                        // The order of operations is important for legacy reasons.
                        if (state == Display.STATE_OFF) {
                            requestGlobalDisplayStateInternal(state, brightness);
                        }

                        callbacks.onDisplayStateChange(state);

                        if (state != Display.STATE_OFF) {
                            requestGlobalDisplayStateInternal(state, brightness);
                        }
                    }
                };
                mDisplayPowerController = new DisplayPowerController(
                        mContext, callbacks, handler, sensorManager, blanker);
            }
!!!11489285.java!!!	requestPowerState(inout request : DisplayManagerInternal::DisplayPowerRequest, inout waitForNegativeProximity : boolean) : boolean
            return mDisplayPowerController.requestPowerState(request,
                    waitForNegativeProximity);
!!!11489413.java!!!	isProximitySensorAvailable() : boolean
            return mDisplayPowerController.isProximitySensorAvailable();
!!!11489541.java!!!	getDisplayInfo(in displayId : int) : DisplayInfo
            return getDisplayInfoInternal(displayId, Process.myUid());
!!!11489669.java!!!	registerDisplayTransactionListener(inout listener : DisplayManagerInternal::DisplayTransactionListener) : void
            if (listener == null) {
                throw new IllegalArgumentException("listener must not be null");
            }

            registerDisplayTransactionListenerInternal(listener);
!!!11489797.java!!!	unregisterDisplayTransactionListener(inout listener : DisplayManagerInternal::DisplayTransactionListener) : void
            if (listener == null) {
                throw new IllegalArgumentException("listener must not be null");
            }

            unregisterDisplayTransactionListenerInternal(listener);
!!!11489925.java!!!	setDisplayInfoOverrideFromWindowManager(in displayId : int, inout info : DisplayInfo) : void
            setDisplayInfoOverrideFromWindowManagerInternal(displayId, info);
!!!11490053.java!!!	getNonOverrideDisplayInfo(in displayId : int, inout outInfo : DisplayInfo) : void
            getNonOverrideDisplayInfoInternal(displayId, outInfo);
!!!11490181.java!!!	performTraversalInTransactionFromWindowManager() : void
            performTraversalInTransactionFromWindowManagerInternal();
!!!11490309.java!!!	setDisplayProperties(in displayId : int, inout hasContent : boolean, in requestedRefreshRate : float, in requestedMode : int, inout inTraversal : boolean) : void
            setDisplayPropertiesInternal(displayId, hasContent, requestedRefreshRate,
                    requestedMode, inTraversal);
!!!11490437.java!!!	setDisplayOffsets(in displayId : int, in x : int, in y : int) : void
            setDisplayOffsetsInternal(displayId, x, y);
!!!11490565.java!!!	setDisplayAccessUIDs(inout newDisplayAccessUIDs : SparseArray) : void
            setDisplayAccessUIDsInternal(newDisplayAccessUIDs);
!!!11490693.java!!!	isUidPresentOnDisplay(in uid : int, in displayId : int) : boolean
            return isUidPresentOnDisplayInternal(uid, displayId);
