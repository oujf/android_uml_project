class Stub
!!!13741445.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!13741573.java!!!	asInterface(inout obj : android.os.IBinder) : IPersistentDataBlockService
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.service.persistentdata.IPersistentDataBlockService))) {
return ((android.service.persistentdata.IPersistentDataBlockService)iin);
}
return new android.service.persistentdata.IPersistentDataBlockService.Stub.Proxy(obj);
!!!13741701.java!!!	asBinder() : android.os.IBinder
return this;
!!!13741829.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_write:
{
data.enforceInterface(DESCRIPTOR);
byte[] _arg0;
_arg0 = data.createByteArray();
int _result = this.write(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_read:
{
data.enforceInterface(DESCRIPTOR);
byte[] _result = this.read();
reply.writeNoException();
reply.writeByteArray(_result);
return true;
}
case TRANSACTION_wipe:
{
data.enforceInterface(DESCRIPTOR);
this.wipe();
reply.writeNoException();
return true;
}
case TRANSACTION_getDataBlockSize:
{
data.enforceInterface(DESCRIPTOR);
int _result = this.getDataBlockSize();
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getMaximumDataBlockSize:
{
data.enforceInterface(DESCRIPTOR);
long _result = this.getMaximumDataBlockSize();
reply.writeNoException();
reply.writeLong(_result);
return true;
}
case TRANSACTION_setOemUnlockEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setOemUnlockEnabled(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getOemUnlockEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.getOemUnlockEnabled();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getFlashLockState:
{
data.enforceInterface(DESCRIPTOR);
int _result = this.getFlashLockState();
reply.writeNoException();
reply.writeInt(_result);
return true;
}
}
return super.onTransact(code, data, reply, flags);
