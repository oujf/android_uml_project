class DisplayListCanvas
!!!8696709.java!!!	obtain(inout node : RenderNode, in width : int, in height : int) : DisplayListCanvas
        if (node == null) throw new IllegalArgumentException("node cannot be null");
        DisplayListCanvas canvas = sPool.acquire();
        if (canvas == null) {
            canvas = new DisplayListCanvas(node, width, height);
        } else {
            nResetDisplayListCanvas(canvas.mNativeCanvasWrapper, node.mNativeRenderNode,
                    width, height);
        }
        canvas.mNode = node;
        canvas.mWidth = width;
        canvas.mHeight = height;
        return canvas;
!!!8696837.java!!!	recycle() : void
        mNode = null;
        sPool.release(this);
!!!8696965.java!!!	finishRecording() : long
        return nFinishRecording(mNativeCanvasWrapper);
!!!8697093.java!!!	isRecordingFor(inout o : Object) : boolean
        return o == mNode;
!!!8697221.java!!!	DisplayListCanvas(inout node : RenderNode, in width : int, in height : int)
        super(nCreateDisplayListCanvas(node.mNativeRenderNode, width, height));
        mDensity = 0; // disable bitmap density scaling
!!!8697349.java!!!	setDensity(in density : int) : void
        // drop silently, since DisplayListCanvas doesn't perform density scaling
!!!8697477.java!!!	isHardwareAccelerated() : boolean
        return true;
!!!8697605.java!!!	setBitmap(inout bitmap : Bitmap) : void
        throw new UnsupportedOperationException();
!!!8697733.java!!!	isOpaque() : boolean
        return false;
!!!8697861.java!!!	getWidth() : int
        return mWidth;
!!!8697989.java!!!	getHeight() : int
        return mHeight;
!!!8698117.java!!!	getMaximumBitmapWidth() : int
        return nGetMaximumTextureWidth();
!!!8698245.java!!!	getMaximumBitmapHeight() : int
        return nGetMaximumTextureHeight();
!!!8698373.java!!!	insertReorderBarrier() : void
        nInsertReorderBarrier(mNativeCanvasWrapper, true);
!!!8698501.java!!!	insertInorderBarrier() : void
        nInsertReorderBarrier(mNativeCanvasWrapper, false);
!!!8698629.java!!!	callDrawGLFunction2(in drawGLFunction : long) : void
        nCallDrawGLFunction(mNativeCanvasWrapper, drawGLFunction, null);
!!!8698757.java!!!	drawGLFunctor2(in drawGLFunctor : long, inout releasedCallback : Runnable) : void
        nCallDrawGLFunction(mNativeCanvasWrapper, drawGLFunctor, releasedCallback);
!!!8698885.java!!!	drawRenderNode(inout renderNode : RenderNode) : void
        nDrawRenderNode(mNativeCanvasWrapper, renderNode.getNativeDisplayList());
!!!8699013.java!!!	drawHardwareLayer(inout layer : HardwareLayer) : void
        nDrawLayer(mNativeCanvasWrapper, layer.getLayerHandle());
!!!8699141.java!!!	drawCircle(inout cx : CanvasProperty<Float>, inout cy : CanvasProperty<Float>, inout radius : CanvasProperty<Float>, inout paint : CanvasProperty<Paint>) : void
        nDrawCircle(mNativeCanvasWrapper, cx.getNativeContainer(), cy.getNativeContainer(),
                radius.getNativeContainer(), paint.getNativeContainer());
!!!8699269.java!!!	drawRoundRect(inout left : CanvasProperty<Float>, inout top : CanvasProperty<Float>, inout right : CanvasProperty<Float>, inout bottom : CanvasProperty<Float>, inout rx : CanvasProperty<Float>, inout ry : CanvasProperty<Float>, inout paint : CanvasProperty<Paint>) : void
        nDrawRoundRect(mNativeCanvasWrapper, left.getNativeContainer(), top.getNativeContainer(),
                right.getNativeContainer(), bottom.getNativeContainer(),
                rx.getNativeContainer(), ry.getNativeContainer(),
                paint.getNativeContainer());
!!!8699397.java!!!	throwIfCannotDraw(inout bitmap : Bitmap) : void
        super.throwIfCannotDraw(bitmap);
        int bitmapSize = bitmap.getByteCount();
        if (bitmapSize > MAX_BITMAP_SIZE) {
            throw new RuntimeException(
                    "Canvas: trying to draw too large(" + bitmapSize + "bytes) bitmap.");
        }
