class WatchHeaderListView
!!!10506117.java!!!	WatchHeaderListView(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!10506245.java!!!	WatchHeaderListView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        super(context, attrs, defStyleAttr);
!!!10506373.java!!!	WatchHeaderListView(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int)
        super(context, attrs, defStyleAttr, defStyleRes);
!!!10506501.java!!!	wrapHeaderListAdapterInternal(inout headerViewInfos : ArrayList<ListView.FixedViewInfo>, inout footerViewInfos : ArrayList<ListView.FixedViewInfo>, inout adapter : ListAdapter) : HeaderViewListAdapter
        return new WatchHeaderListAdapter(headerViewInfos, footerViewInfos, adapter);
!!!10506629.java!!!	addView(inout child : View, inout params : ViewGroup::LayoutParams) : void
        if (mTopPanel == null) {
            setTopPanel(child);
        } else {
            throw new IllegalStateException("WatchHeaderListView can host only one header");
        }
!!!10506757.java!!!	setTopPanel(inout v : View) : void
        mTopPanel = v;
        wrapAdapterIfNecessary();
!!!10506885.java!!!	setAdapter(inout adapter : ListAdapter) : void
        super.setAdapter(adapter);
        wrapAdapterIfNecessary();
!!!10507013.java!!!	findViewTraversal(in id : int) : View
        View v = super.findViewTraversal(id);
        if (v == null && mTopPanel != null && !mTopPanel.isRootNamespace()) {
            return mTopPanel.findViewById(id);
        }
        return v;
!!!10507141.java!!!	findViewWithTagTraversal(inout tag : Object) : View
        View v = super.findViewWithTagTraversal(tag);
        if (v == null && mTopPanel != null && !mTopPanel.isRootNamespace()) {
            return mTopPanel.findViewWithTag(tag);
        }
        return v;
!!!10507269.java!!!	findViewByPredicateTraversal(inout predicate : Predicate<View>, inout childToSkip : View) : T
        View v = super.findViewByPredicateTraversal(predicate, childToSkip);
        if (v == null && mTopPanel != null && mTopPanel != childToSkip
                && !mTopPanel.isRootNamespace()) {
            return (T) mTopPanel.findViewByPredicate(predicate);
        }
        return (T) v;
!!!10507397.java!!!	getHeaderViewsCount() : int
        return mTopPanel == null ? super.getHeaderViewsCount()
                : super.getHeaderViewsCount() + (mTopPanel.getVisibility() == GONE ? 0 : 1);
!!!10507525.java!!!	wrapAdapterIfNecessary() : void
        ListAdapter adapter = getAdapter();
        if (adapter != null && mTopPanel != null) {
            if (!(adapter instanceof WatchHeaderListAdapter)) {
                wrapHeaderListAdapterInternal();
            }

            ((WatchHeaderListAdapter) getAdapter()).setTopPanel(mTopPanel);
            dispatchDataSetObserverOnChangedInternal();
        }
