class ViewStub
!!!8875525.java!!!	ViewStub(inout context : Context)
        this(context, 0);
!!!8875653.java!!!	ViewStub(inout context : Context, in layoutResource : int)
        this(context, null);

        mLayoutResource = layoutResource;
!!!8875781.java!!!	ViewStub(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!8875909.java!!!	ViewStub(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        this(context, attrs, defStyleAttr, 0);
!!!8876037.java!!!	ViewStub(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int)
        super(context);

        final TypedArray a = context.obtainStyledAttributes(attrs,
                R.styleable.ViewStub, defStyleAttr, defStyleRes);
        mInflatedId = a.getResourceId(R.styleable.ViewStub_inflatedId, NO_ID);
        mLayoutResource = a.getResourceId(R.styleable.ViewStub_layout, 0);
        mID = a.getResourceId(R.styleable.ViewStub_id, NO_ID);
        a.recycle();

        setVisibility(GONE);
        setWillNotDraw(true);
!!!8876165.java!!!	getInflatedId() : int
        return mInflatedId;
!!!8876293.java!!!	setInflatedId(in inflatedId : int) : void
        mInflatedId = inflatedId;
!!!8876421.java!!!	setInflatedIdAsync(in inflatedId : int) : Runnable
        mInflatedId = inflatedId;
        return null;
!!!8876549.java!!!	getLayoutResource() : int
        return mLayoutResource;
!!!8876677.java!!!	setLayoutResource(in layoutResource : int) : void
        mLayoutResource = layoutResource;
!!!8876805.java!!!	setLayoutResourceAsync(in layoutResource : int) : Runnable
        mLayoutResource = layoutResource;
        return null;
!!!8876933.java!!!	setLayoutInflater(inout inflater : LayoutInflater) : void
        mInflater = inflater;
!!!8877061.java!!!	getLayoutInflater() : LayoutInflater
        return mInflater;
!!!8877189.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        setMeasuredDimension(0, 0);
!!!8877573.java!!!	setVisibility(in visibility : int) : void
        if (mInflatedViewRef != null) {
            View view = mInflatedViewRef.get();
            if (view != null) {
                view.setVisibility(visibility);
            } else {
                throw new IllegalStateException("setVisibility called on un-referenced view");
            }
        } else {
            super.setVisibility(visibility);
            if (visibility == VISIBLE || visibility == INVISIBLE) {
                inflate();
            }
        }
!!!8877701.java!!!	setVisibilityAsync(in visibility : int) : Runnable
        if (visibility == VISIBLE || visibility == INVISIBLE) {
            ViewGroup parent = (ViewGroup) getParent();
            return new ViewReplaceRunnable(inflateViewNoAdd(parent));
        } else {
            return null;
        }
!!!8877829.java!!!	inflateViewNoAdd(inout parent : ViewGroup) : View
        final LayoutInflater factory;
        if (mInflater != null) {
            factory = mInflater;
        } else {
            factory = LayoutInflater.from(mContext);
        }
        final View view = factory.inflate(mLayoutResource, parent, false);

        if (mInflatedId != NO_ID) {
            view.setId(mInflatedId);
        }
        return view;
!!!8877957.java!!!	replaceSelfWithView(inout view : View, inout parent : ViewGroup) : void
        final int index = parent.indexOfChild(this);
        parent.removeViewInLayout(this);

        final ViewGroup.LayoutParams layoutParams = getLayoutParams();
        if (layoutParams != null) {
            parent.addView(view, index, layoutParams);
        } else {
            parent.addView(view, index);
        }
!!!8878085.java!!!	inflate() : View
        final ViewParent viewParent = getParent();

        if (viewParent != null && viewParent instanceof ViewGroup) {
            if (mLayoutResource != 0) {
                final ViewGroup parent = (ViewGroup) viewParent;
                final View view = inflateViewNoAdd(parent);
                replaceSelfWithView(view, parent);

                mInflatedViewRef = new WeakReference<>(view);
                if (mInflateListener != null) {
                    mInflateListener.onInflate(this, view);
                }

                return view;
            } else {
                throw new IllegalArgumentException("ViewStub must have a valid layoutResource");
            }
        } else {
            throw new IllegalStateException("ViewStub must have a non-null ViewGroup viewParent");
        }
!!!8878213.java!!!	setOnInflateListener(inout inflateListener : ViewStub::OnInflateListener) : void
        mInflateListener = inflateListener;
