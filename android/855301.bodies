class HybridGroupManager
!!!3861893.java!!!	HybridGroupManager(inout ctx : Context, inout parent : ViewGroup)
        mContext = ctx;
        mParent = parent;
        mDozer = new NotificationDozeHelper();

        Resources res = mContext.getResources();
        mOverflowNumberSize = res.getDimensionPixelSize(
                R.dimen.group_overflow_number_size);
        mOverflowNumberSizeDark = res.getDimensionPixelSize(
                R.dimen.group_overflow_number_size_dark);
        mOverflowNumberPadding = res.getDimensionPixelSize(
                R.dimen.group_overflow_number_padding);
        mOverflowNumberPaddingDark = mOverflowNumberPadding + res.getDimensionPixelSize(
                R.dimen.group_overflow_number_extra_padding_dark);
!!!3862021.java!!!	inflateHybridViewWithStyle(in style : int) : HybridNotificationView
        LayoutInflater inflater = new ContextThemeWrapper(mContext, style)
                .getSystemService(LayoutInflater.class);
        HybridNotificationView hybrid = (HybridNotificationView) inflater.inflate(
                R.layout.hybrid_notification, mParent, false);
        mParent.addView(hybrid);
        return hybrid;
!!!3862149.java!!!	inflateOverflowNumber() : TextView
        LayoutInflater inflater = mContext.getSystemService(LayoutInflater.class);
        TextView numberView = (TextView) inflater.inflate(
                R.layout.hybrid_overflow_number, mParent, false);
        mParent.addView(numberView);
        updateOverFlowNumberColor(numberView);
        return numberView;
!!!3862277.java!!!	updateOverFlowNumberColor(inout numberView : TextView) : void
        numberView.setTextColor(NotificationUtils.interpolateColors(
                mOverflowNumberColor, mOverflowNumberColorDark, mDarkAmount));
!!!3862405.java!!!	setOverflowNumberColor(inout numberView : TextView, in colorRegular : int, in colorDark : int) : void
        mOverflowNumberColor = colorRegular;
        mOverflowNumberColorDark = colorDark;
        if (numberView != null) {
            updateOverFlowNumberColor(numberView);
        }
!!!3862533.java!!!	bindFromNotification(inout reusableView : HybridNotificationView, inout notification : Notification) : HybridNotificationView
        return bindFromNotificationWithStyle(reusableView, notification,
                R.style.HybridNotification);
!!!3862661.java!!!	bindAmbientFromNotification(inout reusableView : HybridNotificationView, inout notification : Notification) : HybridNotificationView
        return bindFromNotificationWithStyle(reusableView, notification,
                R.style.HybridNotification_Ambient);
!!!3862789.java!!!	bindFromNotificationWithStyle(inout reusableView : HybridNotificationView, inout notification : Notification, in style : int) : HybridNotificationView
        if (reusableView == null) {
            reusableView = inflateHybridViewWithStyle(style);
        }
        CharSequence titleText = resolveTitle(notification);
        CharSequence contentText = resolveText(notification);
        reusableView.bind(titleText, contentText);
        return reusableView;
!!!3862917.java!!!	resolveText(inout notification : Notification) : CharSequence
        CharSequence contentText = notification.extras.getCharSequence(Notification.EXTRA_TEXT);
        if (contentText == null) {
            contentText = notification.extras.getCharSequence(Notification.EXTRA_BIG_TEXT);
        }
        return contentText;
!!!3863045.java!!!	resolveTitle(inout notification : Notification) : CharSequence
        CharSequence titleText = notification.extras.getCharSequence(Notification.EXTRA_TITLE);
        if (titleText == null) {
            titleText = notification.extras.getCharSequence(Notification.EXTRA_TITLE_BIG);
        }
        return titleText;
!!!3863173.java!!!	bindOverflowNumber(inout reusableView : TextView, in number : int) : TextView
        if (reusableView == null) {
            reusableView = inflateOverflowNumber();
        }
        String text = mContext.getResources().getString(
                R.string.notification_group_overflow_indicator, number);
        if (!text.equals(reusableView.getText())) {
            reusableView.setText(text);
        }
        String contentDescription = String.format(mContext.getResources().getQuantityString(
                R.plurals.notification_group_overflow_description, number), number);

        reusableView.setContentDescription(contentDescription);
        return reusableView;
!!!3863301.java!!!	setOverflowNumberDark(inout view : TextView, inout dark : boolean, inout fade : boolean, in delay : long) : void
        mDozer.setIntensityDark((f)->{
            mDarkAmount = f;
            updateOverFlowNumberColor(view);
        }, dark, fade, delay);
        view.setTextSize(TypedValue.COMPLEX_UNIT_PX,
                dark ? mOverflowNumberSizeDark : mOverflowNumberSize);
        int paddingEnd = dark ? mOverflowNumberPaddingDark : mOverflowNumberPadding;
        view.setPaddingRelative(view.getPaddingStart(), view.getPaddingTop(), paddingEnd,
                view.getPaddingBottom());
