class DnsEvent
!!!5801861.java!!!	DnsEvent(in hostname : String, inout ipAddresses : String [[]], in ipAddressesCount : int, in packageName : String, in timestamp : long)
        super(packageName, timestamp);
        this.hostname = hostname;
        this.ipAddresses = ipAddresses;
        this.ipAddressesCount = ipAddressesCount;
!!!5801989.java!!!	DnsEvent(inout in : Parcel)
        this.hostname = in.readString();
        this.ipAddresses = in.createStringArray();
        this.ipAddressesCount = in.readInt();
        this.packageName = in.readString();
        this.timestamp = in.readLong();
!!!5802117.java!!!	getHostname() : String
        return hostname;
!!!5802245.java!!!	getInetAddresses() : List<InetAddress>
        if (ipAddresses == null || ipAddresses.length == 0) {
            return Collections.emptyList();
        }
        final List<InetAddress> inetAddresses = new ArrayList<>(ipAddresses.length);
        for (final String ipAddress : ipAddresses) {
            try {
                // ipAddress is already an address, not a host name, no DNS resolution will happen.
                inetAddresses.add(InetAddress.getByName(ipAddress));
            } catch (UnknownHostException e) {
                // Should never happen as we aren't passing a host name.
            }
        }
        return inetAddresses;
!!!5802373.java!!!	getTotalResolvedAddressCount() : int
        return ipAddressesCount;
!!!5802501.java!!!	toString() : String
        return String.format("DnsEvent(%s, %s, %d, %d, %s)", hostname,
                (ipAddresses == null) ? "NONE" : String.join(" ", ipAddresses),
                ipAddressesCount, timestamp, packageName);
!!!5802629.java!!!	describeContents() : int
        return 0;
!!!5802757.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        // write parcel token first
        out.writeInt(PARCEL_TOKEN_DNS_EVENT);
        out.writeString(hostname);
        out.writeStringArray(ipAddresses);
        out.writeInt(ipAddressesCount);
        out.writeString(packageName);
        out.writeLong(timestamp);
