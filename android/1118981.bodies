class CallbackHandler
!!!5901701.java!!!	CallbackHandler(inout looper : Looper, in networkType : int, in subscriberId : String, inout callback : NetworkStatsManager::UsageCallback)
            super(looper);
            mNetworkType = networkType;
            mSubscriberId = subscriberId;
            mCallback = callback;
!!!5901829.java!!!	handleMessage(inout message : Message) : void
            DataUsageRequest request =
                    (DataUsageRequest) getObject(message, DataUsageRequest.PARCELABLE_KEY);

            switch (message.what) {
                case CALLBACK_LIMIT_REACHED: {
                    if (mCallback != null) {
                        mCallback.onThresholdReached(mNetworkType, mSubscriberId);
                    } else {
                        Log.e(TAG, "limit reached with released callback for " + request);
                    }
                    break;
                }
                case CALLBACK_RELEASED: {
                    if (DBG) Log.d(TAG, "callback released for " + request);
                    mCallback = null;
                    break;
                }
            }
!!!5901957.java!!!	getObject(inout msg : Message, in key : String) : Object
            return msg.getData().getParcelable(key);
