class SeekState
!!!4898693.java!!!	reset() : void
            mPlayTime = -1;
            mSeekingInReverse = false;
!!!4898821.java!!!	setPlayTime(in playTime : long, inout inReverse : boolean) : void
            // TODO: This can be simplified.

            // Clamp the play time
            if (getTotalDuration() != DURATION_INFINITE) {
                mPlayTime = Math.min(playTime, getTotalDuration() - mStartDelay);
            }
            mPlayTime = Math.max(0, mPlayTime);
            mSeekingInReverse = inReverse;
!!!4898949.java!!!	updateSeekDirection(inout inReverse : boolean) : void
            // Change seek direction without changing the overall fraction
            if (inReverse && getTotalDuration() == DURATION_INFINITE) {
                throw new UnsupportedOperationException("Error: Cannot reverse infinite animator"
                        + " set");
            }
            if (mPlayTime >= 0) {
                if (inReverse != mSeekingInReverse) {
                    mPlayTime = getTotalDuration() - mStartDelay - mPlayTime;
                    mSeekingInReverse = inReverse;
                }
            }
!!!4899077.java!!!	getPlayTime() : long
            return mPlayTime;
!!!4899205.java!!!	getPlayTimeNormalized() : long
            if (mReversing) {
                return getTotalDuration() - mStartDelay - mPlayTime;
            }
            return mPlayTime;
!!!4899333.java!!!	isActive() : boolean
            return mPlayTime != -1;
