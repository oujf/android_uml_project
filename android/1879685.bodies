class Stub
!!!13639557.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!13639685.java!!!	asInterface(inout obj : android.os.IBinder) : IStorageManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.os.storage.IStorageManager))) {
return ((android.os.storage.IStorageManager)iin);
}
return new android.os.storage.IStorageManager.Stub.Proxy(obj);
!!!13639813.java!!!	asBinder() : android.os.IBinder
return this;
!!!13639941.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_registerListener:
{
data.enforceInterface(DESCRIPTOR);
android.os.storage.IStorageEventListener _arg0;
_arg0 = android.os.storage.IStorageEventListener.Stub.asInterface(data.readStrongBinder());
this.registerListener(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_unregisterListener:
{
data.enforceInterface(DESCRIPTOR);
android.os.storage.IStorageEventListener _arg0;
_arg0 = android.os.storage.IStorageEventListener.Stub.asInterface(data.readStrongBinder());
this.unregisterListener(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_isUsbMassStorageConnected:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isUsbMassStorageConnected();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_setUsbMassStorageEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.setUsbMassStorageEnabled(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_isUsbMassStorageEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isUsbMassStorageEnabled();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_mountVolume:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.mountVolume(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_unmountVolume:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _arg1;
_arg1 = (0!=data.readInt());
boolean _arg2;
_arg2 = (0!=data.readInt());
this.unmountVolume(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_formatVolume:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.formatVolume(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getStorageUsers:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int[] _result = this.getStorageUsers(_arg0);
reply.writeNoException();
reply.writeIntArray(_result);
return true;
}
case TRANSACTION_getVolumeState:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _result = this.getVolumeState(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_createSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
java.lang.String _arg2;
_arg2 = data.readString();
java.lang.String _arg3;
_arg3 = data.readString();
int _arg4;
_arg4 = data.readInt();
boolean _arg5;
_arg5 = (0!=data.readInt());
int _result = this.createSecureContainer(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_finalizeSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.finalizeSecureContainer(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_destroySecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _arg1;
_arg1 = (0!=data.readInt());
int _result = this.destroySecureContainer(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_mountSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
int _arg2;
_arg2 = data.readInt();
boolean _arg3;
_arg3 = (0!=data.readInt());
int _result = this.mountSecureContainer(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_unmountSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _arg1;
_arg1 = (0!=data.readInt());
int _result = this.unmountSecureContainer(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_isSecureContainerMounted:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.isSecureContainerMounted(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_renameSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
int _result = this.renameSecureContainer(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getSecureContainerPath:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _result = this.getSecureContainerPath(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_getSecureContainerList:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getSecureContainerList();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_shutdown:
{
data.enforceInterface(DESCRIPTOR);
android.os.storage.IStorageShutdownObserver _arg0;
_arg0 = android.os.storage.IStorageShutdownObserver.Stub.asInterface(data.readStrongBinder());
this.shutdown(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_finishMediaUpdate:
{
data.enforceInterface(DESCRIPTOR);
this.finishMediaUpdate();
reply.writeNoException();
return true;
}
case TRANSACTION_mountObb:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
java.lang.String _arg2;
_arg2 = data.readString();
android.os.storage.IObbActionListener _arg3;
_arg3 = android.os.storage.IObbActionListener.Stub.asInterface(data.readStrongBinder());
int _arg4;
_arg4 = data.readInt();
this.mountObb(_arg0, _arg1, _arg2, _arg3, _arg4);
reply.writeNoException();
return true;
}
case TRANSACTION_unmountObb:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _arg1;
_arg1 = (0!=data.readInt());
android.os.storage.IObbActionListener _arg2;
_arg2 = android.os.storage.IObbActionListener.Stub.asInterface(data.readStrongBinder());
int _arg3;
_arg3 = data.readInt();
this.unmountObb(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_isObbMounted:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.isObbMounted(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getMountedObbPath:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _result = this.getMountedObbPath(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_isExternalStorageEmulated:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isExternalStorageEmulated();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_decryptStorage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.decryptStorage(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_encryptStorage:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
java.lang.String _arg1;
_arg1 = data.readString();
int _result = this.encryptStorage(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_changeEncryptionPassword:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
java.lang.String _arg1;
_arg1 = data.readString();
int _result = this.changeEncryptionPassword(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getVolumeList:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
java.lang.String _arg1;
_arg1 = data.readString();
int _arg2;
_arg2 = data.readInt();
android.os.storage.StorageVolume[] _result = this.getVolumeList(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getSecureContainerFilesystemPath:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _result = this.getSecureContainerFilesystemPath(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_getEncryptionState:
{
data.enforceInterface(DESCRIPTOR);
int _result = this.getEncryptionState();
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_verifyEncryptionPassword:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.verifyEncryptionPassword(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_fixPermissionsSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
java.lang.String _arg2;
_arg2 = data.readString();
int _result = this.fixPermissionsSecureContainer(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_mkdirs:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
int _result = this.mkdirs(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getPasswordType:
{
data.enforceInterface(DESCRIPTOR);
int _result = this.getPasswordType();
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getPassword:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _result = this.getPassword();
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_clearPassword:
{
data.enforceInterface(DESCRIPTOR);
this.clearPassword();
return true;
}
case TRANSACTION_setField:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.setField(_arg0, _arg1);
return true;
}
case TRANSACTION_getField:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _result = this.getField(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_resizeSecureContainer:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
java.lang.String _arg2;
_arg2 = data.readString();
int _result = this.resizeSecureContainer(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_lastMaintenance:
{
data.enforceInterface(DESCRIPTOR);
long _result = this.lastMaintenance();
reply.writeNoException();
reply.writeLong(_result);
return true;
}
case TRANSACTION_runMaintenance:
{
data.enforceInterface(DESCRIPTOR);
this.runMaintenance();
reply.writeNoException();
return true;
}
case TRANSACTION_waitForAsecScan:
{
data.enforceInterface(DESCRIPTOR);
this.waitForAsecScan();
reply.writeNoException();
return true;
}
case TRANSACTION_getDisks:
{
data.enforceInterface(DESCRIPTOR);
android.os.storage.DiskInfo[] _result = this.getDisks();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getVolumes:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.os.storage.VolumeInfo[] _result = this.getVolumes(_arg0);
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getVolumeRecords:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.os.storage.VolumeRecord[] _result = this.getVolumeRecords(_arg0);
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_mount:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.mount(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_unmount:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.unmount(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_format:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.format(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_partitionPublic:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.partitionPublic(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_partitionPrivate:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.partitionPrivate(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_partitionMixed:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
this.partitionMixed(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_setVolumeNickname:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.setVolumeNickname(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_setVolumeUserFlags:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
this.setVolumeUserFlags(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_forgetVolume:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.forgetVolume(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_forgetAllVolumes:
{
data.enforceInterface(DESCRIPTOR);
this.forgetAllVolumes();
reply.writeNoException();
return true;
}
case TRANSACTION_getPrimaryStorageUuid:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _result = this.getPrimaryStorageUuid();
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_setPrimaryStorageUuid:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.content.pm.IPackageMoveObserver _arg1;
_arg1 = android.content.pm.IPackageMoveObserver.Stub.asInterface(data.readStrongBinder());
this.setPrimaryStorageUuid(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_benchmark:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
long _result = this.benchmark(_arg0);
reply.writeNoException();
reply.writeLong(_result);
return true;
}
case TRANSACTION_setDebugFlags:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.setDebugFlags(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_createUserKey:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
this.createUserKey(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_destroyUserKey:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.destroyUserKey(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_unlockUserKey:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
byte[] _arg2;
_arg2 = data.createByteArray();
byte[] _arg3;
_arg3 = data.createByteArray();
this.unlockUserKey(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_lockUserKey:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.lockUserKey(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_isUserKeyUnlocked:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _result = this.isUserKeyUnlocked(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_prepareUserStorage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
int _arg3;
_arg3 = data.readInt();
this.prepareUserStorage(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_destroyUserStorage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
this.destroyUserStorage(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_isConvertibleToFBE:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isConvertibleToFBE();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_addUserKeyAuth:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
byte[] _arg2;
_arg2 = data.createByteArray();
byte[] _arg3;
_arg3 = data.createByteArray();
this.addUserKeyAuth(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_fixateNewestUserKeyAuth:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.fixateNewestUserKeyAuth(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_fstrim:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.fstrim(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_mountProxyFileDescriptorBridge:
{
data.enforceInterface(DESCRIPTOR);
com.android.internal.os.AppFuseMount _result = this.mountProxyFileDescriptorBridge();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_openProxyFileDescriptor:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
android.os.ParcelFileDescriptor _result = this.openProxyFileDescriptor(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getCacheQuotaBytes:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
long _result = this.getCacheQuotaBytes(_arg0, _arg1);
reply.writeNoException();
reply.writeLong(_result);
return true;
}
case TRANSACTION_getCacheSizeBytes:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
long _result = this.getCacheSizeBytes(_arg0, _arg1);
reply.writeNoException();
reply.writeLong(_result);
return true;
}
case TRANSACTION_getAllocatableBytes:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
long _result = this.getAllocatableBytes(_arg0, _arg1);
reply.writeNoException();
reply.writeLong(_result);
return true;
}
case TRANSACTION_allocateBytes:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
long _arg1;
_arg1 = data.readLong();
int _arg2;
_arg2 = data.readInt();
this.allocateBytes(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_secdiscard:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.secdiscard(_arg0);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
