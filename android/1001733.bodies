class Filter
!!!4867973.java!!!	Filter()
        mResultHandler = new ResultsHandler();
!!!4868101.java!!!	setDelayer(inout delayer : Filter::Delayer) : void
        synchronized (mLock) {
            mDelayer = delayer;
        }
!!!4868229.java!!!	filter(inout constraint : CharSequence) : void
        filter(constraint, null);
!!!4868357.java!!!	filter(inout constraint : CharSequence, inout listener : Filter::FilterListener) : void
        synchronized (mLock) {
            if (mThreadHandler == null) {
                HandlerThread thread = new HandlerThread(
                        THREAD_NAME, android.os.Process.THREAD_PRIORITY_BACKGROUND);
                thread.start();
                mThreadHandler = new RequestHandler(thread.getLooper());
            }

            final long delay = (mDelayer == null) ? 0 : mDelayer.getPostingDelay(constraint);
            
            Message message = mThreadHandler.obtainMessage(FILTER_TOKEN);
    
            RequestArguments args = new RequestArguments();
            // make sure we use an immutable copy of the constraint, so that
            // it doesn't change while the filter operation is in progress
            args.constraint = constraint != null ? constraint.toString() : null;
            args.listener = listener;
            message.obj = args;
    
            mThreadHandler.removeMessages(FILTER_TOKEN);
            mThreadHandler.removeMessages(FINISH_TOKEN);
            mThreadHandler.sendMessageDelayed(message, delay);
        }
!!!4868741.java!!!	convertResultToString(inout resultValue : Object) : CharSequence
        return resultValue == null ? "" : resultValue.toString();
