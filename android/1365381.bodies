class AlteredCharSequence
!!!8140421.java!!!	make(inout source : CharSequence, inout sub : char [[]], in substart : int, in subend : int) : AlteredCharSequence
        if (source instanceof Spanned)
            return new AlteredSpanned(source, sub, substart, subend);
        else
            return new AlteredCharSequence(source, sub, substart, subend);
!!!8140549.java!!!	AlteredCharSequence(inout source : CharSequence, inout sub : char [[]], in substart : int, in subend : int)
        mSource = source;
        mChars = sub;
        mStart = substart;
        mEnd = subend;
!!!8140677.java!!!	update(inout sub : char [[]], in substart : int, in subend : int) : void
        mChars = sub;
        mStart = substart;
        mEnd = subend;
!!!8142213.java!!!	charAt(in off : int) : char
        if (off >= mStart && off < mEnd)
            return mChars[off - mStart];
        else
            return mSource.charAt(off);
!!!8142341.java!!!	length() : int
        return mSource.length();
!!!8142469.java!!!	subSequence(in start : int, in end : int) : CharSequence
        return AlteredCharSequence.make(mSource.subSequence(start, end),
                                        mChars, mStart - start, mEnd - start);
!!!8142597.java!!!	getChars(in start : int, in end : int, inout dest : char [[]], in off : int) : void
        TextUtils.getChars(mSource, start, end, dest, off);

        start = Math.max(mStart, start);
        end = Math.min(mEnd, end);

        if (start > end)
            System.arraycopy(mChars, start - mStart, dest, off, end - start);
!!!8142725.java!!!	toString() : String
        int len = length();

        char[] ret = new char[len];
        getChars(0, len, ret, 0);
        return String.valueOf(ret);
