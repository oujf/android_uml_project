class StorageTracker
!!!11739013.java!!!	startTracking() : void
            IntentFilter filter = new IntentFilter();

            // Storage status.  Just need to register, since STORAGE_LOW is a sticky
            // broadcast we will receive that if it is currently active.
            filter.addAction(Intent.ACTION_DEVICE_STORAGE_LOW);
            filter.addAction(Intent.ACTION_DEVICE_STORAGE_OK);
            mContext.registerReceiver(this, filter);
!!!11739141.java!!!	isStorageNotLow() : boolean
            return !mStorageLow;
!!!11739269.java!!!	getSeq() : int
            return mLastBatterySeq;
!!!11739397.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
            onReceiveInternal(intent);
!!!11739525.java!!!	onReceiveInternal(inout intent : Intent) : void
            final String action = intent.getAction();
            mLastBatterySeq = intent.getIntExtra(DeviceStorageMonitorService.EXTRA_SEQUENCE,
                    mLastBatterySeq);
            if (Intent.ACTION_DEVICE_STORAGE_LOW.equals(action)) {
                if (DEBUG) {
                    Slog.d(TAG, "Available storage too low to do work. @ "
                            + SystemClock.elapsedRealtime());
                }
                mStorageLow = true;
            } else if (Intent.ACTION_DEVICE_STORAGE_OK.equals(action)) {
                if (DEBUG) {
                    Slog.d(TAG, "Available stoage high enough to do work. @ "
                            + SystemClock.elapsedRealtime());
                }
                mStorageLow = false;
                maybeReportNewStorageState();
            }
