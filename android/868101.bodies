class ImageTransformState
!!!3865605.java!!!	initFrom(inout view : View) : void
        super.initFrom(view);
        if (view instanceof ImageView) {
            mIcon = (Icon) view.getTag(ICON_TAG);
        }
!!!3865733.java!!!	sameAs(inout otherState : TransformState) : boolean
        if (otherState instanceof ImageTransformState) {
            return mIcon != null && mIcon.sameAs(((ImageTransformState) otherState).getIcon());
        }
        return super.sameAs(otherState);
!!!3865861.java!!!	appear(in transformationAmount : float, inout otherView : TransformableView) : void
        if (otherView instanceof HybridNotificationView) {
            if (transformationAmount == 0.0f) {
                mTransformedView.setPivotY(0);
                mTransformedView.setPivotX(mTransformedView.getWidth() / 2);
                prepareFadeIn();
            }
            transformationAmount = mapToDuration(transformationAmount);
            CrossFadeHelper.fadeIn(mTransformedView, transformationAmount, false /* remap */);
            transformationAmount = Interpolators.LINEAR_OUT_SLOW_IN.getInterpolation(
                    transformationAmount);
            mTransformedView.setScaleX(transformationAmount);
            mTransformedView.setScaleY(transformationAmount);
        } else {
            super.appear(transformationAmount, otherView);
        }
!!!3865989.java!!!	disappear(in transformationAmount : float, inout otherView : TransformableView) : void
        if (otherView instanceof HybridNotificationView) {
            if (transformationAmount == 0.0f) {
                mTransformedView.setPivotY(0);
                mTransformedView.setPivotX(mTransformedView.getWidth() / 2);
            }
            transformationAmount = mapToDuration(1.0f - transformationAmount);
            CrossFadeHelper.fadeOut(mTransformedView, 1.0f - transformationAmount,
                    false /* remap */);
            transformationAmount = Interpolators.LINEAR_OUT_SLOW_IN.getInterpolation(
                    transformationAmount);
            mTransformedView.setScaleX(transformationAmount);
            mTransformedView.setScaleY(transformationAmount);
        } else {
            super.disappear(transformationAmount, otherView);
        }
!!!3866117.java!!!	mapToDuration(in scaleAmount : float) : float
        // Assuming a linear interpolator, we can easily map it to our new duration
        scaleAmount = (scaleAmount * StackStateAnimator.ANIMATION_DURATION_STANDARD
                - (StackStateAnimator.ANIMATION_DURATION_STANDARD - ANIMATION_DURATION_LENGTH))
                        / ANIMATION_DURATION_LENGTH;
        return Math.max(Math.min(scaleAmount, 1.0f), 0.0f);
!!!3866245.java!!!	getIcon() : Icon
        return mIcon;
!!!3866373.java!!!	obtain() : ImageTransformState
        ImageTransformState instance = sInstancePool.acquire();
        if (instance != null) {
            return instance;
        }
        return new ImageTransformState();
!!!3866501.java!!!	transformScale() : boolean
        return true;
!!!3866629.java!!!	recycle() : void
        super.recycle();
        sInstancePool.release(this);
!!!3866757.java!!!	reset() : void
        super.reset();
        mIcon = null;
