class BatteryPreference
!!!4216709.java!!!	BatteryPreference(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        mBattery = context.getString(com.android.internal.R.string.status_bar_battery);
        setEntryValues(new CharSequence[] {PERCENT, DEFAULT, DISABLED });
!!!4216837.java!!!	onAttached() : void
        super.onAttached();
        mHasPercentage = Settings.System.getInt(getContext().getContentResolver(),
                SHOW_BATTERY_PERCENT, 0) != 0;
        Dependency.get(TunerService.class).addTunable(this, StatusBarIconController.ICON_BLACKLIST);
!!!4216965.java!!!	onDetached() : void
        Dependency.get(TunerService.class).removeTunable(this);
        super.onDetached();
!!!4217093.java!!!	onTuningChanged(in key : String, in newValue : String) : void
        if (StatusBarIconController.ICON_BLACKLIST.equals(key)) {
            mBlacklist = StatusBarIconController.getIconBlacklist(newValue);
            mBatteryEnabled = !mBlacklist.contains(mBattery);
        }
        if (!mHasSetValue) {
            // Because of the complicated tri-state it can end up looping and setting state back to
            // what the user didn't choose.  To avoid this, just set the state once and rely on the
            // preference to handle updates.
            mHasSetValue = true;
            if (mBatteryEnabled && mHasPercentage) {
                setValue(PERCENT);
            } else if (mBatteryEnabled) {
                setValue(DEFAULT);
            } else {
                setValue(DISABLED);
            }
        }
!!!4217221.java!!!	persistString(in value : String) : boolean
        final boolean v = PERCENT.equals(value);
        MetricsLogger.action(getContext(), MetricsEvent.TUNER_BATTERY_PERCENTAGE, v);
        Settings.System.putInt(getContext().getContentResolver(), SHOW_BATTERY_PERCENT, v ? 1 : 0);
        if (DISABLED.equals(value)) {
            mBlacklist.add(mBattery);
        } else {
            mBlacklist.remove(mBattery);
        }
        Dependency.get(TunerService.class).setValue(StatusBarIconController.ICON_BLACKLIST,
                TextUtils.join(",", mBlacklist));
        return true;
