class Proxy
!!!13321477.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13321605.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13321733.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13321861.java!!!	onSessionCreated(in sessionId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
mRemote.transact(Stub.TRANSACTION_onSessionCreated, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13321989.java!!!	onSessionBadgingChanged(in sessionId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
mRemote.transact(Stub.TRANSACTION_onSessionBadgingChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13322117.java!!!	onSessionActiveChanged(in sessionId : int, inout active : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeInt(((active)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onSessionActiveChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13322245.java!!!	onSessionProgressChanged(in sessionId : int, in progress : float) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeFloat(progress);
mRemote.transact(Stub.TRANSACTION_onSessionProgressChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13322373.java!!!	onSessionFinished(in sessionId : int, inout success : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(sessionId);
_data.writeInt(((success)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_onSessionFinished, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
