class RSFilter
!!!1173637.cpp!!!	RSFilter()

!!!1173765.cpp!!!	configure(in msg : sp<AMessage>) : status_t
    status_t err = SimpleFilter::configure(msg);
    if (err != OK) {
        return err;
    }

    if (!msg->findString("cacheDir", &mCacheDir)) {
        ALOGE("Failed to find cache directory in config message.");
        return NAME_NOT_FOUND;
    }

    sp<RenderScriptWrapper> wrapper;
    if (!msg->findObject("rs-wrapper", (sp<RefBase>*)&wrapper)) {
        ALOGE("Failed to find RenderScriptWrapper in config message.");
        return NAME_NOT_FOUND;
    }

    mRS = wrapper->mContext;
    mCallback = wrapper->mCallback;

    return OK;
!!!1173893.cpp!!!	start() : status_t
    // 32-bit elements for ARGB8888
    RSC::sp<const RSC::Element> e = RSC::Element::U8_4(mRS);

    RSC::Type::Builder tb(mRS, e);
    tb.setX(mWidth);
    tb.setY(mHeight);
    RSC::sp<const RSC::Type> t = tb.create();

    mAllocIn = RSC::Allocation::createTyped(mRS, t);
    mAllocOut = RSC::Allocation::createTyped(mRS, t);

    return OK;
!!!1174021.cpp!!!	reset() : void
    mCallback.clear();
    mAllocOut.clear();
    mAllocIn.clear();
    mRS.clear();
!!!1174149.cpp!!!	setParameters(in msg : sp<AMessage>) : status_t
    return mCallback->handleSetParameters(msg);
!!!1174277.cpp!!!	processBuffers(in srcBuffer : sp<MediaCodecBuffer>, in outBuffer : sp<MediaCodecBuffer>) : status_t
    mAllocIn->copy1DRangeFrom(0, mWidth * mHeight, srcBuffer->data());
    mCallback->processBuffers(mAllocIn.get(), mAllocOut.get());
    mAllocOut->copy1DRangeTo(0, mWidth * mHeight, outBuffer->data());

    return OK;
!!!1174405.cpp!!!	~RSFilter()

