class PreviewInflater
!!!4170373.java!!!	PreviewInflater(inout context : Context, inout lockPatternUtils : LockPatternUtils)
        mContext = context;
        mLockPatternUtils = lockPatternUtils;
!!!4170501.java!!!	inflatePreview(inout intent : Intent) : View
        WidgetInfo info = getWidgetInfo(intent);
        return inflatePreview(info);
!!!4170629.java!!!	inflatePreviewFromService(inout componentName : ComponentName) : View
        WidgetInfo info = getWidgetInfoFromService(componentName);
        return inflatePreview(info);
!!!4170757.java!!!	inflatePreview(inout info : PreviewInflater::WidgetInfo) : KeyguardPreviewContainer
        if (info == null) {
            return null;
        }
        View v = inflateWidgetView(info);
        if (v == null) {
            return null;
        }
        KeyguardPreviewContainer container = new KeyguardPreviewContainer(mContext, null);
        container.addView(v);
        return container;
!!!4170885.java!!!	inflateWidgetView(inout widgetInfo : PreviewInflater::WidgetInfo) : View
        View widgetView = null;
        try {
            Context appContext = mContext.createPackageContext(
                    widgetInfo.contextPackage, Context.CONTEXT_RESTRICTED);
            LayoutInflater appInflater = (LayoutInflater)
                    appContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            appInflater = appInflater.cloneInContext(appContext);
            widgetView = appInflater.inflate(widgetInfo.layoutId, null, false);
        } catch (PackageManager.NameNotFoundException|RuntimeException e) {
            Log.w(TAG, "Error creating widget view", e);
        }
        return widgetView;
!!!4171013.java!!!	getWidgetInfoFromService(inout componentName : ComponentName) : PreviewInflater::WidgetInfo
        PackageManager packageManager = mContext.getPackageManager();
        // Look for the preview specified in the service meta-data
        try {
            Bundle metaData = packageManager.getServiceInfo(
                    componentName, PackageManager.GET_META_DATA).metaData;
            return getWidgetInfoFromMetaData(componentName.getPackageName(), metaData);
        } catch (PackageManager.NameNotFoundException e) {
            Log.w(TAG, "Failed to load preview; " + componentName.flattenToShortString()
                    + " not found", e);
        }
        return null;
!!!4171141.java!!!	getWidgetInfoFromMetaData(in contextPackage : String, inout metaData : Bundle) : PreviewInflater::WidgetInfo
        if (metaData == null) {
            return null;
        }
        int layoutId = metaData.getInt(META_DATA_KEYGUARD_LAYOUT);
        if (layoutId == 0) {
            return null;
        }
        WidgetInfo info = new WidgetInfo();
        info.contextPackage = contextPackage;
        info.layoutId = layoutId;
        return info;
!!!4171269.java!!!	getWidgetInfo(inout intent : Intent) : PreviewInflater::WidgetInfo
        PackageManager packageManager = mContext.getPackageManager();
        int flags = PackageManager.MATCH_DEFAULT_ONLY
                | PackageManager.MATCH_DIRECT_BOOT_AWARE
                | PackageManager.MATCH_DIRECT_BOOT_UNAWARE;
        final List<ResolveInfo> appList = packageManager.queryIntentActivitiesAsUser(
                intent, flags, KeyguardUpdateMonitor.getCurrentUser());
        if (appList.size() == 0) {
            return null;
        }
        ResolveInfo resolved = packageManager.resolveActivityAsUser(intent,
                flags | PackageManager.GET_META_DATA,
                KeyguardUpdateMonitor.getCurrentUser());
        if (wouldLaunchResolverActivity(resolved, appList)) {
            return null;
        }
        if (resolved == null || resolved.activityInfo == null) {
            return null;
        }
        return getWidgetInfoFromMetaData(resolved.activityInfo.packageName,
                resolved.activityInfo.metaData);
!!!4171397.java!!!	wouldLaunchResolverActivity(inout ctx : Context, inout intent : Intent, in currentUserId : int) : boolean
        return getTargetActivityInfo(ctx, intent, currentUserId, false /* onlyDirectBootAware */)
                == null;
!!!4171525.java!!!	getTargetActivityInfo(inout ctx : Context, inout intent : Intent, in currentUserId : int, inout onlyDirectBootAware : boolean) : ActivityInfo
        PackageManager packageManager = ctx.getPackageManager();
        int flags = PackageManager.MATCH_DEFAULT_ONLY;
        if (!onlyDirectBootAware) {
            flags |=  PackageManager.MATCH_DIRECT_BOOT_AWARE
                    | PackageManager.MATCH_DIRECT_BOOT_UNAWARE;
        }
        final List<ResolveInfo> appList = packageManager.queryIntentActivitiesAsUser(
                intent, flags, currentUserId);
        if (appList.size() == 0) {
            return null;
        }
        ResolveInfo resolved = packageManager.resolveActivityAsUser(intent,
                flags | PackageManager.GET_META_DATA, currentUserId);
        if (resolved == null || wouldLaunchResolverActivity(resolved, appList)) {
            return null;
        } else {
            return resolved.activityInfo;
        }
!!!4171653.java!!!	wouldLaunchResolverActivity(inout resolved : ResolveInfo, inout appList : List<ResolveInfo>) : boolean
        // If the list contains the above resolved activity, then it can't be
        // ResolverActivity itself.
        for (int i = 0; i < appList.size(); i++) {
            ResolveInfo tmp = appList.get(i);
            if (tmp.activityInfo.name.equals(resolved.activityInfo.name)
                    && tmp.activityInfo.packageName.equals(resolved.activityInfo.packageName)) {
                return false;
            }
        }
        return true;
