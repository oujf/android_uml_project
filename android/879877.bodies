class ReverseLinearLayout
!!!4068101.java!!!	ReverseLinearLayout(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!4068229.java!!!	onFinishInflate() : void
        super.onFinishInflate();
        updateOrder();
!!!4068357.java!!!	addView(inout child : View) : void
        reversParams(child.getLayoutParams());
        if (mIsLayoutReverse) {
            super.addView(child, 0);
        } else {
            super.addView(child);
        }
!!!4068485.java!!!	addView(inout child : View, inout params : ViewGroup.LayoutParams) : void
        reversParams(params);
        if (mIsLayoutReverse) {
            super.addView(child, 0, params);
        } else {
            super.addView(child, params);
        }
!!!4068613.java!!!	onRtlPropertiesChanged(in layoutDirection : int) : void
        super.onRtlPropertiesChanged(layoutDirection);
        updateOrder();
!!!4068741.java!!!	setAlternativeOrder(inout alternative : boolean) : void
        mIsAlternativeOrder = alternative;
        updateOrder();
!!!4068869.java!!!	updateOrder() : void
        boolean isLayoutRtl = getLayoutDirection() == LAYOUT_DIRECTION_RTL;
        boolean isLayoutReverse = isLayoutRtl ^ mIsAlternativeOrder;

        if (mIsLayoutReverse != isLayoutReverse) {
            // reversity changed, swap the order of all views.
            int childCount = getChildCount();
            ArrayList<View> childList = new ArrayList<>(childCount);
            for (int i = 0; i < childCount; i++) {
                childList.add(getChildAt(i));
            }
            removeAllViews();
            for (int i = childCount - 1; i >= 0; i--) {
                super.addView(childList.get(i));
            }
            mIsLayoutReverse = isLayoutReverse;
        }
!!!4068997.java!!!	reversParams(inout params : ViewGroup.LayoutParams) : void
        if (params == null) {
            return;
        }
        int width = params.width;
        params.width = params.height;
        params.height = width;
