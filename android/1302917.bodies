class WriteFileAsyncTask
!!!7828101.java!!!	WriteFileAsyncTask(inout destination : ParcelFileDescriptor, inout cancellationSignal : CancellationSignal, inout callback : PrintDocumentAdapter::WriteResultCallback)
            mDestination = destination;
            mResultCallback = callback;
            mCancellationSignal = cancellationSignal;
            mCancellationSignal.setOnCancelListener(new OnCancelListener() {
                @Override
                public void onCancel() {
                    cancel(true);
                }
            });
!!!7828229.java!!!	doInBackground(inout  : Void...params) : Void
            InputStream in = null;
            OutputStream out = new FileOutputStream(mDestination.getFileDescriptor());
            final byte[] buffer = new byte[8192];
            try {
                in = new FileInputStream(mFile);
                while (true) {
                    if (isCancelled()) {
                        break;
                    }
                    final int readByteCount = in.read(buffer);
                    if (readByteCount < 0) {
                        break;
                    }
                    out.write(buffer, 0, readByteCount);
                }
             } catch (IOException ioe) {
                 Log.e(LOG_TAG, "Error writing data!", ioe);
                 mResultCallback.onWriteFailed(mContext.getString(
                         R.string.write_fail_reason_cannot_write));
             } finally {
                IoUtils.closeQuietly(in);
                IoUtils.closeQuietly(out);
            }
            return null;
!!!7828357.java!!!	onPostExecute(inout result : Void) : void
            mResultCallback.onWriteFinished(new PageRange[] {PageRange.ALL_PAGES});
!!!7828485.java!!!	onCancelled(inout result : Void) : void
            mResultCallback.onWriteFailed(mContext.getString(
                    R.string.write_fail_reason_cancelled));
