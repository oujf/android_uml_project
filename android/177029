format 214
"tests" // source::frameworks::av::media::libstagefright::omx::tests::tests
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/media/libstagefright/omx/tests/"
  cpp_src_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/media/libstagefright/omx/tests/"
  deploymentview 167429 "tests"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 283397 "main"
      stereotype "source"
      cpp_src "int main(int argc, char **argv) {
    using namespace android;

    android::ProcessState::self()->startThreadPool();

    const char *me = argv[0];

    unsigned long seed = 0xdeadbeef;

    int res;
    while ((res = getopt(argc, argv, \"hs:\")) >= 0) {
        switch (res) {
            case 's':
            {
                char *end;
                unsigned long x = strtoul(optarg, &end, 10);

                if (*end != '\\0' || end == optarg) {
                    fprintf(stderr, \"Malformed seed.\\n\");
                    return 1;
                }

                seed = x;
                break;
            }

            case '?':
                fprintf(stderr, \"\\n\");
                // fall through

            case 'h':
            default:
            {
                usage(me);
                exit(1);
                break;
            }
        }
    }

    argc -= optind;
    argv += optind;

    printf(\"To reproduce the conditions for this test, launch \"
           \"with \\\"%s -s %lu\\\"\\n\", me, seed);

    srand(seed);

    sp<Harness> h = new Harness;
    CHECK_EQ(h->initCheck(), (status_t)OK);

    if (argc == 0) {
        h->testAll();
    } else if (argc == 2) {
        if (h->test(argv[0], argv[1]) == OK) {
            printf(\"OK\\n\");
        }
    }

    return 0;
}
"
      associated_elems
      end
    end
  end
end
