class Proxy
!!!13390469.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13390597.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13390725.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13390853.java!!!	hasIrEmitter() : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_hasIrEmitter, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13390981.java!!!	transmit(inout packageName : java.lang.String, in carrierFrequency : int, inout pattern : int [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packageName);
_data.writeInt(carrierFrequency);
_data.writeIntArray(pattern);
mRemote.transact(Stub.TRANSACTION_transmit, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13391109.java!!!	getCarrierFrequencies() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getCarrierFrequencies, _data, _reply, 0);
_reply.readException();
_result = _reply.createIntArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
