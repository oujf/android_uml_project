class RadioGroup
!!!9571589.java!!!	RadioGroup(inout context : Context)
        super(context);
        setOrientation(VERTICAL);
        init();
!!!9571717.java!!!	RadioGroup(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);

        // RadioGroup is important by default, unless app developer overrode attribute.
        if (getImportantForAutofill() == IMPORTANT_FOR_AUTOFILL_AUTO) {
            setImportantForAutofill(IMPORTANT_FOR_AUTOFILL_YES);
        }

        // retrieve selected radio button as requested by the user in the
        // XML layout file
        TypedArray attributes = context.obtainStyledAttributes(
                attrs, com.android.internal.R.styleable.RadioGroup, com.android.internal.R.attr.radioButtonStyle, 0);

        int value = attributes.getResourceId(R.styleable.RadioGroup_checkedButton, View.NO_ID);
        if (value != View.NO_ID) {
            mCheckedId = value;
            mInitialCheckedId = value;
        }
        final int index = attributes.getInt(com.android.internal.R.styleable.RadioGroup_orientation, VERTICAL);
        setOrientation(index);

        attributes.recycle();
        init();
!!!9571845.java!!!	init() : void
        mChildOnCheckedChangeListener = new CheckedStateTracker();
        mPassThroughListener = new PassThroughHierarchyChangeListener();
        super.setOnHierarchyChangeListener(mPassThroughListener);
!!!9571973.java!!!	setOnHierarchyChangeListener(inout listener : ViewGroup::OnHierarchyChangeListener) : void
        // the user listener is delegated to our pass-through listener
        mPassThroughListener.mOnHierarchyChangeListener = listener;
!!!9572101.java!!!	onFinishInflate() : void
        super.onFinishInflate();

        // checks the appropriate radio button as requested in the XML file
        if (mCheckedId != -1) {
            mProtectFromCheckedChange = true;
            setCheckedStateForView(mCheckedId, true);
            mProtectFromCheckedChange = false;
            setCheckedId(mCheckedId);
        }
!!!9572229.java!!!	addView(inout child : View, in index : int, inout params : ViewGroup::LayoutParams) : void
        if (child instanceof RadioButton) {
            final RadioButton button = (RadioButton) child;
            if (button.isChecked()) {
                mProtectFromCheckedChange = true;
                if (mCheckedId != -1) {
                    setCheckedStateForView(mCheckedId, false);
                }
                mProtectFromCheckedChange = false;
                setCheckedId(button.getId());
            }
        }

        super.addView(child, index, params);
!!!9572357.java!!!	check(in id : int) : void
        // don't even bother
        if (id != -1 && (id == mCheckedId)) {
            return;
        }

        if (mCheckedId != -1) {
            setCheckedStateForView(mCheckedId, false);
        }

        if (id != -1) {
            setCheckedStateForView(id, true);
        }

        setCheckedId(id);
!!!9572485.java!!!	setCheckedId(in id : int) : void
        mCheckedId = id;
        if (mOnCheckedChangeListener != null) {
            mOnCheckedChangeListener.onCheckedChanged(this, mCheckedId);
        }
        final AutofillManager afm = mContext.getSystemService(AutofillManager.class);
        if (afm != null) {
            afm.notifyValueChanged(this);
        }
!!!9572613.java!!!	setCheckedStateForView(in viewId : int, inout checked : boolean) : void
        View checkedView = findViewById(viewId);
        if (checkedView != null && checkedView instanceof RadioButton) {
            ((RadioButton) checkedView).setChecked(checked);
        }
!!!9572741.java!!!	getCheckedRadioButtonId() : int
        return mCheckedId;
!!!9572869.java!!!	clearCheck() : void
        check(-1);
!!!9572997.java!!!	setOnCheckedChangeListener(inout listener : RadioGroup::OnCheckedChangeListener) : void
        mOnCheckedChangeListener = listener;
!!!9573125.java!!!	generateLayoutParams(inout attrs : AttributeSet) : ViewGroup::LayoutParams
        return new RadioGroup.LayoutParams(getContext(), attrs);
!!!9573253.java!!!	checkLayoutParams(inout p : ViewGroup::LayoutParams) : boolean
        return p instanceof RadioGroup.LayoutParams;
!!!9573381.java!!!	generateDefaultLayoutParams() : LinearLayout::LayoutParams
        return new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
!!!9573509.java!!!	getAccessibilityClassName() : CharSequence
        return RadioGroup.class.getName();
