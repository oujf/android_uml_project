class QSFragment
!!!3364357.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        inflater =inflater.cloneInContext(new ContextThemeWrapper(getContext(), R.style.qs_theme));
        return inflater.inflate(R.layout.qs_panel, container, false);
!!!3364485.java!!!	onViewCreated(inout view : View, inout savedInstanceState : Bundle) : void
        super.onViewCreated(view, savedInstanceState);
        mQSPanel = view.findViewById(R.id.quick_settings_panel);
        mQSDetail = view.findViewById(R.id.qs_detail);
        mHeader = view.findViewById(R.id.header);
        mFooter = view.findViewById(R.id.qs_footer);
        mContainer = view.findViewById(id.quick_settings_container);
        mGutterHeight = getContext().getResources().getDimensionPixelSize(R.dimen.qs_gutter_height);

        mQSDetail.setQsPanel(mQSPanel, mHeader, mFooter);

        // If the quick settings row is not shown, then there is no need for the animation from
        // the row to the full QS panel.
        if (getResources().getBoolean(R.bool.config_showQuickSettingsRow)) {
            mQSAnimator = new QSAnimator(this,
                    mHeader.findViewById(R.id.quick_qs_panel), mQSPanel);
        }

        mQSCustomizer = view.findViewById(R.id.qs_customize);
        mQSCustomizer.setQs(this);
        if (savedInstanceState != null) {
            setExpanded(savedInstanceState.getBoolean(EXTRA_EXPANDED));
            setListening(savedInstanceState.getBoolean(EXTRA_LISTENING));
        }
!!!3364613.java!!!	onDestroy() : void
        super.onDestroy();
        if (mListening) {
            setListening(false);
        }
!!!3364741.java!!!	onSaveInstanceState(inout outState : Bundle) : void
        super.onSaveInstanceState(outState);
        outState.putBoolean(EXTRA_EXPANDED, mQsExpanded);
        outState.putBoolean(EXTRA_LISTENING, mListening);
!!!3364869.java!!!	isListening() : boolean
        return mListening;
!!!3364997.java!!!	isExpanded() : boolean
        return mQsExpanded;
!!!3365125.java!!!	getHeader() : View
        return mHeader;
!!!3365253.java!!!	setHasNotifications(inout hasNotifications : boolean) : void
        mContainer.setGutterEnabled(hasNotifications);
!!!3365381.java!!!	setPanelView(inout panelView : HeightListener) : void
        mPanelView = panelView;
!!!3365509.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        if (newConfig.getLayoutDirection() != mLayoutDirection) {
            mLayoutDirection = newConfig.getLayoutDirection();

            if (mQSAnimator != null) {
                mQSAnimator.onRtlChanged();
            }
        }
!!!3365637.java!!!	setContainer(inout container : ViewGroup) : void
        if (container instanceof NotificationsQuickSettingsContainer) {
            mQSCustomizer.setContainer((NotificationsQuickSettingsContainer) container);
        }
!!!3365765.java!!!	isCustomizing() : boolean
        return mQSCustomizer.isCustomizing();
!!!3365893.java!!!	setHost(inout qsh : QSTileHost) : void
        mQSPanel.setHost(qsh, mQSCustomizer);
        mHeader.setQSPanel(mQSPanel);
        mFooter.setQSPanel(mQSPanel);
        mQSDetail.setHost(qsh);

        if (mQSAnimator != null) {
            mQSAnimator.setHost(qsh);
        }
!!!3366021.java!!!	updateQsState() : void
        final boolean expandVisually = mQsExpanded || mStackScrollerOverscrolling
                || mHeaderAnimating;
        mQSPanel.setExpanded(mQsExpanded);
        mQSDetail.setExpanded(mQsExpanded);
        mHeader.setVisibility((mQsExpanded || !mKeyguardShowing || mHeaderAnimating)
                ? View.VISIBLE
                : View.INVISIBLE);
        mHeader.setExpanded((mKeyguardShowing && !mHeaderAnimating)
                || (mQsExpanded && !mStackScrollerOverscrolling));
        mFooter.setVisibility((mQsExpanded || !mKeyguardShowing || mHeaderAnimating)
                ? View.VISIBLE
                : View.INVISIBLE);
        mFooter.setExpanded((mKeyguardShowing && !mHeaderAnimating)
                || (mQsExpanded && !mStackScrollerOverscrolling));
        mQSPanel.setVisibility(expandVisually ? View.VISIBLE : View.INVISIBLE);
!!!3366149.java!!!	getQsPanel() : QSPanel
        return mQSPanel;
!!!3366277.java!!!	getCustomizer() : QSCustomizer
        return mQSCustomizer;
!!!3366405.java!!!	isShowingDetail() : boolean
        return mQSPanel.isShowingCustomize() || mQSDetail.isShowingDetail();
!!!3366533.java!!!	setHeaderClickable(inout clickable : boolean) : void
        if (DEBUG) Log.d(TAG, "setHeaderClickable " + clickable);
        mFooter.getExpandView().setClickable(clickable);
!!!3366661.java!!!	setExpanded(inout expanded : boolean) : void
        if (DEBUG) Log.d(TAG, "setExpanded " + expanded);
        mQsExpanded = expanded;
        mQSPanel.setListening(mListening && mQsExpanded);
        updateQsState();
!!!3366789.java!!!	setKeyguardShowing(inout keyguardShowing : boolean) : void
        if (DEBUG) Log.d(TAG, "setKeyguardShowing " + keyguardShowing);
        mKeyguardShowing = keyguardShowing;

        if (mQSAnimator != null) {
            mQSAnimator.setOnKeyguard(keyguardShowing);
        }

        mFooter.setKeyguardShowing(keyguardShowing);
        updateQsState();
!!!3366917.java!!!	setOverscrolling(inout stackScrollerOverscrolling : boolean) : void
        if (DEBUG) Log.d(TAG, "setOverscrolling " + stackScrollerOverscrolling);
        mStackScrollerOverscrolling = stackScrollerOverscrolling;
        updateQsState();
!!!3367045.java!!!	setListening(inout listening : boolean) : void
        if (DEBUG) Log.d(TAG, "setListening " + listening);
        mListening = listening;
        mHeader.setListening(listening);
        mFooter.setListening(listening);
        mQSPanel.setListening(mListening && mQsExpanded);
!!!3367173.java!!!	setHeaderListening(inout listening : boolean) : void
        mHeader.setListening(listening);
        mFooter.setListening(listening);
!!!3367301.java!!!	setQsExpansion(in expansion : float, in headerTranslation : float) : void
        if (DEBUG) Log.d(TAG, "setQSExpansion " + expansion + " " + headerTranslation);
        mContainer.setExpansion(expansion);
        final float translationScaleY = expansion - 1;
        if (!mHeaderAnimating) {
            int height = mHeader.getHeight() + mGutterHeight;
            getView().setTranslationY(mKeyguardShowing ? (translationScaleY * height)
                    : headerTranslation);
        }
        mHeader.setExpansion(mKeyguardShowing ? 1 : expansion);
        mFooter.setExpansion(mKeyguardShowing ? 1 : expansion);
        int heightDiff = mQSPanel.getBottom() - mHeader.getBottom() + mHeader.getPaddingBottom()
                + mFooter.getHeight();
        mQSPanel.setTranslationY(translationScaleY * heightDiff);
        mQSDetail.setFullyExpanded(expansion == 1);

        if (mQSAnimator != null) {
            mQSAnimator.setPosition(expansion);
        }

        // Set bounds on the QS panel so it doesn't run over the header.
        mQsBounds.top = (int) -mQSPanel.getTranslationY();
        mQsBounds.right = mQSPanel.getWidth();
        mQsBounds.bottom = mQSPanel.getHeight();
        mQSPanel.setClipBounds(mQsBounds);
!!!3367429.java!!!	animateHeaderSlidingIn(in delay : long) : void
        if (DEBUG) Log.d(TAG, "animateHeaderSlidingIn");
        // If the QS is already expanded we don't need to slide in the header as it's already
        // visible.
        if (!mQsExpanded) {
            mHeaderAnimating = true;
            mDelay = delay;
            getView().getViewTreeObserver().addOnPreDrawListener(mStartHeaderSlidingIn);
        }
!!!3367557.java!!!	animateHeaderSlidingOut() : void
        if (DEBUG) Log.d(TAG, "animateHeaderSlidingOut");
        mHeaderAnimating = true;
        getView().animate().y(-mHeader.getHeight())
                .setStartDelay(0)
                .setDuration(StackStateAnimator.ANIMATION_DURATION_STANDARD)
                .setInterpolator(Interpolators.FAST_OUT_SLOW_IN)
                .setListener(new AnimatorListenerAdapter() {
                    @Override
                    public void onAnimationEnd(Animator animation) {
                        getView().animate().setListener(null);
                        mHeaderAnimating = false;
                        updateQsState();
                    }
                })
                .start();
!!!3367685.java!!!	setExpandClickListener(inout onClickListener : OnClickListener) : void
        mFooter.getExpandView().setOnClickListener(onClickListener);
!!!3367813.java!!!	closeDetail() : void
        mQSPanel.closeDetail();
!!!3367941.java!!!	notifyCustomizeChanged() : void
        // The customize state changed, so our height changed.
        mContainer.updateExpansion();
        mQSPanel.setVisibility(!mQSCustomizer.isCustomizing() ? View.VISIBLE : View.INVISIBLE);
        mHeader.setVisibility(!mQSCustomizer.isCustomizing() ? View.VISIBLE : View.INVISIBLE);
        mFooter.setVisibility(!mQSCustomizer.isCustomizing() ? View.VISIBLE : View.INVISIBLE);
        // Let the panel know the position changed and it needs to update where notifications
        // and whatnot are.
        mPanelView.onQsHeightChanged();
!!!3368069.java!!!	getDesiredHeight() : int
        if (mQSCustomizer.isCustomizing()) {
            return getView().getHeight();
        }
        if (mQSDetail.isClosingDetail()) {
            LayoutParams layoutParams = (LayoutParams) mQSPanel.getLayoutParams();
            int panelHeight = layoutParams.topMargin + layoutParams.bottomMargin +
                    + mQSPanel.getMeasuredHeight();
            return panelHeight + getView().getPaddingBottom() + mGutterHeight;
        } else {
            return getView().getMeasuredHeight() + mGutterHeight;
        }
!!!3368197.java!!!	setHeightOverride(in desiredHeight : int) : void
        mContainer.setHeightOverride(desiredHeight - mGutterHeight);
!!!3368325.java!!!	getQsMinExpansionHeight() : int
        return mHeader.getHeight();
!!!3368453.java!!!	hideImmediately() : void
        getView().animate().cancel();
        getView().setY(-mHeader.getHeight());
