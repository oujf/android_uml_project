class BWGraphicBufferSource
!!!1455877.cpp!!!	configure(in omxNode : sp<IOMXNode>, in dataSpace : int32_t) : Status
    // Do setInputSurface() first, the node will try to enable metadata
    // mode on input, and does necessary error checking. If this fails,
    // we can't use this input surface on the node.
    status_t err = omxNode->setInputSurface(mOMXBufferSource);
    if (err != NO_ERROR) {
        ALOGE("Unable to set input surface: %d", err);
        return Status::fromStatusT(err);
    }

    // use consumer usage bits queried from encoder, but always add
    // HW_VIDEO_ENCODER for backward compatibility.
    uint32_t consumerUsage;
    if (omxNode->getParameter(
            (OMX_INDEXTYPE)OMX_IndexParamConsumerUsageBits,
            &consumerUsage, sizeof(consumerUsage)) != OK) {
        consumerUsage = 0;
    }

    OMX_PARAM_PORTDEFINITIONTYPE def;
    InitOMXParams(&def);
    def.nPortIndex = kPortIndexInput;

    err = omxNode->getParameter(
            OMX_IndexParamPortDefinition, &def, sizeof(def));
    if (err != NO_ERROR) {
        ALOGE("Failed to get port definition: %d", err);
        return Status::fromStatusT(UNKNOWN_ERROR);
    }

    return Status::fromStatusT(mBase->configure(
              new BWOmxNodeWrapper(omxNode),
              dataSpace,
              def.nBufferCountActual,
              def.format.video.nFrameWidth,
              def.format.video.nFrameHeight,
              consumerUsage));
!!!1456005.cpp!!!	setSuspend(in suspend : bool, in timeUs : int64_t) : Status
    return Status::fromStatusT(mBase->setSuspend(suspend, timeUs));
!!!1456133.cpp!!!	setRepeatPreviousFrameDelayUs(in repeatAfterUs : int64_t) : Status
    return Status::fromStatusT(mBase->setRepeatPreviousFrameDelayUs(repeatAfterUs));
!!!1456261.cpp!!!	setMaxFps(in maxFps : float) : Status
    return Status::fromStatusT(mBase->setMaxFps(maxFps));
!!!1456389.cpp!!!	setTimeLapseConfig(in fps : double, in captureFps : double) : Status
    return Status::fromStatusT(mBase->setTimeLapseConfig(
            fps, captureFps));
!!!1456517.cpp!!!	setStartTimeUs(in startTimeUs : int64_t) : Status
    return Status::fromStatusT(mBase->setStartTimeUs(startTimeUs));
!!!1456645.cpp!!!	setStopTimeUs(in stopTimeUs : int64_t) : Status
    return Status::fromStatusT(mBase->setStopTimeUs(stopTimeUs));
!!!1456773.cpp!!!	setColorAspects(in aspects : int32_t) : Status
    return Status::fromStatusT(mBase->setColorAspects(aspects));
!!!1456901.cpp!!!	setTimeOffsetUs(in timeOffsetsUs : int64_t) : Status
    return Status::fromStatusT(mBase->setTimeOffsetUs(timeOffsetsUs));
!!!1457029.cpp!!!	signalEndOfInputStream() : Status
    return Status::fromStatusT(mBase->signalEndOfInputStream());
