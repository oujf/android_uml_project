class DozeFactory
!!!3187973.java!!!	assembleMachine(inout dozeService : DozeService) : DozeMachine
        Context context = dozeService;
        SensorManager sensorManager = context.getSystemService(SensorManager.class);
        AlarmManager alarmManager = context.getSystemService(AlarmManager.class);

        DozeHost host = getHost(dozeService);
        AmbientDisplayConfiguration config = new AmbientDisplayConfiguration(context);
        DozeParameters params = new DozeParameters(context);
        Handler handler = new Handler();
        WakeLock wakeLock = WakeLock.createPartial(context, "Doze");

        DozeMachine machine = new DozeMachine(
                DozeScreenStatePreventingAdapter.wrapIfNeeded(dozeService, params),
                config,
                wakeLock);
        machine.setParts(new DozeMachine.Part[]{
                createDozeTriggers(context, sensorManager, host, config, params, handler, wakeLock,
                        machine),
                createDozeUi(context, host, wakeLock, machine, handler, alarmManager),
        });

        return machine;
!!!3188101.java!!!	createDozeTriggers(inout context : Context, inout sensorManager : SensorManager, inout host : DozeHost, inout config : AmbientDisplayConfiguration, inout params : DozeParameters, inout handler : Handler, inout wakeLock : WakeLock, inout machine : DozeMachine) : DozeTriggers
        boolean allowPulseTriggers = true;
        return new DozeTriggers(context, machine, host, config, params,
                sensorManager, handler, wakeLock, allowPulseTriggers);
!!!3188229.java!!!	createDozeUi(inout context : Context, inout host : DozeHost, inout wakeLock : WakeLock, inout machine : DozeMachine, inout handler : Handler, inout alarmManager : AlarmManager) : DozeMachine::Part
        return new DozeUi(context, alarmManager, machine, wakeLock, host, handler);
!!!3188357.java!!!	getHost(inout service : DozeService) : DozeHost
        Application appCandidate = service.getApplication();
        final SystemUIApplication app = (SystemUIApplication) appCandidate;
        return app.getComponent(DozeHost.class);
