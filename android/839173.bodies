class ViewPool
!!!3583237.java!!!	ViewPool(inout context : Context, inout viewCreator : ViewPool::ViewPoolConsumer)
        mContext = context;
        mViewCreator = viewCreator;
!!!3583365.java!!!	returnViewToPool(inout v : V) : void
        mViewCreator.onReturnViewToPool(v);
        mPool.push(v);
!!!3583493.java!!!	pickUpViewFromPool(inout preferredData : T, inout prepareData : T) : V
        V v = null;
        boolean isNewView = false;
        if (mPool.isEmpty()) {
            v = mViewCreator.createView(mContext);
            isNewView = true;
        } else {
            // Try and find a preferred view
            Iterator<V> iter = mPool.iterator();
            while (iter.hasNext()) {
                V vpv = iter.next();
                if (mViewCreator.hasPreferredData(vpv, preferredData)) {
                    v = vpv;
                    iter.remove();
                    break;
                }
            }
            // Otherwise, just grab the first view
            if (v == null) {
                v = mPool.pop();
            }
        }
        mViewCreator.onPickUpViewFromPool(v, prepareData, isNewView);
        return v;
!!!3583621.java!!!	getViews() : List<V>
        return mPool;
