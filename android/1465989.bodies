class CursorAdapter
!!!9344773.java!!!	CursorAdapter(inout context : Context, inout c : Cursor)
        init(context, c, FLAG_AUTO_REQUERY);
!!!9344901.java!!!	CursorAdapter(inout context : Context, inout c : Cursor, inout autoRequery : boolean)
        init(context, c, autoRequery ? FLAG_AUTO_REQUERY : FLAG_REGISTER_CONTENT_OBSERVER);
!!!9345029.java!!!	CursorAdapter(inout context : Context, inout c : Cursor, in flags : int)
        init(context, c, flags);
!!!9345157.java!!!	init(inout context : Context, inout c : Cursor, inout autoRequery : boolean) : void
        init(context, c, autoRequery ? FLAG_AUTO_REQUERY : FLAG_REGISTER_CONTENT_OBSERVER);
!!!9345285.java!!!	init(inout context : Context, inout c : Cursor, in flags : int) : void
        if ((flags & FLAG_AUTO_REQUERY) == FLAG_AUTO_REQUERY) {
            flags |= FLAG_REGISTER_CONTENT_OBSERVER;
            mAutoRequery = true;
        } else {
            mAutoRequery = false;
        }
        boolean cursorPresent = c != null;
        mCursor = c;
        mDataValid = cursorPresent;
        mContext = context;
        mRowIDColumn = cursorPresent ? c.getColumnIndexOrThrow("_id") : -1;
        if ((flags & FLAG_REGISTER_CONTENT_OBSERVER) == FLAG_REGISTER_CONTENT_OBSERVER) {
            mChangeObserver = new ChangeObserver();
            mDataSetObserver = new MyDataSetObserver();
        } else {
            mChangeObserver = null;
            mDataSetObserver = null;
        }

        if (cursorPresent) {
            if (mChangeObserver != null) c.registerContentObserver(mChangeObserver);
            if (mDataSetObserver != null) c.registerDataSetObserver(mDataSetObserver);
        }
!!!9345413.java!!!	setDropDownViewTheme(inout theme : Resources::Theme) : void
        if (theme == null) {
            mDropDownContext = null;
        } else if (theme == mContext.getTheme()) {
            mDropDownContext = mContext;
        } else {
            mDropDownContext = new ContextThemeWrapper(mContext, theme);
        }
!!!9345541.java!!!	getDropDownViewTheme() : Resources::Theme
        return mDropDownContext == null ? null : mDropDownContext.getTheme();
!!!9345669.java!!!	getCursor() : Cursor
        return mCursor;
!!!9345797.java!!!	getCount() : int
        if (mDataValid && mCursor != null) {
            return mCursor.getCount();
        } else {
            return 0;
        }
!!!9345925.java!!!	getItem(in position : int) : Object
        if (mDataValid && mCursor != null) {
            mCursor.moveToPosition(position);
            return mCursor;
        } else {
            return null;
        }
!!!9346053.java!!!	getItemId(in position : int) : long
        if (mDataValid && mCursor != null) {
            if (mCursor.moveToPosition(position)) {
                return mCursor.getLong(mRowIDColumn);
            } else {
                return 0;
            }
        } else {
            return 0;
        }
!!!9346181.java!!!	hasStableIds() : boolean
        return true;
!!!9346309.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        if (!mDataValid) {
            throw new IllegalStateException("this should only be called when the cursor is valid");
        }
        if (!mCursor.moveToPosition(position)) {
            throw new IllegalStateException("couldn't move cursor to position " + position);
        }
        View v;
        if (convertView == null) {
            v = newView(mContext, mCursor, parent);
        } else {
            v = convertView;
        }
        bindView(v, mContext, mCursor);
        return v;
!!!9346437.java!!!	getDropDownView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        if (mDataValid) {
            final Context context = mDropDownContext == null ? mContext : mDropDownContext;
            mCursor.moveToPosition(position);
            final View v;
            if (convertView == null) {
                v = newDropDownView(context, mCursor, parent);
            } else {
                v = convertView;
            }
            bindView(v, context, mCursor);
            return v;
        } else {
            return null;
        }
!!!9346693.java!!!	newDropDownView(inout context : Context, inout cursor : Cursor, inout parent : ViewGroup) : View
        return newView(context, cursor, parent);
!!!9346949.java!!!	changeCursor(inout cursor : Cursor) : void
        Cursor old = swapCursor(cursor);
        if (old != null) {
            old.close();
        }
!!!9347077.java!!!	swapCursor(inout newCursor : Cursor) : Cursor
        if (newCursor == mCursor) {
            return null;
        }
        Cursor oldCursor = mCursor;
        if (oldCursor != null) {
            if (mChangeObserver != null) oldCursor.unregisterContentObserver(mChangeObserver);
            if (mDataSetObserver != null) oldCursor.unregisterDataSetObserver(mDataSetObserver);
        }
        mCursor = newCursor;
        if (newCursor != null) {
            if (mChangeObserver != null) newCursor.registerContentObserver(mChangeObserver);
            if (mDataSetObserver != null) newCursor.registerDataSetObserver(mDataSetObserver);
            mRowIDColumn = newCursor.getColumnIndexOrThrow("_id");
            mDataValid = true;
            // notify the observers about the new cursor
            notifyDataSetChanged();
        } else {
            mRowIDColumn = -1;
            mDataValid = false;
            // notify the observers about the lack of a data set
            notifyDataSetInvalidated();
        }
        return oldCursor;
!!!9347205.java!!!	convertToString(inout cursor : Cursor) : CharSequence
        return cursor == null ? "" : cursor.toString();
!!!9347333.java!!!	runQueryOnBackgroundThread(inout constraint : CharSequence) : Cursor
        if (mFilterQueryProvider != null) {
            return mFilterQueryProvider.runQuery(constraint);
        }

        return mCursor;
!!!9347461.java!!!	getFilter() : Filter
        if (mCursorFilter == null) {
            mCursorFilter = new CursorFilter(this);
        }
        return mCursorFilter;
!!!9347589.java!!!	getFilterQueryProvider() : FilterQueryProvider
        return mFilterQueryProvider;
!!!9347717.java!!!	setFilterQueryProvider(inout filterQueryProvider : FilterQueryProvider) : void
        mFilterQueryProvider = filterQueryProvider;
!!!9347845.java!!!	onContentChanged() : void
        if (mAutoRequery && mCursor != null && !mCursor.isClosed()) {
            if (false) Log.v("Cursor", "Auto requerying " + mCursor + " due to update");
            mDataValid = mCursor.requery();
        }
