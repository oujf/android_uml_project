class MemoryInfo
!!!7431173.java!!!	getTotalPss() : int
            return dalvikPss + nativePss + otherPss + getTotalSwappedOutPss();
!!!7431301.java!!!	getTotalUss() : int
            return dalvikPrivateClean + dalvikPrivateDirty
                    + nativePrivateClean + nativePrivateDirty
                    + otherPrivateClean + otherPrivateDirty;
!!!7431429.java!!!	getTotalSwappablePss() : int
            return dalvikSwappablePss + nativeSwappablePss + otherSwappablePss;
!!!7431557.java!!!	getTotalPrivateDirty() : int
            return dalvikPrivateDirty + nativePrivateDirty + otherPrivateDirty;
!!!7431685.java!!!	getTotalSharedDirty() : int
            return dalvikSharedDirty + nativeSharedDirty + otherSharedDirty;
!!!7431813.java!!!	getTotalPrivateClean() : int
            return dalvikPrivateClean + nativePrivateClean + otherPrivateClean;
!!!7431941.java!!!	getTotalSharedClean() : int
            return dalvikSharedClean + nativeSharedClean + otherSharedClean;
!!!7432069.java!!!	getTotalSwappedOut() : int
            return dalvikSwappedOut + nativeSwappedOut + otherSwappedOut;
!!!7432197.java!!!	getTotalSwappedOutPss() : int
            return dalvikSwappedOutPss + nativeSwappedOutPss + otherSwappedOutPss;
!!!7432325.java!!!	getOtherPss(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetPss];
!!!7432453.java!!!	getOtherSwappablePss(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetSwappablePss];
!!!7432581.java!!!	getOtherPrivateDirty(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetPrivateDirty];
!!!7432709.java!!!	getOtherSharedDirty(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetSharedDirty];
!!!7432837.java!!!	getOtherPrivateClean(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetPrivateClean];
!!!7432965.java!!!	getOtherPrivate(in which : int) : int
          return getOtherPrivateClean(which) + getOtherPrivateDirty(which);
!!!7433093.java!!!	getOtherSharedClean(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetSharedClean];
!!!7433221.java!!!	getOtherSwappedOut(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetSwappedOut];
!!!7433349.java!!!	getOtherSwappedOutPss(in which : int) : int
            return otherStats[which*NUM_CATEGORIES + offsetSwappedOutPss];
!!!7433477.java!!!	getOtherLabel(in which : int) : String
            switch (which) {
                case OTHER_DALVIK_OTHER: return "Dalvik Other";
                case OTHER_STACK: return "Stack";
                case OTHER_CURSOR: return "Cursor";
                case OTHER_ASHMEM: return "Ashmem";
                case OTHER_GL_DEV: return "Gfx dev";
                case OTHER_UNKNOWN_DEV: return "Other dev";
                case OTHER_SO: return ".so mmap";
                case OTHER_JAR: return ".jar mmap";
                case OTHER_APK: return ".apk mmap";
                case OTHER_TTF: return ".ttf mmap";
                case OTHER_DEX: return ".dex mmap";
                case OTHER_OAT: return ".oat mmap";
                case OTHER_ART: return ".art mmap";
                case OTHER_UNKNOWN_MAP: return "Other mmap";
                case OTHER_GRAPHICS: return "EGL mtrack";
                case OTHER_GL: return "GL mtrack";
                case OTHER_OTHER_MEMTRACK: return "Other mtrack";
                case OTHER_DALVIK_NORMAL: return ".Heap";
                case OTHER_DALVIK_LARGE: return ".LOS";
                case OTHER_DALVIK_LINEARALLOC: return ".LinearAlloc";
                case OTHER_DALVIK_ACCOUNTING: return ".GC";
                case OTHER_DALVIK_CODE_CACHE: return ".JITCache";
                case OTHER_DALVIK_ZYGOTE: return ".Zygote";
                case OTHER_DALVIK_NON_MOVING: return ".NonMoving";
                case OTHER_DALVIK_INDIRECT_REFERENCE_TABLE: return ".IndirectRef";
                default: return "????";
            }
!!!7433605.java!!!	getMemoryStat(in statName : String) : String
            switch(statName) {
                case "summary.java-heap":
                    return Integer.toString(getSummaryJavaHeap());
                case "summary.native-heap":
                    return Integer.toString(getSummaryNativeHeap());
                case "summary.code":
                    return Integer.toString(getSummaryCode());
                case "summary.stack":
                    return Integer.toString(getSummaryStack());
                case "summary.graphics":
                    return Integer.toString(getSummaryGraphics());
                case "summary.private-other":
                    return Integer.toString(getSummaryPrivateOther());
                case "summary.system":
                    return Integer.toString(getSummarySystem());
                case "summary.total-pss":
                    return Integer.toString(getSummaryTotalPss());
                case "summary.total-swap":
                    return Integer.toString(getSummaryTotalSwap());
                default:
                    return null;
            }
!!!7433733.java!!!	getMemoryStats() : Map<String, String>
            Map<String, String> stats = new HashMap<String, String>();
            stats.put("summary.java-heap", Integer.toString(getSummaryJavaHeap()));
            stats.put("summary.native-heap", Integer.toString(getSummaryNativeHeap()));
            stats.put("summary.code", Integer.toString(getSummaryCode()));
            stats.put("summary.stack", Integer.toString(getSummaryStack()));
            stats.put("summary.graphics", Integer.toString(getSummaryGraphics()));
            stats.put("summary.private-other", Integer.toString(getSummaryPrivateOther()));
            stats.put("summary.system", Integer.toString(getSummarySystem()));
            stats.put("summary.total-pss", Integer.toString(getSummaryTotalPss()));
            stats.put("summary.total-swap", Integer.toString(getSummaryTotalSwap()));
            return stats;
!!!7433861.java!!!	getSummaryJavaHeap() : int
            return dalvikPrivateDirty + getOtherPrivate(OTHER_ART);
!!!7433989.java!!!	getSummaryNativeHeap() : int
            return nativePrivateDirty;
!!!7434117.java!!!	getSummaryCode() : int
            return getOtherPrivate(OTHER_SO)
              + getOtherPrivate(OTHER_JAR)
              + getOtherPrivate(OTHER_APK)
              + getOtherPrivate(OTHER_TTF)
              + getOtherPrivate(OTHER_DEX)
              + getOtherPrivate(OTHER_OAT);
!!!7434245.java!!!	getSummaryStack() : int
            return getOtherPrivateDirty(OTHER_STACK);
!!!7434373.java!!!	getSummaryGraphics() : int
            return getOtherPrivate(OTHER_GL_DEV)
              + getOtherPrivate(OTHER_GRAPHICS)
              + getOtherPrivate(OTHER_GL);
!!!7434501.java!!!	getSummaryPrivateOther() : int
            return getTotalPrivateClean()
              + getTotalPrivateDirty()
              - getSummaryJavaHeap()
              - getSummaryNativeHeap()
              - getSummaryCode()
              - getSummaryStack()
              - getSummaryGraphics();
!!!7434629.java!!!	getSummarySystem() : int
            return getTotalPss()
              - getTotalPrivateClean()
              - getTotalPrivateDirty();
!!!7434757.java!!!	getSummaryTotalPss() : int
            return getTotalPss();
!!!7434885.java!!!	getSummaryTotalSwap() : int
            return getTotalSwappedOut();
!!!7435013.java!!!	getSummaryTotalSwapPss() : int
            return getTotalSwappedOutPss();
!!!7435141.java!!!	hasSwappedOutPss() : boolean
            return hasSwappedOutPss;
!!!7435269.java!!!	describeContents() : int
            return 0;
!!!7435397.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
            dest.writeInt(dalvikPss);
            dest.writeInt(dalvikSwappablePss);
            dest.writeInt(dalvikPrivateDirty);
            dest.writeInt(dalvikSharedDirty);
            dest.writeInt(dalvikPrivateClean);
            dest.writeInt(dalvikSharedClean);
            dest.writeInt(dalvikSwappedOut);
            dest.writeInt(nativePss);
            dest.writeInt(nativeSwappablePss);
            dest.writeInt(nativePrivateDirty);
            dest.writeInt(nativeSharedDirty);
            dest.writeInt(nativePrivateClean);
            dest.writeInt(nativeSharedClean);
            dest.writeInt(nativeSwappedOut);
            dest.writeInt(otherPss);
            dest.writeInt(otherSwappablePss);
            dest.writeInt(otherPrivateDirty);
            dest.writeInt(otherSharedDirty);
            dest.writeInt(otherPrivateClean);
            dest.writeInt(otherSharedClean);
            dest.writeInt(otherSwappedOut);
            dest.writeInt(hasSwappedOutPss ? 1 : 0);
            dest.writeInt(otherSwappedOutPss);
            dest.writeIntArray(otherStats);
!!!7435525.java!!!	readFromParcel(inout source : Parcel) : void
            dalvikPss = source.readInt();
            dalvikSwappablePss = source.readInt();
            dalvikPrivateDirty = source.readInt();
            dalvikSharedDirty = source.readInt();
            dalvikPrivateClean = source.readInt();
            dalvikSharedClean = source.readInt();
            dalvikSwappedOut = source.readInt();
            nativePss = source.readInt();
            nativeSwappablePss = source.readInt();
            nativePrivateDirty = source.readInt();
            nativeSharedDirty = source.readInt();
            nativePrivateClean = source.readInt();
            nativeSharedClean = source.readInt();
            nativeSwappedOut = source.readInt();
            otherPss = source.readInt();
            otherSwappablePss = source.readInt();
            otherPrivateDirty = source.readInt();
            otherSharedDirty = source.readInt();
            otherPrivateClean = source.readInt();
            otherSharedClean = source.readInt();
            otherSwappedOut = source.readInt();
            hasSwappedOutPss = source.readInt() != 0;
            otherSwappedOutPss = source.readInt();
            otherStats = source.createIntArray();
!!!7435653.java!!!	MemoryInfo(inout source : Parcel)
            readFromParcel(source);
