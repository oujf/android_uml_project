class RadioMetadata
!!!6918917.java!!!	RadioMetadata()
        mBundle = new Bundle();
!!!6919045.java!!!	RadioMetadata(inout bundle : Bundle)
        mBundle = new Bundle(bundle);
!!!6919173.java!!!	RadioMetadata(inout in : Parcel)
        mBundle = in.readBundle();
!!!6919301.java!!!	containsKey(in key : String) : boolean
        return mBundle.containsKey(key);
!!!6919429.java!!!	getString(in key : String) : String
        return mBundle.getString(key);
!!!6919557.java!!!	getInt(in key : String) : int
        return mBundle.getInt(key, 0);
!!!6919685.java!!!	getBitmap(in key : String) : Bitmap
        Bitmap bmp = null;
        try {
            bmp = mBundle.getParcelable(key);
        } catch (Exception e) {
            // ignore, value was not a bitmap
            Log.w(TAG, "Failed to retrieve a key as Bitmap.", e);
        }
        return bmp;
!!!6919813.java!!!	getClock(in key : String) : RadioMetadata::Clock
        Clock clock = null;
        try {
            clock = mBundle.getParcelable(key);
        } catch (Exception e) {
            // ignore, value was not a clock.
            Log.w(TAG, "Failed to retrieve a key as Clock.", e);
        }
        return clock;
!!!6919941.java!!!	describeContents() : int
        return 0;
!!!6920069.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeBundle(mBundle);
!!!6920197.java!!!	size() : int
        return mBundle.size();
!!!6920325.java!!!	keySet() : Set<String>
        return mBundle.keySet();
!!!6920453.java!!!	getKeyFromNativeKey(in nativeKey : int) : String
        return NATIVE_KEY_MAPPING.get(nativeKey, null);
!!!6921733.java!!!	putIntFromNative(in nativeKey : int, in value : int) : int
        String key = getKeyFromNativeKey(nativeKey);
        if (!METADATA_KEYS_TYPE.containsKey(key) ||
                METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_INT) {
            return -1;
        }
        mBundle.putInt(key, value);
        return 0;
!!!6921861.java!!!	putStringFromNative(in nativeKey : int, in value : String) : int
        String key = getKeyFromNativeKey(nativeKey);
        if (!METADATA_KEYS_TYPE.containsKey(key) ||
                METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_TEXT) {
            return -1;
        }
        mBundle.putString(key, value);
        return 0;
!!!6921989.java!!!	putBitmapFromNative(in nativeKey : int, inout value : byte [[]]) : int
        String key = getKeyFromNativeKey(nativeKey);
        if (!METADATA_KEYS_TYPE.containsKey(key) ||
                METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_BITMAP) {
            return -1;
        }
        Bitmap bmp = null;
        try {
            bmp = BitmapFactory.decodeByteArray(value, 0, value.length);
            if (bmp != null) {
                mBundle.putParcelable(key, bmp);
                return 0;
            }
        } catch (Exception e) {
        }
        return -1;
!!!6922117.java!!!	putClockFromNative(in nativeKey : int, in utcEpochSeconds : long, in timezoneOffsetInMinutes : int) : int
        Log.d(TAG, "putClockFromNative()");
        String key = getKeyFromNativeKey(nativeKey);
        if (!METADATA_KEYS_TYPE.containsKey(key) ||
                METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_CLOCK) {
              return -1;
        }
        mBundle.putParcelable(key, new RadioMetadata.Clock(
            utcEpochSeconds, timezoneOffsetInMinutes));
        return 0;
