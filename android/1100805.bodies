class Prompt
!!!5739525.java!!!	Prompt(inout voicePrompts : CharSequence [[]], inout visualPrompt : CharSequence)
            if (voicePrompts == null) {
                throw new NullPointerException("voicePrompts must not be null");
            }
            if (voicePrompts.length == 0) {
                throw new IllegalArgumentException("voicePrompts must not be empty");
            }
            if (visualPrompt == null) {
                throw new NullPointerException("visualPrompt must not be null");
            }
            this.mVoicePrompts = voicePrompts;
            this.mVisualPrompt = visualPrompt;
!!!5739653.java!!!	Prompt(inout prompt : CharSequence)
            this.mVoicePrompts = new CharSequence[] { prompt };
            this.mVisualPrompt = prompt;
!!!5739781.java!!!	getVoicePromptAt(in index : int) : CharSequence
            return mVoicePrompts[index];
!!!5739909.java!!!	countVoicePrompts() : int
            return mVoicePrompts.length;
!!!5740037.java!!!	getVisualPrompt() : CharSequence
            return mVisualPrompt;
!!!5740165.java!!!	toString() : String
            StringBuilder sb = new StringBuilder(128);
            DebugUtils.buildShortClassTag(this, sb);
            if (mVisualPrompt != null && mVoicePrompts != null && mVoicePrompts.length == 1
                && mVisualPrompt.equals(mVoicePrompts[0])) {
                sb.append(" ");
                sb.append(mVisualPrompt);
            } else {
                if (mVisualPrompt != null) {
                    sb.append(" visual="); sb.append(mVisualPrompt);
                }
                if (mVoicePrompts != null) {
                    sb.append(", voice=");
                    for (int i=0; i<mVoicePrompts.length; i++) {
                        if (i > 0) sb.append(" | ");
                        sb.append(mVoicePrompts[i]);
                    }
                }
            }
            sb.append('}');
            return sb.toString();
!!!5740293.java!!!	Prompt(inout in : Parcel)
            mVoicePrompts = in.readCharSequenceArray();
            mVisualPrompt = in.readCharSequence();
!!!5740421.java!!!	describeContents() : int
            return 0;
!!!5740549.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
            dest.writeCharSequenceArray(mVoicePrompts);
            dest.writeCharSequence(mVisualPrompt);
