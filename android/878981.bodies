class AnimationFilter
!!!4197381.java!!!	animateAlpha() : AnimationFilter
        animateAlpha = true;
        return this;
!!!4197509.java!!!	animateScale() : AnimationFilter
        animate(View.SCALE_X);
        animate(View.SCALE_Y);
        return this;
!!!4197637.java!!!	animateX() : AnimationFilter
        animateX = true;
        return this;
!!!4197765.java!!!	animateY() : AnimationFilter
        animateY = true;
        return this;
!!!4197893.java!!!	hasDelays() : AnimationFilter
        hasDelays = true;
        return this;
!!!4198021.java!!!	animateZ() : AnimationFilter
        animateZ = true;
        return this;
!!!4198149.java!!!	animateHeight() : AnimationFilter
        animateHeight = true;
        return this;
!!!4198277.java!!!	animateTopInset() : AnimationFilter
        animateTopInset = true;
        return this;
!!!4198405.java!!!	animateDimmed() : AnimationFilter
        animateDimmed = true;
        return this;
!!!4198533.java!!!	animateDark() : AnimationFilter
        animateDark = true;
        return this;
!!!4198661.java!!!	animateHideSensitive() : AnimationFilter
        animateHideSensitive = true;
        return this;
!!!4198789.java!!!	animateShadowAlpha() : AnimationFilter
        animateShadowAlpha = true;
        return this;
!!!4198917.java!!!	animateY(inout view : View) : AnimationFilter
        animateYViews.add(view);
        return this;
!!!4199045.java!!!	shouldAnimateY(inout view : View) : boolean
        return animateY || animateYViews.contains(view);
!!!4199173.java!!!	applyCombination(inout events : ArrayList<NotificationStackScrollLayout.AnimationEvent>) : void
        reset();
        int size = events.size();
        for (int i = 0; i < size; i++) {
            NotificationStackScrollLayout.AnimationEvent ev = events.get(i);
            combineFilter(events.get(i).filter);
            if (ev.animationType ==
                    NotificationStackScrollLayout.AnimationEvent.ANIMATION_TYPE_GO_TO_FULL_SHADE) {
                hasGoToFullShadeEvent = true;
            }
            if (ev.animationType == NotificationStackScrollLayout.AnimationEvent
                    .ANIMATION_TYPE_HEADS_UP_DISAPPEAR_CLICK) {
                hasHeadsUpDisappearClickEvent = true;
            }
        }
!!!4199301.java!!!	combineFilter(inout filter : AnimationFilter) : void
        animateAlpha |= filter.animateAlpha;
        animateX |= filter.animateX;
        animateY |= filter.animateY;
        animateYViews.addAll(filter.animateYViews);
        animateZ |= filter.animateZ;
        animateHeight |= filter.animateHeight;
        animateTopInset |= filter.animateTopInset;
        animateDimmed |= filter.animateDimmed;
        animateDark |= filter.animateDark;
        animateHideSensitive |= filter.animateHideSensitive;
        animateShadowAlpha |= filter.animateShadowAlpha;
        hasDelays |= filter.hasDelays;
        mAnimatedProperties.addAll(filter.mAnimatedProperties);
!!!4199429.java!!!	reset() : void
        animateAlpha = false;
        animateX = false;
        animateY = false;
        animateYViews.clear();
        animateZ = false;
        animateHeight = false;
        animateShadowAlpha = false;
        animateTopInset = false;
        animateDimmed = false;
        animateDark = false;
        animateHideSensitive = false;
        hasDelays = false;
        hasGoToFullShadeEvent = false;
        hasHeadsUpDisappearClickEvent = false;
        mAnimatedProperties.clear();
!!!4199557.java!!!	animate(inout property : Property) : AnimationFilter
        mAnimatedProperties.add(property);
        return this;
!!!4199685.java!!!	shouldAnimateProperty(inout property : Property) : boolean
        // TODO: migrate all existing animators to properties
        return mAnimatedProperties.contains(property);
