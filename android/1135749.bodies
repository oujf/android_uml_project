class CompanionDeviceManager
!!!6082693.java!!!	CompanionDeviceManager(inout service : ICompanionDeviceManager, inout context : Context)
        mService = service;
        mContext = context;
!!!6082821.java!!!	associate(inout request : AssociationRequest, inout callback : CompanionDeviceManager::Callback, inout handler : Handler) : void
        if (!checkFeaturePresent()) {
            return;
        }
        checkNotNull(request, "Request cannot be null");
        checkNotNull(callback, "Callback cannot be null");
        try {
            mService.associate(
                    request,
                    new CallbackProxy(request, callback, Handler.mainIfNull(handler)),
                    getCallingPackage());
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!6082949.java!!!	getAssociations() : List<String>
        if (!checkFeaturePresent()) {
            return Collections.emptyList();
        }
        try {
            return mService.getAssociations(getCallingPackage(), mContext.getUserId());
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!6083077.java!!!	disassociate(in deviceMacAddress : String) : void
        if (!checkFeaturePresent()) {
            return;
        }
        try {
            mService.disassociate(deviceMacAddress, getCallingPackage());
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!6083205.java!!!	requestNotificationAccess(inout component : ComponentName) : void
        if (!checkFeaturePresent()) {
            return;
        }
        try {
            IntentSender intentSender = mService.requestNotificationAccess(component)
                    .getIntentSender();
            mContext.startIntentSender(intentSender, null, 0, 0, 0);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        } catch (IntentSender.SendIntentException e) {
            throw new RuntimeException(e);
        }
!!!6083333.java!!!	hasNotificationAccess(inout component : ComponentName) : boolean
        if (!checkFeaturePresent()) {
            return false;
        }
        try {
            return mService.hasNotificationAccess(component);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!6083461.java!!!	checkFeaturePresent() : boolean
        boolean featurePresent = mService != null;
        if (!featurePresent && DEBUG) {
            Log.d(LOG_TAG, "Feature " + PackageManager.FEATURE_COMPANION_DEVICE_SETUP
                    + " not available");
        }
        return featurePresent;
!!!6083589.java!!!	getActivity() : Activity
        return (Activity) mContext;
!!!6083717.java!!!	getCallingPackage() : String
        return mContext.getPackageName();
