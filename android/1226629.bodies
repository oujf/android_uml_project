class UsbDeviceConnection
!!!6947333.java!!!	UsbDeviceConnection(inout device : UsbDevice)
        mDevice = device;
!!!6947461.java!!!	open(in name : String, inout pfd : ParcelFileDescriptor, inout context : Context) : boolean
        mContext = context.getApplicationContext();
        boolean wasOpened = native_open(name, pfd.getFileDescriptor());

        if (wasOpened) {
            mCloseGuard.open("close");
        }

        return wasOpened;
!!!6947589.java!!!	getContext() : Context
        return mContext;
!!!6947717.java!!!	close() : void
        if (mNativeContext != 0) {
            native_close();
            mCloseGuard.close();
        }
!!!6947845.java!!!	getFileDescriptor() : int
        return native_get_fd();
!!!6947973.java!!!	getRawDescriptors() : byte
        return native_get_desc();
!!!6948101.java!!!	claimInterface(inout intf : UsbInterface, inout force : boolean) : boolean
        return native_claim_interface(intf.getId(), force);
!!!6948229.java!!!	releaseInterface(inout intf : UsbInterface) : boolean
        return native_release_interface(intf.getId());
!!!6948357.java!!!	setInterface(inout intf : UsbInterface) : boolean
        return native_set_interface(intf.getId(), intf.getAlternateSetting());
!!!6948485.java!!!	setConfiguration(inout configuration : UsbConfiguration) : boolean
        return native_set_configuration(configuration.getId());
!!!6948613.java!!!	controlTransfer(in requestType : int, in request : int, in value : int, in index : int, inout buffer : byte [[]], in length : int, in timeout : int) : int
        return controlTransfer(requestType, request, value, index, buffer, 0, length, timeout);
!!!6948741.java!!!	controlTransfer(in requestType : int, in request : int, in value : int, in index : int, inout buffer : byte [[]], in offset : int, in length : int, in timeout : int) : int
        checkBounds(buffer, offset, length);
        return native_control_request(requestType, request, value, index,
                buffer, offset, length, timeout);
!!!6948869.java!!!	bulkTransfer(inout endpoint : UsbEndpoint, inout buffer : byte [[]], in length : int, in timeout : int) : int
        return bulkTransfer(endpoint, buffer, 0, length, timeout);
!!!6948997.java!!!	bulkTransfer(inout endpoint : UsbEndpoint, inout buffer : byte [[]], in offset : int, in length : int, in timeout : int) : int
        checkBounds(buffer, offset, length);
        return native_bulk_request(endpoint.getAddress(), buffer, offset, length, timeout);
!!!6949125.java!!!	resetDevice() : boolean
        return native_reset_device();
!!!6949253.java!!!	requestWait() : UsbRequest
        UsbRequest request = null;
        try {
            // -1 is special value indicating infinite wait
            request = native_request_wait(-1);
        } catch (TimeoutException e) {
            // Does not happen, infinite timeout
        }

        if (request != null) {
            request.dequeue(
                    mContext.getApplicationInfo().targetSdkVersion >= Build.VERSION_CODES.O);
        }
        return request;
!!!6949381.java!!!	requestWait(in timeout : long) : UsbRequest
        timeout = Preconditions.checkArgumentNonnegative(timeout, "timeout");

        UsbRequest request = native_request_wait(timeout);
        if (request != null) {
            request.dequeue(true);
        }
        return request;
!!!6949509.java!!!	getSerial() : String
        return native_get_serial();
!!!6949637.java!!!	checkBounds(inout buffer : byte [[]], in start : int, in length : int) : void
        final int bufferLength = (buffer != null ? buffer.length : 0);
        if (length < 0 || start < 0 || start + length > bufferLength) {
            throw new IllegalArgumentException("Buffer start or length out of bounds.");
        }
!!!6949765.java!!!	finalize() : void
        try {
            mCloseGuard.warnIfOpen();
        } finally {
            super.finalize();
        }
