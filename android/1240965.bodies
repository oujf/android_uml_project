class DhcpResults
!!!7109765.java!!!	DhcpResults()
        super();
!!!7109893.java!!!	DhcpResults(inout source : StaticIpConfiguration)
        super(source);
!!!7110021.java!!!	DhcpResults(inout source : DhcpResults)
        super(source);

        if (source != null) {
            // All these are immutable, so no need to make copies.
            serverAddress = source.serverAddress;
            vendorInfo = source.vendorInfo;
            leaseDuration = source.leaseDuration;
            mtu = source.mtu;
        }
!!!7110149.java!!!	hasMeteredHint() : boolean
        if (vendorInfo != null) {
            return vendorInfo.contains("ANDROID_METERED");
        } else {
            return false;
        }
!!!7110277.java!!!	clear() : void
        super.clear();
        vendorInfo = null;
        leaseDuration = 0;
        mtu = 0;
!!!7110405.java!!!	toString() : String
        StringBuffer str = new StringBuffer(super.toString());

        str.append(" DHCP server ").append(serverAddress);
        str.append(" Vendor info ").append(vendorInfo);
        str.append(" lease ").append(leaseDuration).append(" seconds");
        if (mtu != 0) str.append(" MTU ").append(mtu);

        return str.toString();
!!!7110533.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) return true;

        if (!(obj instanceof DhcpResults)) return false;

        DhcpResults target = (DhcpResults)obj;

        return super.equals((StaticIpConfiguration) obj) &&
                Objects.equals(serverAddress, target.serverAddress) &&
                Objects.equals(vendorInfo, target.vendorInfo) &&
                leaseDuration == target.leaseDuration &&
                mtu == target.mtu;
!!!7110661.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        super.writeToParcel(dest, flags);
        dest.writeInt(leaseDuration);
        dest.writeInt(mtu);
        NetworkUtils.parcelInetAddress(dest, serverAddress, flags);
        dest.writeString(vendorInfo);
!!!7110789.java!!!	readFromParcel(inout dhcpResults : DhcpResults, inout in : Parcel) : void
        StaticIpConfiguration.readFromParcel(dhcpResults, in);
        dhcpResults.leaseDuration = in.readInt();
        dhcpResults.mtu = in.readInt();
        dhcpResults.serverAddress = (Inet4Address) NetworkUtils.unparcelInetAddress(in);
        dhcpResults.vendorInfo = in.readString();
!!!7110917.java!!!	setIpAddress(in addrString : String, in prefixLength : int) : boolean
        try {
            Inet4Address addr = (Inet4Address) NetworkUtils.numericToInetAddress(addrString);
            ipAddress = new LinkAddress(addr, prefixLength);
        } catch (IllegalArgumentException|ClassCastException e) {
            Log.e(TAG, "setIpAddress failed with addrString " + addrString + "/" + prefixLength);
            return true;
        }
        return false;
!!!7111045.java!!!	setGateway(in addrString : String) : boolean
        try {
            gateway = NetworkUtils.numericToInetAddress(addrString);
        } catch (IllegalArgumentException e) {
            Log.e(TAG, "setGateway failed with addrString " + addrString);
            return true;
        }
        return false;
!!!7111173.java!!!	addDns(in addrString : String) : boolean
        if (TextUtils.isEmpty(addrString) == false) {
            try {
                dnsServers.add(NetworkUtils.numericToInetAddress(addrString));
            } catch (IllegalArgumentException e) {
                Log.e(TAG, "addDns failed with addrString " + addrString);
                return true;
            }
        }
        return false;
!!!7111301.java!!!	setServerAddress(in addrString : String) : boolean
        try {
            serverAddress = (Inet4Address) NetworkUtils.numericToInetAddress(addrString);
        } catch (IllegalArgumentException|ClassCastException e) {
            Log.e(TAG, "setServerAddress failed with addrString " + addrString);
            return true;
        }
        return false;
!!!7111429.java!!!	setLeaseDuration(in duration : int) : void
        leaseDuration = duration;
!!!7111557.java!!!	setVendorInfo(in info : String) : void
        vendorInfo = info;
!!!7111685.java!!!	setDomains(in newDomains : String) : void
        domains = newDomains;
