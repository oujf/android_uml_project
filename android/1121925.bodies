class BluetoothCodecConfig
!!!5950341.java!!!	BluetoothCodecConfig(in codecType : int, in codecPriority : int, in sampleRate : int, in bitsPerSample : int, in channelMode : int, in codecSpecific1 : long, in codecSpecific2 : long, in codecSpecific3 : long, in codecSpecific4 : long)
        mCodecType = codecType;
        mCodecPriority = codecPriority;
        mSampleRate = sampleRate;
        mBitsPerSample = bitsPerSample;
        mChannelMode = channelMode;
        mCodecSpecific1 = codecSpecific1;
        mCodecSpecific2 = codecSpecific2;
        mCodecSpecific3 = codecSpecific3;
        mCodecSpecific4 = codecSpecific4;
!!!5950469.java!!!	equals(inout o : Object) : boolean
        if (o instanceof BluetoothCodecConfig) {
            BluetoothCodecConfig other = (BluetoothCodecConfig)o;
            return (other.mCodecType == mCodecType &&
                    other.mCodecPriority == mCodecPriority &&
                    other.mSampleRate == mSampleRate &&
                    other.mBitsPerSample == mBitsPerSample &&
                    other.mChannelMode == mChannelMode &&
                    other.mCodecSpecific1 == mCodecSpecific1 &&
                    other.mCodecSpecific2 == mCodecSpecific2 &&
                    other.mCodecSpecific3 == mCodecSpecific3 &&
                    other.mCodecSpecific4 == mCodecSpecific4);
        }
        return false;
!!!5950597.java!!!	hashCode() : int
        return Objects.hash(mCodecType, mCodecPriority, mSampleRate,
                            mBitsPerSample, mChannelMode, mCodecSpecific1,
                            mCodecSpecific2, mCodecSpecific3, mCodecSpecific4);
!!!5950725.java!!!	isValid() : boolean
        return (mSampleRate != SAMPLE_RATE_NONE) &&
            (mBitsPerSample != BITS_PER_SAMPLE_NONE) &&
            (mChannelMode != CHANNEL_MODE_NONE);
!!!5950853.java!!!	appendCapabilityToString(in prevStr : String, in capStr : String) : String
        if (prevStr == null) {
            return capStr;
        }
        return prevStr + "|" + capStr;
!!!5950981.java!!!	toString() : String
        String sampleRateStr = null;
        if (mSampleRate == SAMPLE_RATE_NONE) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "NONE");
        }
        if ((mSampleRate & SAMPLE_RATE_44100) != 0) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "44100");
        }
        if ((mSampleRate & SAMPLE_RATE_48000) != 0) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "48000");
        }
        if ((mSampleRate & SAMPLE_RATE_88200) != 0) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "88200");
        }
        if ((mSampleRate & SAMPLE_RATE_96000) != 0) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "96000");
        }
        if ((mSampleRate & SAMPLE_RATE_176400) != 0) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "176400");
        }
        if ((mSampleRate & SAMPLE_RATE_192000) != 0) {
            sampleRateStr = appendCapabilityToString(sampleRateStr, "192000");
        }

        String bitsPerSampleStr = null;
        if (mBitsPerSample == BITS_PER_SAMPLE_NONE) {
            bitsPerSampleStr = appendCapabilityToString(bitsPerSampleStr, "NONE");
        }
        if ((mBitsPerSample & BITS_PER_SAMPLE_16) != 0) {
            bitsPerSampleStr = appendCapabilityToString(bitsPerSampleStr, "16");
        }
        if ((mBitsPerSample & BITS_PER_SAMPLE_24) != 0) {
            bitsPerSampleStr = appendCapabilityToString(bitsPerSampleStr, "24");
        }
        if ((mBitsPerSample & BITS_PER_SAMPLE_32) != 0) {
            bitsPerSampleStr = appendCapabilityToString(bitsPerSampleStr, "32");
        }

        String channelModeStr = null;
        if (mChannelMode == CHANNEL_MODE_NONE) {
            channelModeStr = appendCapabilityToString(channelModeStr, "NONE");
        }
        if ((mChannelMode & CHANNEL_MODE_MONO) != 0) {
            channelModeStr = appendCapabilityToString(channelModeStr, "MONO");
        }
        if ((mChannelMode & CHANNEL_MODE_STEREO) != 0) {
            channelModeStr = appendCapabilityToString(channelModeStr, "STEREO");
        }

        return "{codecName:" + getCodecName() +
            ",mCodecType:" + mCodecType +
            ",mCodecPriority:" + mCodecPriority +
            ",mSampleRate:" + String.format("0x%x", mSampleRate) +
            "(" + sampleRateStr + ")" +
            ",mBitsPerSample:" + String.format("0x%x", mBitsPerSample) +
            "(" + bitsPerSampleStr + ")" +
            ",mChannelMode:" + String.format("0x%x", mChannelMode) +
            "(" + channelModeStr + ")" +
            ",mCodecSpecific1:" + mCodecSpecific1 +
            ",mCodecSpecific2:" + mCodecSpecific2 +
            ",mCodecSpecific3:" + mCodecSpecific3 +
            ",mCodecSpecific4:" + mCodecSpecific4 + "}";
!!!5951109.java!!!	describeContents() : int
        return 0;
!!!5951237.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeInt(mCodecType);
        out.writeInt(mCodecPriority);
        out.writeInt(mSampleRate);
        out.writeInt(mBitsPerSample);
        out.writeInt(mChannelMode);
        out.writeLong(mCodecSpecific1);
        out.writeLong(mCodecSpecific2);
        out.writeLong(mCodecSpecific3);
        out.writeLong(mCodecSpecific4);
!!!5951365.java!!!	getCodecName() : String
        switch (mCodecType) {
        case SOURCE_CODEC_TYPE_SBC:
            return "SBC";
        case SOURCE_CODEC_TYPE_AAC:
            return "AAC";
        case SOURCE_CODEC_TYPE_APTX:
            return "aptX";
        case SOURCE_CODEC_TYPE_APTX_HD:
            return "aptX HD";
        case SOURCE_CODEC_TYPE_LDAC:
            return "LDAC";
        case SOURCE_CODEC_TYPE_INVALID:
            return "INVALID CODEC";
        default:
            break;
        }
        return "UNKNOWN CODEC(" + mCodecType + ")";
!!!5951493.java!!!	getCodecType() : int
        return mCodecType;
!!!5951621.java!!!	isMandatoryCodec() : boolean
        return mCodecType == SOURCE_CODEC_TYPE_SBC;
!!!5951749.java!!!	getCodecPriority() : int
        return mCodecPriority;
!!!5951877.java!!!	setCodecPriority(in codecPriority : int) : void
        mCodecPriority = codecPriority;
!!!5952005.java!!!	getSampleRate() : int
        return mSampleRate;
!!!5952133.java!!!	getBitsPerSample() : int
        return mBitsPerSample;
!!!5952261.java!!!	getChannelMode() : int
        return mChannelMode;
!!!5952389.java!!!	getCodecSpecific1() : long
        return mCodecSpecific1;
!!!5952517.java!!!	getCodecSpecific2() : long
        return mCodecSpecific2;
!!!5952645.java!!!	getCodecSpecific3() : long
        return mCodecSpecific3;
!!!5952773.java!!!	getCodecSpecific4() : long
        return mCodecSpecific4;
!!!5952901.java!!!	sameAudioFeedingParameters(inout other : BluetoothCodecConfig) : boolean
        return (other != null && other.mSampleRate == mSampleRate &&
                other.mBitsPerSample == mBitsPerSample &&
                other.mChannelMode == mChannelMode);
