class Stub
!!!12992517.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!12992645.java!!!	asInterface(inout obj : android.os.IBinder) : INotificationManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.app.INotificationManager))) {
return ((android.app.INotificationManager)iin);
}
return new android.app.INotificationManager.Stub.Proxy(obj);
!!!12992773.java!!!	asBinder() : android.os.IBinder
return this;
!!!12992901.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_cancelAllNotifications:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
this.cancelAllNotifications(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_clearData:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
this.clearData(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_enqueueToast:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.app.ITransientNotification _arg1;
_arg1 = android.app.ITransientNotification.Stub.asInterface(data.readStrongBinder());
int _arg2;
_arg2 = data.readInt();
this.enqueueToast(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_cancelToast:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.app.ITransientNotification _arg1;
_arg1 = android.app.ITransientNotification.Stub.asInterface(data.readStrongBinder());
this.cancelToast(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_enqueueNotificationWithTag:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
java.lang.String _arg2;
_arg2 = data.readString();
int _arg3;
_arg3 = data.readInt();
android.app.Notification _arg4;
if ((0!=data.readInt())) {
_arg4 = android.app.Notification.CREATOR.createFromParcel(data);
}
else {
_arg4 = null;
}
int _arg5;
_arg5 = data.readInt();
this.enqueueNotificationWithTag(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5);
reply.writeNoException();
return true;
}
case TRANSACTION_cancelNotificationWithTag:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
int _arg2;
_arg2 = data.readInt();
int _arg3;
_arg3 = data.readInt();
this.cancelNotificationWithTag(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_setShowBadge:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
this.setShowBadge(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_canShowBadge:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _result = this.canShowBadge(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_setNotificationsEnabledForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
this.setNotificationsEnabledForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_areNotificationsEnabledForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _result = this.areNotificationsEnabledForPackage(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_areNotificationsEnabled:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.areNotificationsEnabled(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getPackageImportance:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _result = this.getPackageImportance(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_createNotificationChannelGroups:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.content.pm.ParceledListSlice _arg1;
if ((0!=data.readInt())) {
_arg1 = android.content.pm.ParceledListSlice.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.createNotificationChannelGroups(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_createNotificationChannels:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.content.pm.ParceledListSlice _arg1;
if ((0!=data.readInt())) {
_arg1 = android.content.pm.ParceledListSlice.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.createNotificationChannels(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_createNotificationChannelsForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
android.content.pm.ParceledListSlice _arg2;
if ((0!=data.readInt())) {
_arg2 = android.content.pm.ParceledListSlice.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
this.createNotificationChannelsForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_getNotificationChannelGroupsForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
android.content.pm.ParceledListSlice _result = this.getNotificationChannelGroupsForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNotificationChannelGroupForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
int _arg2;
_arg2 = data.readInt();
android.app.NotificationChannelGroup _result = this.getNotificationChannelGroupForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_updateNotificationChannelForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
android.app.NotificationChannel _arg2;
if ((0!=data.readInt())) {
_arg2 = android.app.NotificationChannel.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
this.updateNotificationChannelForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_getNotificationChannel:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
android.app.NotificationChannel _result = this.getNotificationChannel(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNotificationChannelForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
java.lang.String _arg2;
_arg2 = data.readString();
boolean _arg3;
_arg3 = (0!=data.readInt());
android.app.NotificationChannel _result = this.getNotificationChannelForPackage(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_deleteNotificationChannel:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.deleteNotificationChannel(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getNotificationChannels:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.content.pm.ParceledListSlice _result = this.getNotificationChannels(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNotificationChannelsForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
android.content.pm.ParceledListSlice _result = this.getNotificationChannelsForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNumNotificationChannelsForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _arg2;
_arg2 = (0!=data.readInt());
int _result = this.getNumNotificationChannelsForPackage(_arg0, _arg1, _arg2);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getDeletedChannelCount:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
int _result = this.getDeletedChannelCount(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_deleteNotificationChannelGroup:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.deleteNotificationChannelGroup(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getNotificationChannelGroups:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.content.pm.ParceledListSlice _result = this.getNotificationChannelGroups(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_onlyHasDefaultChannel:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
boolean _result = this.onlyHasDefaultChannel(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getActiveNotifications:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.service.notification.StatusBarNotification[] _result = this.getActiveNotifications(_arg0);
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getHistoricalNotifications:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
android.service.notification.StatusBarNotification[] _result = this.getHistoricalNotifications(_arg0, _arg1);
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_registerListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
android.content.ComponentName _arg1;
if ((0!=data.readInt())) {
_arg1 = android.content.ComponentName.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
int _arg2;
_arg2 = data.readInt();
this.registerListener(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_unregisterListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
this.unregisterListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_cancelNotificationFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
java.lang.String _arg2;
_arg2 = data.readString();
int _arg3;
_arg3 = data.readInt();
this.cancelNotificationFromListener(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_cancelNotificationsFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String[] _arg1;
_arg1 = data.createStringArray();
this.cancelNotificationsFromListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_snoozeNotificationUntilContextFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
java.lang.String _arg2;
_arg2 = data.readString();
this.snoozeNotificationUntilContextFromListener(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_snoozeNotificationUntilFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
long _arg2;
_arg2 = data.readLong();
this.snoozeNotificationUntilFromListener(_arg0, _arg1, _arg2);
reply.writeNoException();
return true;
}
case TRANSACTION_requestBindListener:
{
data.enforceInterface(DESCRIPTOR);
android.content.ComponentName _arg0;
if ((0!=data.readInt())) {
_arg0 = android.content.ComponentName.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.requestBindListener(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_requestUnbindListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
this.requestUnbindListener(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_requestBindProvider:
{
data.enforceInterface(DESCRIPTOR);
android.content.ComponentName _arg0;
if ((0!=data.readInt())) {
_arg0 = android.content.ComponentName.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
this.requestBindProvider(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_requestUnbindProvider:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.IConditionProvider _arg0;
_arg0 = android.service.notification.IConditionProvider.Stub.asInterface(data.readStrongBinder());
this.requestUnbindProvider(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_setNotificationsShownFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String[] _arg1;
_arg1 = data.createStringArray();
this.setNotificationsShownFromListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getActiveNotificationsFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String[] _arg1;
_arg1 = data.createStringArray();
int _arg2;
_arg2 = data.readInt();
android.content.pm.ParceledListSlice _result = this.getActiveNotificationsFromListener(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getSnoozedNotificationsFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
android.content.pm.ParceledListSlice _result = this.getSnoozedNotificationsFromListener(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_requestHintsFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
this.requestHintsFromListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getHintsFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _result = this.getHintsFromListener(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_requestInterruptionFilterFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
this.requestInterruptionFilterFromListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getInterruptionFilterFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _result = this.getInterruptionFilterFromListener(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_setOnNotificationPostedTrimFromListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
this.setOnNotificationPostedTrimFromListener(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_setInterruptionFilter:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
this.setInterruptionFilter(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_updateNotificationChannelFromPrivilegedListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
android.os.UserHandle _arg2;
if ((0!=data.readInt())) {
_arg2 = android.os.UserHandle.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
android.app.NotificationChannel _arg3;
if ((0!=data.readInt())) {
_arg3 = android.app.NotificationChannel.CREATOR.createFromParcel(data);
}
else {
_arg3 = null;
}
this.updateNotificationChannelFromPrivilegedListener(_arg0, _arg1, _arg2, _arg3);
reply.writeNoException();
return true;
}
case TRANSACTION_getNotificationChannelsFromPrivilegedListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
android.os.UserHandle _arg2;
if ((0!=data.readInt())) {
_arg2 = android.os.UserHandle.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
android.content.pm.ParceledListSlice _result = this.getNotificationChannelsFromPrivilegedListener(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getNotificationChannelGroupsFromPrivilegedListener:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
android.os.UserHandle _arg2;
if ((0!=data.readInt())) {
_arg2 = android.os.UserHandle.CREATOR.createFromParcel(data);
}
else {
_arg2 = null;
}
android.content.pm.ParceledListSlice _result = this.getNotificationChannelGroupsFromPrivilegedListener(_arg0, _arg1, _arg2);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_applyEnqueuedAdjustmentFromAssistant:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
android.service.notification.Adjustment _arg1;
if ((0!=data.readInt())) {
_arg1 = android.service.notification.Adjustment.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.applyEnqueuedAdjustmentFromAssistant(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_applyAdjustmentFromAssistant:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
android.service.notification.Adjustment _arg1;
if ((0!=data.readInt())) {
_arg1 = android.service.notification.Adjustment.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.applyAdjustmentFromAssistant(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_applyAdjustmentsFromAssistant:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.util.List<android.service.notification.Adjustment> _arg1;
_arg1 = data.createTypedArrayList(android.service.notification.Adjustment.CREATOR);
this.applyAdjustmentsFromAssistant(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_unsnoozeNotificationFromAssistant:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.INotificationListener _arg0;
_arg0 = android.service.notification.INotificationListener.Stub.asInterface(data.readStrongBinder());
java.lang.String _arg1;
_arg1 = data.readString();
this.unsnoozeNotificationFromAssistant(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getEffectsSuppressor:
{
data.enforceInterface(DESCRIPTOR);
android.content.ComponentName _result = this.getEffectsSuppressor();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_matchesCallFilter:
{
data.enforceInterface(DESCRIPTOR);
android.os.Bundle _arg0;
if ((0!=data.readInt())) {
_arg0 = android.os.Bundle.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
boolean _result = this.matchesCallFilter(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_isSystemConditionProviderEnabled:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.isSystemConditionProviderEnabled(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getZenMode:
{
data.enforceInterface(DESCRIPTOR);
int _result = this.getZenMode();
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getZenModeConfig:
{
data.enforceInterface(DESCRIPTOR);
android.service.notification.ZenModeConfig _result = this.getZenModeConfig();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_setZenMode:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.net.Uri _arg1;
if ((0!=data.readInt())) {
_arg1 = android.net.Uri.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
java.lang.String _arg2;
_arg2 = data.readString();
this.setZenMode(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_notifyConditions:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.service.notification.IConditionProvider _arg1;
_arg1 = android.service.notification.IConditionProvider.Stub.asInterface(data.readStrongBinder());
android.service.notification.Condition[] _arg2;
_arg2 = data.createTypedArray(android.service.notification.Condition.CREATOR);
this.notifyConditions(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_isNotificationPolicyAccessGranted:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.isNotificationPolicyAccessGranted(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getNotificationPolicy:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.app.NotificationManager.Policy _result = this.getNotificationPolicy(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_setNotificationPolicy:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.app.NotificationManager.Policy _arg1;
if ((0!=data.readInt())) {
_arg1 = android.app.NotificationManager.Policy.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.setNotificationPolicy(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getPackagesRequestingNotificationPolicyAccess:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String[] _result = this.getPackagesRequestingNotificationPolicyAccess();
reply.writeNoException();
reply.writeStringArray(_result);
return true;
}
case TRANSACTION_isNotificationPolicyAccessGrantedForPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.isNotificationPolicyAccessGrantedForPackage(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_setNotificationPolicyAccessGranted:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _arg1;
_arg1 = (0!=data.readInt());
this.setNotificationPolicyAccessGranted(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getAutomaticZenRule:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.app.AutomaticZenRule _result = this.getAutomaticZenRule(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getZenRules:
{
data.enforceInterface(DESCRIPTOR);
java.util.List<android.service.notification.ZenModeConfig.ZenRule> _result = this.getZenRules();
reply.writeNoException();
reply.writeTypedList(_result);
return true;
}
case TRANSACTION_addAutomaticZenRule:
{
data.enforceInterface(DESCRIPTOR);
android.app.AutomaticZenRule _arg0;
if ((0!=data.readInt())) {
_arg0 = android.app.AutomaticZenRule.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
java.lang.String _result = this.addAutomaticZenRule(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_updateAutomaticZenRule:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
android.app.AutomaticZenRule _arg1;
if ((0!=data.readInt())) {
_arg1 = android.app.AutomaticZenRule.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
boolean _result = this.updateAutomaticZenRule(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_removeAutomaticZenRule:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.removeAutomaticZenRule(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_removeAutomaticZenRules:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.removeAutomaticZenRules(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_getRuleInstanceCount:
{
data.enforceInterface(DESCRIPTOR);
android.content.ComponentName _arg0;
if ((0!=data.readInt())) {
_arg0 = android.content.ComponentName.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _result = this.getRuleInstanceCount(_arg0);
reply.writeNoException();
reply.writeInt(_result);
return true;
}
case TRANSACTION_getBackupPayload:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
byte[] _result = this.getBackupPayload(_arg0);
reply.writeNoException();
reply.writeByteArray(_result);
return true;
}
case TRANSACTION_applyRestore:
{
data.enforceInterface(DESCRIPTOR);
byte[] _arg0;
_arg0 = data.createByteArray();
int _arg1;
_arg1 = data.readInt();
this.applyRestore(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_getAppActiveNotifications:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
android.content.pm.ParceledListSlice _result = this.getAppActiveNotifications(_arg0, _arg1);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
}
return super.onTransact(code, data, reply, flags);
