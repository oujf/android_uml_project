class Proxy
!!!13175941.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13176069.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13176197.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13176325.java!!!	getDevicesMatchingConnectionStates(inout states : int [[]]) : java.util.List<android.bluetooth.BluetoothDevice>
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.bluetooth.BluetoothDevice> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeIntArray(states);
mRemote.transact(Stub.TRANSACTION_getDevicesMatchingConnectionStates, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.bluetooth.BluetoothDevice.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13176453.java!!!	registerScanner(inout callback : IScannerCallback, inout workSource : android.os.WorkSource) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
if ((workSource!=null)) {
_data.writeInt(1);
workSource.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_registerScanner, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13176581.java!!!	unregisterScanner(in scannerId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(scannerId);
mRemote.transact(Stub.TRANSACTION_unregisterScanner, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13176709.java!!!	startScan(in scannerId : int, inout settings : android.bluetooth.le.ScanSettings, inout filters : java.util.List<android.bluetooth.le.ScanFilter>, inout scanStorages : java.util.List, inout callingPackage : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(scannerId);
if ((settings!=null)) {
_data.writeInt(1);
settings.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeTypedList(filters);
_data.writeList(scanStorages);
_data.writeString(callingPackage);
mRemote.transact(Stub.TRANSACTION_startScan, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13176837.java!!!	startScanForIntent(inout intent : android.app.PendingIntent, inout settings : android.bluetooth.le.ScanSettings, inout filters : java.util.List<android.bluetooth.le.ScanFilter>, inout callingPackage : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((settings!=null)) {
_data.writeInt(1);
settings.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeTypedList(filters);
_data.writeString(callingPackage);
mRemote.transact(Stub.TRANSACTION_startScanForIntent, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13176965.java!!!	stopScanForIntent(inout intent : android.app.PendingIntent, inout callingPackage : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(callingPackage);
mRemote.transact(Stub.TRANSACTION_stopScanForIntent, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177093.java!!!	stopScan(in scannerId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(scannerId);
mRemote.transact(Stub.TRANSACTION_stopScan, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177221.java!!!	flushPendingBatchResults(in scannerId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(scannerId);
mRemote.transact(Stub.TRANSACTION_flushPendingBatchResults, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177349.java!!!	startAdvertisingSet(inout parameters : android.bluetooth.le.AdvertisingSetParameters, inout advertiseData : android.bluetooth.le.AdvertiseData, inout scanResponse : android.bluetooth.le.AdvertiseData, inout periodicParameters : android.bluetooth.le.PeriodicAdvertisingParameters, inout periodicData : android.bluetooth.le.AdvertiseData, in duration : int, in maxExtAdvEvents : int, inout callback : IAdvertisingSetCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((parameters!=null)) {
_data.writeInt(1);
parameters.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((advertiseData!=null)) {
_data.writeInt(1);
advertiseData.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((scanResponse!=null)) {
_data.writeInt(1);
scanResponse.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((periodicParameters!=null)) {
_data.writeInt(1);
periodicParameters.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((periodicData!=null)) {
_data.writeInt(1);
periodicData.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(duration);
_data.writeInt(maxExtAdvEvents);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_startAdvertisingSet, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177477.java!!!	stopAdvertisingSet(inout callback : IAdvertisingSetCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_stopAdvertisingSet, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177605.java!!!	getOwnAddress(in advertiserId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
mRemote.transact(Stub.TRANSACTION_getOwnAddress, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177733.java!!!	enableAdvertisingSet(in advertiserId : int, inout enable : boolean, in duration : int, in maxExtAdvEvents : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
_data.writeInt(((enable)?(1):(0)));
_data.writeInt(duration);
_data.writeInt(maxExtAdvEvents);
mRemote.transact(Stub.TRANSACTION_enableAdvertisingSet, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177861.java!!!	setAdvertisingData(in advertiserId : int, inout data : android.bluetooth.le.AdvertiseData) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
if ((data!=null)) {
_data.writeInt(1);
data.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setAdvertisingData, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13177989.java!!!	setScanResponseData(in advertiserId : int, inout data : android.bluetooth.le.AdvertiseData) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
if ((data!=null)) {
_data.writeInt(1);
data.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setScanResponseData, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178117.java!!!	setAdvertisingParameters(in advertiserId : int, inout parameters : android.bluetooth.le.AdvertisingSetParameters) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
if ((parameters!=null)) {
_data.writeInt(1);
parameters.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setAdvertisingParameters, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178245.java!!!	setPeriodicAdvertisingParameters(in advertiserId : int, inout parameters : android.bluetooth.le.PeriodicAdvertisingParameters) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
if ((parameters!=null)) {
_data.writeInt(1);
parameters.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setPeriodicAdvertisingParameters, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178373.java!!!	setPeriodicAdvertisingData(in advertiserId : int, inout data : android.bluetooth.le.AdvertiseData) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
if ((data!=null)) {
_data.writeInt(1);
data.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setPeriodicAdvertisingData, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178501.java!!!	setPeriodicAdvertisingEnable(in advertiserId : int, inout enable : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(advertiserId);
_data.writeInt(((enable)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_setPeriodicAdvertisingEnable, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178629.java!!!	registerSync(inout scanResult : android.bluetooth.le.ScanResult, in skip : int, in timeout : int, inout callback : IPeriodicAdvertisingCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((scanResult!=null)) {
_data.writeInt(1);
scanResult.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(skip);
_data.writeInt(timeout);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerSync, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178757.java!!!	unregisterSync(inout callback : IPeriodicAdvertisingCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_unregisterSync, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13178885.java!!!	registerClient(inout appId : android.os.ParcelUuid, inout callback : IBluetoothGattCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((appId!=null)) {
_data.writeInt(1);
appId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179013.java!!!	unregisterClient(in clientIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
mRemote.transact(Stub.TRANSACTION_unregisterClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179141.java!!!	clientConnect(in clientIf : int, inout address : java.lang.String, inout isDirect : boolean, in transport : int, in phy : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(((isDirect)?(1):(0)));
_data.writeInt(transport);
_data.writeInt(phy);
mRemote.transact(Stub.TRANSACTION_clientConnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179269.java!!!	clientDisconnect(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_clientDisconnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179397.java!!!	clientSetPreferredPhy(in clientIf : int, inout address : java.lang.String, in txPhy : int, in rxPhy : int, in phyOptions : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(txPhy);
_data.writeInt(rxPhy);
_data.writeInt(phyOptions);
mRemote.transact(Stub.TRANSACTION_clientSetPreferredPhy, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179525.java!!!	clientReadPhy(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_clientReadPhy, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179653.java!!!	refreshDevice(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_refreshDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179781.java!!!	discoverServices(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_discoverServices, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13179909.java!!!	discoverServiceByUuid(in clientIf : int, inout address : java.lang.String, inout uuid : android.os.ParcelUuid) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
if ((uuid!=null)) {
_data.writeInt(1);
uuid.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_discoverServiceByUuid, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180037.java!!!	readCharacteristic(in clientIf : int, inout address : java.lang.String, in handle : int, in authReq : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(authReq);
mRemote.transact(Stub.TRANSACTION_readCharacteristic, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180165.java!!!	readUsingCharacteristicUuid(in clientIf : int, inout address : java.lang.String, inout uuid : android.os.ParcelUuid, in startHandle : int, in endHandle : int, in authReq : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
if ((uuid!=null)) {
_data.writeInt(1);
uuid.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(startHandle);
_data.writeInt(endHandle);
_data.writeInt(authReq);
mRemote.transact(Stub.TRANSACTION_readUsingCharacteristicUuid, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180293.java!!!	writeCharacteristic(in clientIf : int, inout address : java.lang.String, in handle : int, in writeType : int, in authReq : int, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(writeType);
_data.writeInt(authReq);
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_writeCharacteristic, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180421.java!!!	readDescriptor(in clientIf : int, inout address : java.lang.String, in handle : int, in authReq : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(authReq);
mRemote.transact(Stub.TRANSACTION_readDescriptor, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180549.java!!!	writeDescriptor(in clientIf : int, inout address : java.lang.String, in handle : int, in authReq : int, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(authReq);
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_writeDescriptor, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180677.java!!!	registerForNotification(in clientIf : int, inout address : java.lang.String, in handle : int, inout enable : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(((enable)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_registerForNotification, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180805.java!!!	beginReliableWrite(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_beginReliableWrite, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13180933.java!!!	endReliableWrite(in clientIf : int, inout address : java.lang.String, inout execute : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(((execute)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_endReliableWrite, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181061.java!!!	readRemoteRssi(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_readRemoteRssi, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181189.java!!!	configureMTU(in clientIf : int, inout address : java.lang.String, in mtu : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(mtu);
mRemote.transact(Stub.TRANSACTION_configureMTU, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181317.java!!!	connectionParameterUpdate(in clientIf : int, inout address : java.lang.String, in connectionPriority : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(connectionPriority);
mRemote.transact(Stub.TRANSACTION_connectionParameterUpdate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181445.java!!!	registerServer(inout appId : android.os.ParcelUuid, inout callback : IBluetoothGattServerCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((appId!=null)) {
_data.writeInt(1);
appId.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerServer, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181573.java!!!	unregisterServer(in serverIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
mRemote.transact(Stub.TRANSACTION_unregisterServer, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181701.java!!!	serverConnect(in serverIf : int, inout address : java.lang.String, inout isDirect : boolean, in transport : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
_data.writeInt(((isDirect)?(1):(0)));
_data.writeInt(transport);
mRemote.transact(Stub.TRANSACTION_serverConnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181829.java!!!	serverDisconnect(in serverIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_serverDisconnect, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13181957.java!!!	serverSetPreferredPhy(in clientIf : int, inout address : java.lang.String, in txPhy : int, in rxPhy : int, in phyOptions : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
_data.writeInt(txPhy);
_data.writeInt(rxPhy);
_data.writeInt(phyOptions);
mRemote.transact(Stub.TRANSACTION_serverSetPreferredPhy, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182085.java!!!	serverReadPhy(in clientIf : int, inout address : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(clientIf);
_data.writeString(address);
mRemote.transact(Stub.TRANSACTION_serverReadPhy, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182213.java!!!	addService(in serverIf : int, inout service : android.bluetooth.BluetoothGattService) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
if ((service!=null)) {
_data.writeInt(1);
service.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_addService, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182341.java!!!	removeService(in serverIf : int, in handle : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeInt(handle);
mRemote.transact(Stub.TRANSACTION_removeService, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182469.java!!!	clearServices(in serverIf : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
mRemote.transact(Stub.TRANSACTION_clearServices, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182597.java!!!	sendResponse(in serverIf : int, inout address : java.lang.String, in requestId : int, in status : int, in offset : int, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
_data.writeInt(requestId);
_data.writeInt(status);
_data.writeInt(offset);
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_sendResponse, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182725.java!!!	sendNotification(in serverIf : int, inout address : java.lang.String, in handle : int, inout confirm : boolean, inout value : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(serverIf);
_data.writeString(address);
_data.writeInt(handle);
_data.writeInt(((confirm)?(1):(0)));
_data.writeByteArray(value);
mRemote.transact(Stub.TRANSACTION_sendNotification, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182853.java!!!	disconnectAll() : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_disconnectAll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13182981.java!!!	unregAll() : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_unregAll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13183109.java!!!	numHwTrackFiltersAvailable() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_numHwTrackFiltersAvailable, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
