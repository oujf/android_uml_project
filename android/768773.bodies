class FalsingLog
!!!3172613.java!!!	v(in tag : String, in s : String) : void
        if (!VERBOSE) {
            return;
        }
        if (LOGCAT) {
            Log.v(TAG, tag + "\t" + s);
        }
        log("V", tag, s);
!!!3172741.java!!!	i(in tag : String, in s : String) : void
        if (LOGCAT) {
            Log.i(TAG, tag + "\t" + s);
        }
        log("I", tag, s);
!!!3172869.java!!!	wLogcat(in tag : String, in s : String) : void
        Log.w(TAG, tag + "\t" + s);
        log("W", tag, s);
!!!3172997.java!!!	w(in tag : String, in s : String) : void
        if (LOGCAT) {
            Log.w(TAG, tag + "\t" + s);
        }
        log("W", tag, s);
!!!3173125.java!!!	e(in tag : String, in s : String) : void
        if (LOGCAT) {
            Log.e(TAG, tag + "\t" + s);
        }
        log("E", tag, s);
!!!3173253.java!!!	log(in level : String, in tag : String, in s : String) : void
        if (!ENABLED) {
            return;
        }
        if (sInstance == null) {
            sInstance = new FalsingLog();
        }

        if (sInstance.mLog.size() >= MAX_SIZE) {
            sInstance.mLog.removeFirst();
        }
        String entry = new StringBuilder().append(sInstance.mFormat.format(new Date()))
            .append(" ").append(level).append(" ")
            .append(tag).append(" ").append(s).toString();
        sInstance.mLog.add(entry);
!!!3173381.java!!!	dump(inout pw : PrintWriter) : void
        pw.println("FALSING LOG:");
        if (!ENABLED) {
            pw.println("Disabled, to enable: setprop debug.falsing_log 1");
            pw.println();
            return;
        }
        if (sInstance == null || sInstance.mLog.isEmpty()) {
            pw.println("<empty>");
            pw.println();
            return;
        }
        for (String s : sInstance.mLog) {
            pw.println(s);
        }
        pw.println();
!!!3173509.java!!!	wtf(in tag : String, in s : String, inout here : Throwable) : void
        if (!ENABLED) {
            return;
        }
        e(tag, s);

        Application application = ActivityThread.currentApplication();
        String fileMessage = "";
        if (Build.IS_DEBUGGABLE && application != null) {
            File f = new File(application.getDataDir(), "falsing-"
                    + new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss").format(new Date()) + ".txt");
            PrintWriter pw = null;
            try {
                pw = new PrintWriter(f);
                dump(pw);
                pw.close();
                fileMessage = "Log written to " + f.getAbsolutePath();
            } catch (IOException e) {
                Log.e(TAG, "Unable to write falsing log", e);
            } finally {
                if (pw != null) {
                    pw.close();
                }
            }
        } else {
            Log.e(TAG, "Unable to write log, build must be debuggable.");
        }

        Log.wtf(TAG, tag + " " + s + "; " + fileMessage, here);
