class SystemServiceRegistry
!!!5706885.java!!!	createServiceCache() : Object
        return new Object[sServiceCacheSize];
!!!5707013.java!!!	getSystemService(inout ctx : ContextImpl, in name : String) : Object
        ServiceFetcher<?> fetcher = SYSTEM_SERVICE_FETCHERS.get(name);
        return fetcher != null ? fetcher.getService(ctx) : null;
!!!5707141.java!!!	getSystemServiceName(inout serviceClass : Class<?>) : String
        return SYSTEM_SERVICE_NAMES.get(serviceClass);
!!!5707269.java!!!	registerService(in serviceName : String, inout serviceClass : Class<T>, inout serviceFetcher : SystemServiceRegistry::ServiceFetcher) : void
        SYSTEM_SERVICE_NAMES.put(serviceClass, serviceName);
        SYSTEM_SERVICE_FETCHERS.put(serviceName, serviceFetcher);
!!!5708421.java!!!	onServiceNotFound(inout e : ServiceManager::ServiceNotFoundException) : void
        // We're mostly interested in tracking down long-lived core system
        // components that might stumble if they obtain bad references; just
        // emit a tidy log message for normal apps
        if (android.os.Process.myUid() < android.os.Process.FIRST_APPLICATION_UID) {
            Log.wtf(TAG, e.getMessage(), e);
        } else {
            Log.w(TAG, e.getMessage());
        }
