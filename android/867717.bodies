class NotificationDozeHelper
!!!3877893.java!!!	fadeGrayscale(in target : ImageView, in dark : boolean, in delay : long) : void
        startIntensityAnimation(new ValueAnimator.AnimatorUpdateListener() {
            @Override
            public void onAnimationUpdate(ValueAnimator animation) {
                updateGrayscale(target, (float) animation.getAnimatedValue());
            }
        }, dark, delay, new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator animation) {
                if (!dark) {
                    target.setColorFilter(null);
                }
            }
        });
!!!3878021.java!!!	updateGrayscale(inout target : ImageView, inout dark : boolean) : void
        updateGrayscale(target, dark ? 1 : 0);
!!!3878149.java!!!	updateGrayscale(inout target : ImageView, in darkAmount : float) : void
        if (darkAmount > 0) {
            updateGrayscaleMatrix(darkAmount);
            target.setColorFilter(new ColorMatrixColorFilter(mGrayscaleColorMatrix));
        } else {
            target.setColorFilter(null);
        }
!!!3878277.java!!!	startIntensityAnimation(inout updateListener : ValueAnimator.AnimatorUpdateListener, inout dark : boolean, in delay : long, inout listener : Animator.AnimatorListener) : void
        float startIntensity = dark ? 0f : 1f;
        float endIntensity = dark ? 1f : 0f;
        ValueAnimator animator = ValueAnimator.ofFloat(startIntensity, endIntensity);
        animator.addUpdateListener(updateListener);
        animator.setDuration(NotificationPanelView.DOZE_ANIMATION_DURATION);
        animator.setInterpolator(Interpolators.LINEAR_OUT_SLOW_IN);
        animator.setStartDelay(delay);
        if (listener != null) {
            animator.addListener(listener);
        }
        animator.start();
!!!3878405.java!!!	setIntensityDark(inout listener : Consumer<Float>, inout dark : boolean, inout animate : boolean, in delay : long) : void
        if (animate) {
            startIntensityAnimation(a -> listener.accept((Float) a.getAnimatedValue()), dark, delay,
                    null /* listener */);
        } else {
            listener.accept(dark ? 1f : 0f);
        }
!!!3878533.java!!!	updateGrayscaleMatrix(in intensity : float) : void
        mGrayscaleColorMatrix.setSaturation(1 - intensity);
!!!3878661.java!!!	getGrayscaleColorMatrix() : ColorMatrix
        return mGrayscaleColorMatrix;
