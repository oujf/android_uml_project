class CommandQueue
!!!3226757.java!!!	addCallbacks(inout callbacks : CommandQueue::Callbacks) : void
        mCallbacks.add(callbacks);
        callbacks.disable(mDisable1, mDisable2, false /* animate */);
!!!3226885.java!!!	removeCallbacks(inout callbacks : CommandQueue::Callbacks) : void
        mCallbacks.remove(callbacks);
!!!3227013.java!!!	setIcon(in slot : String, inout icon : StatusBarIcon) : void
        synchronized (mLock) {
            // don't coalesce these
            mHandler.obtainMessage(MSG_ICON, OP_SET_ICON, 0,
                    new Pair<String, StatusBarIcon>(slot, icon)).sendToTarget();
        }
!!!3227141.java!!!	removeIcon(in slot : String) : void
        synchronized (mLock) {
            // don't coalesce these
            mHandler.obtainMessage(MSG_ICON, OP_REMOVE_ICON, 0, slot).sendToTarget();
        }
!!!3227269.java!!!	disable(in state1 : int, in state2 : int, inout animate : boolean) : void
        synchronized (mLock) {
            mDisable1 = state1;
            mDisable2 = state2;
            mHandler.removeMessages(MSG_DISABLE);
            Message msg = mHandler.obtainMessage(MSG_DISABLE, state1, state2, animate);
            if (Looper.myLooper() == mHandler.getLooper()) {
                // If its the right looper execute immediately so hides can be handled quickly.
                mHandler.handleMessage(msg);
                msg.recycle();
            } else {
                msg.sendToTarget();
            }
        }
!!!3227397.java!!!	disable(in state1 : int, in state2 : int) : void
        disable(state1, state2, true);
!!!3227525.java!!!	recomputeDisableFlags(inout animate : boolean) : void
        disable(mDisable1, mDisable2, animate);
!!!3227653.java!!!	animateExpandNotificationsPanel() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_EXPAND_NOTIFICATIONS);
            mHandler.sendEmptyMessage(MSG_EXPAND_NOTIFICATIONS);
        }
!!!3227781.java!!!	animateCollapsePanels() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_COLLAPSE_PANELS);
            mHandler.obtainMessage(MSG_COLLAPSE_PANELS, 0, 0).sendToTarget();
        }
!!!3227909.java!!!	animateCollapsePanels(in flags : int) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_COLLAPSE_PANELS);
            mHandler.obtainMessage(MSG_COLLAPSE_PANELS, flags, 0).sendToTarget();
        }
!!!3228037.java!!!	animateExpandSettingsPanel(in subPanel : String) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_EXPAND_SETTINGS);
            mHandler.obtainMessage(MSG_EXPAND_SETTINGS, subPanel).sendToTarget();
        }
!!!3228165.java!!!	setSystemUiVisibility(in vis : int, in fullscreenStackVis : int, in dockedStackVis : int, in mask : int, inout fullscreenStackBounds : Rect, inout dockedStackBounds : Rect) : void
        synchronized (mLock) {
            // Don't coalesce these, since it might have one time flags set such as
            // STATUS_BAR_UNHIDE which might get lost.
            SomeArgs args = SomeArgs.obtain();
            args.argi1 = vis;
            args.argi2 = fullscreenStackVis;
            args.argi3 = dockedStackVis;
            args.argi4 = mask;
            args.arg1 = fullscreenStackBounds;
            args.arg2 = dockedStackBounds;
            mHandler.obtainMessage(MSG_SET_SYSTEMUI_VISIBILITY, args).sendToTarget();
        }
!!!3228293.java!!!	topAppWindowChanged(inout menuVisible : boolean) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_TOP_APP_WINDOW_CHANGED);
            mHandler.obtainMessage(MSG_TOP_APP_WINDOW_CHANGED, menuVisible ? 1 : 0, 0,
                    null).sendToTarget();
        }
!!!3228421.java!!!	setImeWindowStatus(inout token : IBinder, in vis : int, in backDisposition : int, inout showImeSwitcher : boolean) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_SHOW_IME_BUTTON);
            Message m = mHandler.obtainMessage(MSG_SHOW_IME_BUTTON, vis, backDisposition, token);
            m.getData().putBoolean(SHOW_IME_SWITCHER_KEY, showImeSwitcher);
            m.sendToTarget();
        }
!!!3228549.java!!!	showRecentApps(inout triggeredFromAltTab : boolean, inout fromHome : boolean) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_SHOW_RECENT_APPS);
            mHandler.obtainMessage(MSG_SHOW_RECENT_APPS,
                    triggeredFromAltTab ? 1 : 0, fromHome ? 1 : 0, null).sendToTarget();
        }
!!!3228677.java!!!	hideRecentApps(inout triggeredFromAltTab : boolean, inout triggeredFromHomeKey : boolean) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_HIDE_RECENT_APPS);
            mHandler.obtainMessage(MSG_HIDE_RECENT_APPS,
                    triggeredFromAltTab ? 1 : 0, triggeredFromHomeKey ? 1 : 0,
                    null).sendToTarget();
        }
!!!3228805.java!!!	toggleSplitScreen() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_TOGGLE_APP_SPLIT_SCREEN);
            mHandler.obtainMessage(MSG_TOGGLE_APP_SPLIT_SCREEN, 0, 0, null).sendToTarget();
        }
!!!3228933.java!!!	toggleRecentApps() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_TOGGLE_RECENT_APPS);
            Message msg = mHandler.obtainMessage(MSG_TOGGLE_RECENT_APPS, 0, 0, null);
            msg.setAsynchronous(true);
            msg.sendToTarget();
        }
!!!3229061.java!!!	preloadRecentApps() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_PRELOAD_RECENT_APPS);
            mHandler.obtainMessage(MSG_PRELOAD_RECENT_APPS, 0, 0, null).sendToTarget();
        }
!!!3229189.java!!!	cancelPreloadRecentApps() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_CANCEL_PRELOAD_RECENT_APPS);
            mHandler.obtainMessage(MSG_CANCEL_PRELOAD_RECENT_APPS, 0, 0, null).sendToTarget();
        }
!!!3229317.java!!!	dismissKeyboardShortcutsMenu() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_DISMISS_KEYBOARD_SHORTCUTS);
            mHandler.obtainMessage(MSG_DISMISS_KEYBOARD_SHORTCUTS).sendToTarget();
        }
!!!3229445.java!!!	toggleKeyboardShortcutsMenu(in deviceId : int) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_TOGGLE_KEYBOARD_SHORTCUTS);
            mHandler.obtainMessage(MSG_TOGGLE_KEYBOARD_SHORTCUTS, deviceId, 0).sendToTarget();
        }
!!!3229573.java!!!	showPictureInPictureMenu() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_SHOW_PICTURE_IN_PICTURE_MENU);
            mHandler.obtainMessage(MSG_SHOW_PICTURE_IN_PICTURE_MENU).sendToTarget();
        }
!!!3229701.java!!!	setWindowState(in window : int, in state : int) : void
        synchronized (mLock) {
            // don't coalesce these
            mHandler.obtainMessage(MSG_SET_WINDOW_STATE, window, state, null).sendToTarget();
        }
!!!3229829.java!!!	showScreenPinningRequest(in taskId : int) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_SHOW_SCREEN_PIN_REQUEST, taskId, 0, null)
                    .sendToTarget();
        }
!!!3229957.java!!!	appTransitionPending() : void
        appTransitionPending(false /* forced */);
!!!3230085.java!!!	appTransitionPending(inout forced : boolean) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_APP_TRANSITION_PENDING, forced ? 1 : 0, 0).sendToTarget();
        }
!!!3230213.java!!!	appTransitionCancelled() : void
        synchronized (mLock) {
            mHandler.sendEmptyMessage(MSG_APP_TRANSITION_CANCELLED);
        }
!!!3230341.java!!!	appTransitionStarting(in startTime : long, in duration : long) : void
        appTransitionStarting(startTime, duration, false /* forced */);
!!!3230469.java!!!	appTransitionStarting(in startTime : long, in duration : long, inout forced : boolean) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_APP_TRANSITION_STARTING, forced ? 1 : 0, 0,
                    Pair.create(startTime, duration)).sendToTarget();
        }
!!!3230597.java!!!	appTransitionFinished() : void
        synchronized (mLock) {
            mHandler.sendEmptyMessage(MSG_APP_TRANSITION_FINISHED);
        }
!!!3230725.java!!!	showAssistDisclosure() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_ASSIST_DISCLOSURE);
            mHandler.obtainMessage(MSG_ASSIST_DISCLOSURE).sendToTarget();
        }
!!!3230853.java!!!	startAssist(inout args : Bundle) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_START_ASSIST);
            mHandler.obtainMessage(MSG_START_ASSIST, args).sendToTarget();
        }
!!!3230981.java!!!	onCameraLaunchGestureDetected(in source : int) : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_CAMERA_LAUNCH_GESTURE);
            mHandler.obtainMessage(MSG_CAMERA_LAUNCH_GESTURE, source, 0).sendToTarget();
        }
!!!3231109.java!!!	addQsTile(inout tile : ComponentName) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_ADD_QS_TILE, tile).sendToTarget();
        }
!!!3231237.java!!!	remQsTile(inout tile : ComponentName) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_REMOVE_QS_TILE, tile).sendToTarget();
        }
!!!3231365.java!!!	clickQsTile(inout tile : ComponentName) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_CLICK_QS_TILE, tile).sendToTarget();
        }
!!!3231493.java!!!	handleSystemNavigationKey(in key : int) : void
        synchronized (mLock) {
            mHandler.obtainMessage(MSG_HANDLE_SYSNAV_KEY, key, 0).sendToTarget();
        }
!!!3231621.java!!!	showGlobalActionsMenu() : void
        synchronized (mLock) {
            mHandler.removeMessages(MSG_SHOW_GLOBAL_ACTIONS);
            mHandler.obtainMessage(MSG_SHOW_GLOBAL_ACTIONS).sendToTarget();
        }
