class TaskKeyLruCache
!!!3534341.java!!!	TaskKeyLruCache(in cacheSize : int)
        this(cacheSize, null);
!!!3534469.java!!!	TaskKeyLruCache(in cacheSize : int, inout evictionCallback : TaskKeyLruCache::EvictionCallback)
        mEvictionCallback = evictionCallback;
        mCache = new LruCache<Integer, V>(cacheSize) {

            @Override
            protected void entryRemoved(boolean evicted, Integer taskId, V oldV, V newV) {
                if (mEvictionCallback != null) {
                    mEvictionCallback.onEntryEvicted(mKeys.get(taskId));
                }
                mKeys.remove(taskId);
            }
        };
!!!3534597.java!!!	trimToSize(in cacheSize : int) : void
        mCache.trimToSize(cacheSize);
!!!3534725.java!!!	dump(in prefix : String, inout writer : PrintWriter) : void
        String innerPrefix = prefix + "  ";

        writer.print(prefix); writer.print(TAG);
        writer.print(" numEntries="); writer.print(mKeys.size());
        writer.println();
        int keyCount = mKeys.size();
        for (int i = 0; i < keyCount; i++) {
            writer.print(innerPrefix); writer.println(mKeys.get(mKeys.keyAt(i)));
        }
!!!3534853.java!!!	getCacheEntry(in id : int) : V
        return mCache.get(id);
!!!3534981.java!!!	putCacheEntry(in id : int, inout value : V) : void
        mCache.put(id, value);
!!!3535109.java!!!	removeCacheEntry(in id : int) : void
        mCache.remove(id);
!!!3535237.java!!!	evictAllCache() : void
        mCache.evictAll();
