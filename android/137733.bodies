class Client
!!!146565.cpp!!!	Client(in audioFlinger : sp<AudioFlinger>, in pid : pid_t)
    size_t heapSize = property_get_int32("ro.af.client_heap_size_kbyte", 0);
    heapSize *= 1024;
    if (!heapSize) {
        heapSize = kClientSharedHeapSizeBytes;
        // Increase heap size on non low ram devices to limit risk of reconnection failure for
        // invalidated tracks
        if (!audioFlinger->isLowRamDevice()) {
            heapSize *= kClientSharedHeapSizeMultiplier;
        }
    }
    mMemoryDealer = new MemoryDealer(heapSize, "AudioFlinger::Client");
!!!146693.cpp!!!	~Client()
    mAudioFlinger->removeClient_l(mPid);
!!!146821.cpp!!!	heap() : sp<MemoryDealer>
    return mMemoryDealer;
