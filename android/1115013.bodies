class JobParameters
!!!5883013.java!!!	JobParameters(inout callback : IBinder, in jobId : int, inout extras : PersistableBundle, inout transientExtras : Bundle, inout clipData : ClipData, in clipGrantFlags : int, inout overrideDeadlineExpired : boolean, inout triggeredContentUris : Uri [[]], inout triggeredContentAuthorities : String [[]])
        this.jobId = jobId;
        this.extras = extras;
        this.transientExtras = transientExtras;
        this.clipData = clipData;
        this.clipGrantFlags = clipGrantFlags;
        this.callback = callback;
        this.overrideDeadlineExpired = overrideDeadlineExpired;
        this.mTriggeredContentUris = triggeredContentUris;
        this.mTriggeredContentAuthorities = triggeredContentAuthorities;
!!!5883141.java!!!	getJobId() : int
        return jobId;
!!!5883269.java!!!	getStopReason() : int
        return stopReason;
!!!5883397.java!!!	getExtras() : PersistableBundle
        return extras;
!!!5883525.java!!!	getTransientExtras() : Bundle
        return transientExtras;
!!!5883653.java!!!	getClipData() : ClipData
        return clipData;
!!!5883781.java!!!	getClipGrantFlags() : int
        return clipGrantFlags;
!!!5883909.java!!!	isOverrideDeadlineExpired() : boolean
        return overrideDeadlineExpired;
!!!5884037.java!!!	getTriggeredContentUris() : Uri
        return mTriggeredContentUris;
!!!5884165.java!!!	getTriggeredContentAuthorities() : String
        return mTriggeredContentAuthorities;
!!!5884293.java!!!	dequeueWork() : JobWorkItem
        try {
            return getCallback().dequeueWork(getJobId());
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5884421.java!!!	completeWork(inout work : JobWorkItem) : void
        try {
            if (!getCallback().completeWork(getJobId(), work.getWorkId())) {
                throw new IllegalArgumentException("Given work is not active: " + work);
            }
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5884549.java!!!	getCallback() : IJobCallback
        return IJobCallback.Stub.asInterface(callback);
!!!5884677.java!!!	JobParameters(inout in : Parcel)
        jobId = in.readInt();
        extras = in.readPersistableBundle();
        transientExtras = in.readBundle();
        if (in.readInt() != 0) {
            clipData = ClipData.CREATOR.createFromParcel(in);
            clipGrantFlags = in.readInt();
        } else {
            clipData = null;
            clipGrantFlags = 0;
        }
        callback = in.readStrongBinder();
        overrideDeadlineExpired = in.readInt() == 1;
        mTriggeredContentUris = in.createTypedArray(Uri.CREATOR);
        mTriggeredContentAuthorities = in.createStringArray();
        stopReason = in.readInt();
!!!5884805.java!!!	setStopReason(in reason : int) : void
        stopReason = reason;
!!!5884933.java!!!	describeContents() : int
        return 0;
!!!5885061.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(jobId);
        dest.writePersistableBundle(extras);
        dest.writeBundle(transientExtras);
        if (clipData != null) {
            dest.writeInt(1);
            clipData.writeToParcel(dest, flags);
            dest.writeInt(clipGrantFlags);
        } else {
            dest.writeInt(0);
        }
        dest.writeStrongBinder(callback);
        dest.writeInt(overrideDeadlineExpired ? 1 : 0);
        dest.writeTypedArray(mTriggeredContentUris, flags);
        dest.writeStringArray(mTriggeredContentAuthorities);
        dest.writeInt(stopReason);
