class Proxy
!!!13266181.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13266309.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13266437.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13266565.java!!!	onScannerRegistered(in status : int, in scannerId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(status);
_data.writeInt(scannerId);
mRemote.transact(Stub.TRANSACTION_onScannerRegistered, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13266693.java!!!	onScanResult(inout scanResult : android.bluetooth.le.ScanResult) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((scanResult!=null)) {
_data.writeInt(1);
scanResult.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_onScanResult, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13266821.java!!!	onBatchScanResults(inout batchResults : java.util.List<android.bluetooth.le.ScanResult>) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeTypedList(batchResults);
mRemote.transact(Stub.TRANSACTION_onBatchScanResults, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13266949.java!!!	onFoundOrLost(inout onFound : boolean, inout scanResult : android.bluetooth.le.ScanResult) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((onFound)?(1):(0)));
if ((scanResult!=null)) {
_data.writeInt(1);
scanResult.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_onFoundOrLost, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!13267077.java!!!	onScanManagerErrorCallback(in errorCode : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(errorCode);
mRemote.transact(Stub.TRANSACTION_onScanManagerErrorCallback, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
