class Stub
!!!13021701.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!13021829.java!!!	asInterface(inout obj : android.os.IBinder) : ITaskStackListener
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.app.ITaskStackListener))) {
return ((android.app.ITaskStackListener)iin);
}
return new android.app.ITaskStackListener.Stub.Proxy(obj);
!!!13021957.java!!!	asBinder() : android.os.IBinder
return this;
!!!13022085.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_onTaskStackChanged:
{
data.enforceInterface(DESCRIPTOR);
this.onTaskStackChanged();
return true;
}
case TRANSACTION_onActivityPinned:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
this.onActivityPinned(_arg0, _arg1);
return true;
}
case TRANSACTION_onActivityUnpinned:
{
data.enforceInterface(DESCRIPTOR);
this.onActivityUnpinned();
return true;
}
case TRANSACTION_onPinnedActivityRestartAttempt:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.onPinnedActivityRestartAttempt(_arg0);
return true;
}
case TRANSACTION_onPinnedStackAnimationStarted:
{
data.enforceInterface(DESCRIPTOR);
this.onPinnedStackAnimationStarted();
return true;
}
case TRANSACTION_onPinnedStackAnimationEnded:
{
data.enforceInterface(DESCRIPTOR);
this.onPinnedStackAnimationEnded();
return true;
}
case TRANSACTION_onActivityForcedResizable:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
int _arg1;
_arg1 = data.readInt();
int _arg2;
_arg2 = data.readInt();
this.onActivityForcedResizable(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_onActivityDismissingDockedStack:
{
data.enforceInterface(DESCRIPTOR);
this.onActivityDismissingDockedStack();
return true;
}
case TRANSACTION_onActivityLaunchOnSecondaryDisplayFailed:
{
data.enforceInterface(DESCRIPTOR);
this.onActivityLaunchOnSecondaryDisplayFailed();
return true;
}
case TRANSACTION_onTaskCreated:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.content.ComponentName _arg1;
if ((0!=data.readInt())) {
_arg1 = android.content.ComponentName.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.onTaskCreated(_arg0, _arg1);
return true;
}
case TRANSACTION_onTaskRemoved:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onTaskRemoved(_arg0);
return true;
}
case TRANSACTION_onTaskMovedToFront:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onTaskMovedToFront(_arg0);
return true;
}
case TRANSACTION_onTaskDescriptionChanged:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.app.ActivityManager.TaskDescription _arg1;
if ((0!=data.readInt())) {
_arg1 = android.app.ActivityManager.TaskDescription.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.onTaskDescriptionChanged(_arg0, _arg1);
return true;
}
case TRANSACTION_onActivityRequestedOrientationChanged:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.onActivityRequestedOrientationChanged(_arg0, _arg1);
return true;
}
case TRANSACTION_onTaskRemovalStarted:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onTaskRemovalStarted(_arg0);
return true;
}
case TRANSACTION_onTaskProfileLocked:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
this.onTaskProfileLocked(_arg0, _arg1);
return true;
}
case TRANSACTION_onTaskSnapshotChanged:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.app.ActivityManager.TaskSnapshot _arg1;
if ((0!=data.readInt())) {
_arg1 = android.app.ActivityManager.TaskSnapshot.CREATOR.createFromParcel(data);
}
else {
_arg1 = null;
}
this.onTaskSnapshotChanged(_arg0, _arg1);
return true;
}
}
return super.onTransact(code, data, reply, flags);
