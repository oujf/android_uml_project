class Stub
!!!12844037.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!12844165.java!!!	asInterface(inout obj : android.os.IBinder) : IAccessibilityServiceClient
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.accessibilityservice.IAccessibilityServiceClient))) {
return ((android.accessibilityservice.IAccessibilityServiceClient)iin);
}
return new android.accessibilityservice.IAccessibilityServiceClient.Stub.Proxy(obj);
!!!12844293.java!!!	asBinder() : android.os.IBinder
return this;
!!!12844421.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_init:
{
data.enforceInterface(DESCRIPTOR);
android.accessibilityservice.IAccessibilityServiceConnection _arg0;
_arg0 = android.accessibilityservice.IAccessibilityServiceConnection.Stub.asInterface(data.readStrongBinder());
int _arg1;
_arg1 = data.readInt();
android.os.IBinder _arg2;
_arg2 = data.readStrongBinder();
this.init(_arg0, _arg1, _arg2);
return true;
}
case TRANSACTION_onAccessibilityEvent:
{
data.enforceInterface(DESCRIPTOR);
android.view.accessibility.AccessibilityEvent _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.accessibility.AccessibilityEvent.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
boolean _arg1;
_arg1 = (0!=data.readInt());
this.onAccessibilityEvent(_arg0, _arg1);
return true;
}
case TRANSACTION_onInterrupt:
{
data.enforceInterface(DESCRIPTOR);
this.onInterrupt();
return true;
}
case TRANSACTION_onGesture:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onGesture(_arg0);
return true;
}
case TRANSACTION_clearAccessibilityCache:
{
data.enforceInterface(DESCRIPTOR);
this.clearAccessibilityCache();
return true;
}
case TRANSACTION_onKeyEvent:
{
data.enforceInterface(DESCRIPTOR);
android.view.KeyEvent _arg0;
if ((0!=data.readInt())) {
_arg0 = android.view.KeyEvent.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
int _arg1;
_arg1 = data.readInt();
this.onKeyEvent(_arg0, _arg1);
return true;
}
case TRANSACTION_onMagnificationChanged:
{
data.enforceInterface(DESCRIPTOR);
android.graphics.Region _arg0;
if ((0!=data.readInt())) {
_arg0 = android.graphics.Region.CREATOR.createFromParcel(data);
}
else {
_arg0 = null;
}
float _arg1;
_arg1 = data.readFloat();
float _arg2;
_arg2 = data.readFloat();
float _arg3;
_arg3 = data.readFloat();
this.onMagnificationChanged(_arg0, _arg1, _arg2, _arg3);
return true;
}
case TRANSACTION_onSoftKeyboardShowModeChanged:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onSoftKeyboardShowModeChanged(_arg0);
return true;
}
case TRANSACTION_onPerformGestureResult:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
this.onPerformGestureResult(_arg0, _arg1);
return true;
}
case TRANSACTION_onFingerprintCapturingGesturesChanged:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.onFingerprintCapturingGesturesChanged(_arg0);
return true;
}
case TRANSACTION_onFingerprintGesture:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
this.onFingerprintGesture(_arg0);
return true;
}
case TRANSACTION_onAccessibilityButtonClicked:
{
data.enforceInterface(DESCRIPTOR);
this.onAccessibilityButtonClicked();
return true;
}
case TRANSACTION_onAccessibilityButtonAvailabilityChanged:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.onAccessibilityButtonAvailabilityChanged(_arg0);
return true;
}
}
return super.onTransact(code, data, reply, flags);
