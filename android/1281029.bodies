class Builder
!!!7586949.java!!!	Builder()
                mMask = 0;
!!!7587077.java!!!	Builder(inout policy : StrictMode::ThreadPolicy)
                mMask = policy.mask;
!!!7587205.java!!!	detectAll() : StrictMode::ThreadPolicy::Builder
                detectDiskReads();
                detectDiskWrites();
                detectNetwork();

                final int targetSdk = VMRuntime.getRuntime().getTargetSdkVersion();
                if (targetSdk >= Build.VERSION_CODES.HONEYCOMB) {
                    detectCustomSlowCalls();
                }
                if (targetSdk >= Build.VERSION_CODES.M) {
                    detectResourceMismatches();
                }
                if (targetSdk >= Build.VERSION_CODES.O) {
                    detectUnbufferedIo();
                }
                return this;
!!!7587333.java!!!	permitAll() : StrictMode::ThreadPolicy::Builder
                return disable(ALL_THREAD_DETECT_BITS);
!!!7587461.java!!!	detectNetwork() : StrictMode::ThreadPolicy::Builder
                return enable(DETECT_NETWORK);
!!!7587589.java!!!	permitNetwork() : StrictMode::ThreadPolicy::Builder
                return disable(DETECT_NETWORK);
!!!7587717.java!!!	detectDiskReads() : StrictMode::ThreadPolicy::Builder
                return enable(DETECT_DISK_READ);
!!!7587845.java!!!	permitDiskReads() : StrictMode::ThreadPolicy::Builder
                return disable(DETECT_DISK_READ);
!!!7587973.java!!!	detectCustomSlowCalls() : StrictMode::ThreadPolicy::Builder
                return enable(DETECT_CUSTOM);
!!!7588101.java!!!	permitCustomSlowCalls() : StrictMode::ThreadPolicy::Builder
                return disable(DETECT_CUSTOM);
!!!7588229.java!!!	permitResourceMismatches() : StrictMode::ThreadPolicy::Builder
                return disable(DETECT_RESOURCE_MISMATCH);
!!!7588357.java!!!	detectUnbufferedIo() : StrictMode::ThreadPolicy::Builder
                return enable(DETECT_UNBUFFERED_IO);
!!!7588485.java!!!	permitUnbufferedIo() : StrictMode::ThreadPolicy::Builder
                return disable(DETECT_UNBUFFERED_IO);
!!!7588613.java!!!	detectResourceMismatches() : StrictMode::ThreadPolicy::Builder
                return enable(DETECT_RESOURCE_MISMATCH);
!!!7588741.java!!!	detectDiskWrites() : StrictMode::ThreadPolicy::Builder
                return enable(DETECT_DISK_WRITE);
!!!7588869.java!!!	permitDiskWrites() : StrictMode::ThreadPolicy::Builder
                return disable(DETECT_DISK_WRITE);
!!!7588997.java!!!	penaltyDialog() : StrictMode::ThreadPolicy::Builder
                return enable(PENALTY_DIALOG);
!!!7589125.java!!!	penaltyDeath() : StrictMode::ThreadPolicy::Builder
                return enable(PENALTY_DEATH);
!!!7589253.java!!!	penaltyDeathOnNetwork() : StrictMode::ThreadPolicy::Builder
                return enable(PENALTY_DEATH_ON_NETWORK);
!!!7589381.java!!!	penaltyFlashScreen() : StrictMode::ThreadPolicy::Builder
                return enable(PENALTY_FLASH);
!!!7589509.java!!!	penaltyLog() : StrictMode::ThreadPolicy::Builder
                return enable(PENALTY_LOG);
!!!7589637.java!!!	penaltyDropBox() : StrictMode::ThreadPolicy::Builder
                return enable(PENALTY_DROPBOX);
!!!7589765.java!!!	enable(in bit : int) : StrictMode::ThreadPolicy::Builder
                mMask |= bit;
                return this;
!!!7589893.java!!!	disable(in bit : int) : StrictMode::ThreadPolicy::Builder
                mMask &= ~bit;
                return this;
!!!7590021.java!!!	build() : StrictMode::ThreadPolicy
                // If there are detection bits set but no violation bits
                // set, enable simple logging.
                if (mMask != 0 &&
                    (mMask & (PENALTY_DEATH | PENALTY_LOG |
                              PENALTY_DROPBOX | PENALTY_DIALOG)) == 0) {
                    penaltyLog();
                }
                return new ThreadPolicy(mMask);
