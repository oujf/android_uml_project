class Proxy
!!!13433349.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13433477.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13433605.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13433733.java!!!	getInputDevice(in deviceId : int) : android.view.InputDevice
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.view.InputDevice _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
mRemote.transact(Stub.TRANSACTION_getInputDevice, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.view.InputDevice.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13433861.java!!!	getInputDeviceIds() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getInputDeviceIds, _data, _reply, 0);
_reply.readException();
_result = _reply.createIntArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13433989.java!!!	hasKeys(in deviceId : int, in sourceMask : int, inout keyCodes : int [[]], inout keyExists : boolean [[]]) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeInt(sourceMask);
_data.writeIntArray(keyCodes);
if ((keyExists==null)) {
_data.writeInt(-1);
}
else {
_data.writeInt(keyExists.length);
}
mRemote.transact(Stub.TRANSACTION_hasKeys, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
_reply.readBooleanArray(keyExists);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13434117.java!!!	tryPointerSpeed(in speed : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(speed);
mRemote.transact(Stub.TRANSACTION_tryPointerSpeed, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13434245.java!!!	injectInputEvent(inout ev : android.view.InputEvent, in mode : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((ev!=null)) {
_data.writeInt(1);
ev.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(mode);
mRemote.transact(Stub.TRANSACTION_injectInputEvent, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13434373.java!!!	getTouchCalibrationForInputDevice(inout inputDeviceDescriptor : java.lang.String, in rotation : int) : android.hardware.input.TouchCalibration
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.TouchCalibration _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
_data.writeInt(rotation);
mRemote.transact(Stub.TRANSACTION_getTouchCalibrationForInputDevice, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.hardware.input.TouchCalibration.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13434501.java!!!	setTouchCalibrationForInputDevice(inout inputDeviceDescriptor : java.lang.String, in rotation : int, inout calibration : android.hardware.input.TouchCalibration) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
_data.writeInt(rotation);
if ((calibration!=null)) {
_data.writeInt(1);
calibration.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setTouchCalibrationForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13434629.java!!!	getKeyboardLayouts() : android.hardware.input.KeyboardLayout
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.KeyboardLayout[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getKeyboardLayouts, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArray(android.hardware.input.KeyboardLayout.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13434757.java!!!	getKeyboardLayoutsForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier) : android.hardware.input.KeyboardLayout
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.KeyboardLayout[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_getKeyboardLayoutsForInputDevice, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArray(android.hardware.input.KeyboardLayout.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13434885.java!!!	getKeyboardLayout(inout keyboardLayoutDescriptor : java.lang.String) : android.hardware.input.KeyboardLayout
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.KeyboardLayout _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_getKeyboardLayout, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.hardware.input.KeyboardLayout.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13435013.java!!!	getCurrentKeyboardLayoutForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier) : java.lang.String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.lang.String _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_getCurrentKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
_result = _reply.readString();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13435141.java!!!	setCurrentKeyboardLayoutForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_setCurrentKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13435269.java!!!	getEnabledKeyboardLayoutsForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier) : java.lang.String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.lang.String[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_getEnabledKeyboardLayoutsForInputDevice, _data, _reply, 0);
_reply.readException();
_result = _reply.createStringArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13435397.java!!!	addKeyboardLayoutForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_addKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13435525.java!!!	removeKeyboardLayoutForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_removeKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13435653.java!!!	getKeyboardLayoutForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier, inout imeInfo : android.view.inputmethod.InputMethodInfo, inout imeSubtype : android.view.inputmethod.InputMethodSubtype) : android.hardware.input.KeyboardLayout
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.KeyboardLayout _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((imeInfo!=null)) {
_data.writeInt(1);
imeInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((imeSubtype!=null)) {
_data.writeInt(1);
imeSubtype.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_getKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.hardware.input.KeyboardLayout.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13435781.java!!!	setKeyboardLayoutForInputDevice(inout identifier : android.hardware.input.InputDeviceIdentifier, inout imeInfo : android.view.inputmethod.InputMethodInfo, inout imeSubtype : android.view.inputmethod.InputMethodSubtype, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((identifier!=null)) {
_data.writeInt(1);
identifier.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((imeInfo!=null)) {
_data.writeInt(1);
imeInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((imeSubtype!=null)) {
_data.writeInt(1);
imeSubtype.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_setKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13435909.java!!!	registerInputDevicesChangedListener(inout listener : IInputDevicesChangedListener) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((listener!=null))?(listener.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerInputDevicesChangedListener, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13436037.java!!!	isInTabletMode() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_isInTabletMode, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13436165.java!!!	registerTabletModeChangedListener(inout listener : ITabletModeChangedListener) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((listener!=null))?(listener.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerTabletModeChangedListener, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13436293.java!!!	vibrate(in deviceId : int, inout pattern : long [[]], in repeat : int, inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeLongArray(pattern);
_data.writeInt(repeat);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_vibrate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13436421.java!!!	cancelVibrate(in deviceId : int, inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_cancelVibrate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13436549.java!!!	setPointerIconType(in typeId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(typeId);
mRemote.transact(Stub.TRANSACTION_setPointerIconType, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13436677.java!!!	setCustomPointerIcon(inout icon : android.view.PointerIcon) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((icon!=null)) {
_data.writeInt(1);
icon.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setCustomPointerIcon, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13436805.java!!!	requestPointerCapture(inout windowToken : android.os.IBinder, inout enabled : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(windowToken);
_data.writeInt(((enabled)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_requestPointerCapture, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
