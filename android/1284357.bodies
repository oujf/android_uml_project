class SystemVibrator
!!!7609733.java!!!	SystemVibrator()
        mService = IVibratorService.Stub.asInterface(ServiceManager.getService("vibrator"));
!!!7609861.java!!!	SystemVibrator(inout context : Context)
        super(context);
        mService = IVibratorService.Stub.asInterface(ServiceManager.getService("vibrator"));
!!!7609989.java!!!	hasVibrator() : boolean
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return false;
        }
        try {
            return mService.hasVibrator();
        } catch (RemoteException e) {
        }
        return false;
!!!7610117.java!!!	hasAmplitudeControl() : boolean
        if (mService == null) {
            Log.w(TAG, "Failed to check amplitude control; no vibrator service.");
            return false;
        }
        try {
            return mService.hasAmplitudeControl();
        } catch (RemoteException e) {
        }
        return false;
!!!7610245.java!!!	vibrate(in uid : int, in opPkg : String, inout effect : VibrationEffect, inout attributes : AudioAttributes) : void
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return;
        }
        try {
            mService.vibrate(uid, opPkg, effect, usageForAttributes(attributes), mToken);
        } catch (RemoteException e) {
            Log.w(TAG, "Failed to vibrate.", e);
        }
!!!7610373.java!!!	usageForAttributes(inout attributes : AudioAttributes) : int
        return attributes != null ? attributes.getUsage() : AudioAttributes.USAGE_UNKNOWN;
!!!7610501.java!!!	cancel() : void
        if (mService == null) {
            return;
        }
        try {
            mService.cancelVibrate(mToken);
        } catch (RemoteException e) {
            Log.w(TAG, "Failed to cancel vibration.", e);
        }
