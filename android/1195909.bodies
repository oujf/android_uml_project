class GLThreadManager
!!!6713477.java!!!	GLThreadManager(in cameraId : int, in facing : int, inout state : CameraDeviceState)
        mTextureRenderer = new SurfaceTextureRenderer(facing);
        TAG = String.format("CameraDeviceGLThread-%d", cameraId);
        mGLHandlerThread = new RequestHandlerThread(TAG, mGLHandlerCb);
        mDeviceState = state;
!!!6713605.java!!!	start() : void
        mGLHandlerThread.start();
!!!6713733.java!!!	waitUntilStarted() : void
        mGLHandlerThread.waitUntilStarted();
!!!6713861.java!!!	quit() : void
        Handler handler = mGLHandlerThread.getHandler();
        handler.sendMessageAtFrontOfQueue(handler.obtainMessage(MSG_CLEANUP));
        mGLHandlerThread.quitSafely();
        try {
            mGLHandlerThread.join();
        } catch (InterruptedException e) {
            Log.e(TAG, String.format("Thread %s (%d) interrupted while quitting.",
                    mGLHandlerThread.getName(), mGLHandlerThread.getId()));
        }
!!!6713989.java!!!	queueNewFrame() : void
        Handler handler = mGLHandlerThread.getHandler();

        /**
         * Avoid queuing more than one new frame.  If we are not consuming faster than frames
         * are produced, drop frames rather than allowing the queue to back up.
         */
        if (!handler.hasMessages(MSG_NEW_FRAME)) {
            handler.sendMessage(handler.obtainMessage(MSG_NEW_FRAME));
        } else {
            Log.e(TAG, "GLThread dropping frame.  Not consuming frames quickly enough!");
        }
!!!6714117.java!!!	setConfigurationAndWait(inout surfaces : Collection<Pair<Surface, Size>>, inout collector : CaptureCollector) : void
        checkNotNull(collector, "collector must not be null");
        Handler handler = mGLHandlerThread.getHandler();

        final ConditionVariable condition = new ConditionVariable(/*closed*/false);
        ConfigureHolder configure = new ConfigureHolder(condition, surfaces, collector);

        Message m = handler.obtainMessage(MSG_NEW_CONFIGURATION, /*arg1*/0, /*arg2*/0, configure);
        handler.sendMessage(m);

        // Block until configuration applied.
        condition.block();
!!!6714245.java!!!	getCurrentSurfaceTexture() : SurfaceTexture
        return mTextureRenderer.getSurfaceTexture();
!!!6714373.java!!!	ignoreNewFrames() : void
        mGLHandlerThread.getHandler().sendEmptyMessage(MSG_DROP_FRAMES);
!!!6714501.java!!!	waitUntilIdle() : void
        mGLHandlerThread.waitUntilIdle();
!!!6714629.java!!!	allowNewFrames() : void
        mGLHandlerThread.getHandler().sendEmptyMessage(MSG_ALLOW_FRAMES);
