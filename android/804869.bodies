class AutoTileManager
!!!3890309.java!!!	AutoTileManager(inout context : Context, inout host : QSTileHost)
        mContext = context;
        mHost = host;
        mHandler = new Handler((Looper) Dependency.get(Dependency.BG_LOOPER));
        if (!Prefs.getBoolean(context, Key.QS_HOTSPOT_ADDED, false)) {
            Dependency.get(HotspotController.class).addCallback(mHotspotCallback);
        }
        if (!Prefs.getBoolean(context, Key.QS_DATA_SAVER_ADDED, false)) {
            Dependency.get(DataSaverController.class).addCallback(mDataSaverListener);
        }
        if (!Prefs.getBoolean(context, Key.QS_INVERT_COLORS_ADDED, false)) {
            mColorsSetting = new SecureSetting(mContext, mHandler,
                    Secure.ACCESSIBILITY_DISPLAY_INVERSION_ENABLED) {
                @Override
                protected void handleValueChanged(int value, boolean observedChange) {
                    if (value != 0) {
                        mHost.addTile("inversion");
                        Prefs.putBoolean(mContext, Key.QS_INVERT_COLORS_ADDED, true);
                        mHandler.post(() -> mColorsSetting.setListening(false));
                    }
                }
            };
            mColorsSetting.setListening(true);
        }
        if (!Prefs.getBoolean(context, Key.QS_WORK_ADDED, false)) {
            Dependency.get(ManagedProfileController.class).addCallback(mProfileCallback);
        }

        if (!Prefs.getBoolean(context, Key.QS_NIGHTDISPLAY_ADDED, false)
                && NightDisplayController.isAvailable(mContext)) {
            Dependency.get(NightDisplayController.class).setListener(mNightDisplayCallback);
        }
!!!3890437.java!!!	destroy() : void
        mColorsSetting.setListening(false);
        Dependency.get(HotspotController.class).removeCallback(mHotspotCallback);
        Dependency.get(DataSaverController.class).removeCallback(mDataSaverListener);
        Dependency.get(ManagedProfileController.class).removeCallback(mProfileCallback);
        Dependency.get(NightDisplayController.class).setListener(null);
