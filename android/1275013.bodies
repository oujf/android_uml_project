class HwParcel
!!!7476485.java!!!	HwParcel(inout allocate : boolean)
        native_setup(allocate);

        sNativeRegistry.registerNativeAllocation(
                this,
                mNativeContext);
!!!7476613.java!!!	HwParcel()
        native_setup(true /* allocate */);

        sNativeRegistry.registerNativeAllocation(
                this,
                mNativeContext);
!!!7478917.java!!!	writeBoolVector(inout val : ArrayList<Boolean>) : void
        final int n = val.size();
        boolean[] array = new boolean[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeBoolVector(array);
!!!7479045.java!!!	writeInt8Vector(inout val : ArrayList<Byte>) : void
        final int n = val.size();
        byte[] array = new byte[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeInt8Vector(array);
!!!7479173.java!!!	writeInt16Vector(inout val : ArrayList<Short>) : void
        final int n = val.size();
        short[] array = new short[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeInt16Vector(array);
!!!7479301.java!!!	writeInt32Vector(inout val : ArrayList<Integer>) : void
        final int n = val.size();
        int[] array = new int[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeInt32Vector(array);
!!!7479429.java!!!	writeInt64Vector(inout val : ArrayList<Long>) : void
        final int n = val.size();
        long[] array = new long[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeInt64Vector(array);
!!!7479557.java!!!	writeFloatVector(inout val : ArrayList<Float>) : void
        final int n = val.size();
        float[] array = new float[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeFloatVector(array);
!!!7479685.java!!!	writeDoubleVector(inout val : ArrayList<Double>) : void
        final int n = val.size();
        double[] array = new double[n];
        for (int i = 0; i < n; ++i) {
            array[i] = val.get(i);
        }

        writeDoubleVector(array);
!!!7479813.java!!!	writeStringVector(inout val : ArrayList<String>) : void
        writeStringVector(val.toArray(new String[val.size()]));
!!!7482245.java!!!	readBoolVector() : ArrayList<Boolean>
        Boolean[] array = HwBlob.wrapArray(readBoolVectorAsArray());

        return new ArrayList<Boolean>(Arrays.asList(array));
!!!7482373.java!!!	readInt8Vector() : ArrayList<Byte>
        Byte[] array = HwBlob.wrapArray(readInt8VectorAsArray());

        return new ArrayList<Byte>(Arrays.asList(array));
!!!7482501.java!!!	readInt16Vector() : ArrayList<Short>
        Short[] array = HwBlob.wrapArray(readInt16VectorAsArray());

        return new ArrayList<Short>(Arrays.asList(array));
!!!7482629.java!!!	readInt32Vector() : ArrayList<Integer>
        Integer[] array = HwBlob.wrapArray(readInt32VectorAsArray());

        return new ArrayList<Integer>(Arrays.asList(array));
!!!7482757.java!!!	readInt64Vector() : ArrayList<Long>
        Long[] array = HwBlob.wrapArray(readInt64VectorAsArray());

        return new ArrayList<Long>(Arrays.asList(array));
!!!7482885.java!!!	readFloatVector() : ArrayList<Float>
        Float[] array = HwBlob.wrapArray(readFloatVectorAsArray());

        return new ArrayList<Float>(Arrays.asList(array));
!!!7483013.java!!!	readDoubleVector() : ArrayList<Double>
        Double[] array = HwBlob.wrapArray(readDoubleVectorAsArray());

        return new ArrayList<Double>(Arrays.asList(array));
!!!7483141.java!!!	readStringVector() : ArrayList<String>
        return new ArrayList<String>(Arrays.asList(readStringVectorAsArray()));
