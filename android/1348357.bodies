class Ranking
!!!8015877.java!!!	getKey() : String
            return mKey;
!!!8016005.java!!!	getRank() : int
            return mRank;
!!!8016133.java!!!	isAmbient() : boolean
            return mIsAmbient;
!!!8016261.java!!!	getVisibilityOverride() : int
            return mVisibilityOverride;
!!!8016389.java!!!	getSuppressedVisualEffects() : int
            return mSuppressedVisualEffects;
!!!8016517.java!!!	matchesInterruptionFilter() : boolean
            return mMatchesInterruptionFilter;
!!!8016645.java!!!	getImportance() : int
            return mImportance;
!!!8016773.java!!!	getImportanceExplanation() : CharSequence
            return mImportanceExplanation;
!!!8016901.java!!!	getOverrideGroupKey() : String
            return mOverrideGroupKey;
!!!8017029.java!!!	getChannel() : NotificationChannel
            return mChannel;
!!!8017157.java!!!	getAdditionalPeople() : List<String>
            return mOverridePeople;
!!!8017285.java!!!	getSnoozeCriteria() : SnoozeCriterion
            return mSnoozeCriteria;
!!!8017413.java!!!	canShowBadge() : boolean
            return mShowBadge;
!!!8017541.java!!!	populate(in key : String, in rank : int, inout matchesInterruptionFilter : boolean, in visibilityOverride : int, in suppressedVisualEffects : int, in importance : int, inout explanation : CharSequence, in overrideGroupKey : String, inout channel : NotificationChannel, inout overridePeople : ArrayList<String>, inout snoozeCriteria : ArrayList<SnoozeCriterion>, inout showBadge : boolean) : void
            mKey = key;
            mRank = rank;
            mIsAmbient = importance < NotificationManager.IMPORTANCE_LOW;
            mMatchesInterruptionFilter = matchesInterruptionFilter;
            mVisibilityOverride = visibilityOverride;
            mSuppressedVisualEffects = suppressedVisualEffects;
            mImportance = importance;
            mImportanceExplanation = explanation;
            mOverrideGroupKey = overrideGroupKey;
            mChannel = channel;
            mOverridePeople = overridePeople;
            mSnoozeCriteria = snoozeCriteria;
            mShowBadge = showBadge;
!!!8017669.java!!!	importanceToString(in importance : int) : String
            switch (importance) {
                case NotificationManager.IMPORTANCE_UNSPECIFIED:
                    return "UNSPECIFIED";
                case NotificationManager.IMPORTANCE_NONE:
                    return "NONE";
                case NotificationManager.IMPORTANCE_MIN:
                    return "MIN";
                case NotificationManager.IMPORTANCE_LOW:
                    return "LOW";
                case NotificationManager.IMPORTANCE_DEFAULT:
                    return "DEFAULT";
                case NotificationManager.IMPORTANCE_HIGH:
                case NotificationManager.IMPORTANCE_MAX:
                    return "HIGH";
                default:
                    return "UNKNOWN(" + String.valueOf(importance) + ")";
            }
