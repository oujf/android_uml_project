class WindowId
!!!8885125.java!!!	isFocused() : boolean
        try {
            return mToken.isFocused();
        } catch (RemoteException e) {
            return false;
        }
!!!8885253.java!!!	registerFocusObserver(inout observer : WindowId::FocusObserver) : void
        synchronized (observer.mRegistrations) {
            if (observer.mRegistrations.containsKey(mToken.asBinder())) {
                throw new IllegalStateException(
                        "Focus observer already registered with input token");
            }
            observer.mRegistrations.put(mToken.asBinder(), this);
            try {
                mToken.registerFocusObserver(observer.mIObserver);
            } catch (RemoteException e) {
            }
        }
!!!8885381.java!!!	unregisterFocusObserver(inout observer : WindowId::FocusObserver) : void
        synchronized (observer.mRegistrations) {
            if (observer.mRegistrations.remove(mToken.asBinder()) == null) {
                throw new IllegalStateException("Focus observer not registered with input token");
            }
            try {
                mToken.unregisterFocusObserver(observer.mIObserver);
            } catch (RemoteException e) {
            }
        }
!!!8885509.java!!!	equals(inout otherObj : Object) : boolean
        if (otherObj instanceof WindowId) {
            return mToken.asBinder().equals(((WindowId) otherObj)
                    .mToken.asBinder());
        }
        return false;
!!!8885637.java!!!	hashCode() : int
        return mToken.asBinder().hashCode();
!!!8885765.java!!!	toString() : String
        StringBuilder sb = new StringBuilder(128);
        sb.append("IntentSender{");
        sb.append(Integer.toHexString(System.identityHashCode(this)));
        sb.append(": ");
        sb.append(mToken != null ? mToken.asBinder() : null);
        sb.append('}');
        return sb.toString();
!!!8885893.java!!!	describeContents() : int
        return 0;
!!!8886021.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeStrongBinder(mToken.asBinder());
!!!8886149.java!!!	getTarget() : IWindowId
        return mToken;
!!!8886277.java!!!	WindowId(inout target : IWindowId)
        mToken = target;
!!!8886405.java!!!	WindowId(inout target : IBinder)
        mToken = IWindowId.Stub.asInterface(target);
