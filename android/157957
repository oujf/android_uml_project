format 214
"utils" // source::frameworks::av::media::libaaudio::examples::utils
  revision 1
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/media/libaaudio/examples/utils/"
  cpp_src_dir "C:/Users/Jeff/Documents/aosp/frameworks/av/media/libaaudio/examples/utils/"
  classview 152069 "utils"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 272773 "AAudioSimplePlayer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple wrapper for AAudio that opens an output stream either in callback or blocking write mode.
"
      operation 652037 "AAudioSimplePlayer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 652165 "~AAudioSimplePlayer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
        close();
    };
"
	
	
	
	
      end

      operation 652293 "setSharingMode"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "requestedSharingMode" type class_ref 272901 // aaudio_sharing_mode_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mRequestedSharingMode = requestedSharingMode;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Call this before calling open().
@param requestedSharingMode
"
      end

      operation 652421 "setPerformanceMode"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "requestedPerformanceMode" type class_ref 273029 // aaudio_performance_mode_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mRequestedPerformanceMode = requestedPerformanceMode;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Call this before calling open().
@param requestedPerformanceMode
"
      end

      operation 652549 "getFramesPerSecond"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream == nullptr) {
            return AAUDIO_ERROR_INVALID_STATE;
        }
        return AAudioStream_getSampleRate(mStream);;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Also known as \"sample rate\"
Only call this after open() has been called.
"
      end

      operation 652677 "getChannelCount"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream == nullptr) {
            return AAUDIO_ERROR_INVALID_STATE;
        }
        return AAudioStream_getChannelCount(mStream);;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Only call this after open() has been called.
"
      end

      operation 652805 "open"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 6
	  param in name "channelCount" explicit_type "int"
	  param in name "sampSampleRate" explicit_type "int"
	  param in name "format" type class_ref 273285 // aaudio_format_t
	  param in name "dataProc" type class_ref 273413 // AAudioStream_dataCallback
	  param in name "errorProc" type class_ref 273541 // AAudioStream_errorCallback
	  param inout name "userContext" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAUDIO_OK;

        // Use an AAudioStreamBuilder to contain requested parameters.
        result = AAudio_createStreamBuilder(&mBuilder);
        if (result != AAUDIO_OK) return result;

        //AAudioStreamBuilder_setSampleRate(mBuilder, 44100);
        AAudioStreamBuilder_setPerformanceMode(mBuilder, mRequestedPerformanceMode);
        AAudioStreamBuilder_setSharingMode(mBuilder, mRequestedSharingMode);
        if (dataProc != nullptr) {
            AAudioStreamBuilder_setDataCallback(mBuilder, dataProc, userContext);
        }
        if (errorProc != nullptr) {
            AAudioStreamBuilder_setErrorCallback(mBuilder, errorProc, userContext);
        }
        AAudioStreamBuilder_setChannelCount(mBuilder, channelCount);
        AAudioStreamBuilder_setSampleRate(mBuilder, sampSampleRate);
        AAudioStreamBuilder_setFormat(mBuilder, format);
        //AAudioStreamBuilder_setFramesPerDataCallback(mBuilder, CALLBACK_SIZE_FRAMES);
        AAudioStreamBuilder_setBufferCapacityInFrames(mBuilder, 48 * 8);

        //aaudio_performance_mode_t perfMode = AAUDIO_PERFORMANCE_MODE_NONE;
        aaudio_performance_mode_t perfMode = AAUDIO_PERFORMANCE_MODE_LOW_LATENCY;
        //aaudio_performance_mode_t perfMode = AAUDIO_PERFORMANCE_MODE_POWER_SAVING;
        AAudioStreamBuilder_setPerformanceMode(mBuilder, perfMode);

        // Open an AAudioStream using the Builder.
        result = AAudioStreamBuilder_openStream(mBuilder, &mStream);
        if (result != AAUDIO_OK) goto finish1;

        printf(\"AAudioStream_getFramesPerBurst() = %d\\n\",
               AAudioStream_getFramesPerBurst(mStream));
        printf(\"AAudioStream_getBufferSizeInFrames() = %d\\n\",
               AAudioStream_getBufferSizeInFrames(mStream));
        printf(\"AAudioStream_getBufferCapacityInFrames() = %d\\n\",
               AAudioStream_getBufferCapacityInFrames(mStream));
        printf(\"AAudioStream_getPerformanceMode() = %d, requested %d\\n\",
               AAudioStream_getPerformanceMode(mStream), perfMode);

     finish1:
        AAudioStreamBuilder_delete(mBuilder);
        mBuilder = nullptr;
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Open a stream
"
      end

      operation 652933 "close"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream != nullptr) {
            printf(\"call AAudioStream_close(%p)\\n\", mStream);  fflush(stdout);
            AAudioStream_close(mStream);
            mStream = nullptr;
            AAudioStreamBuilder_delete(mBuilder);
            mBuilder = nullptr;
        }
        return AAUDIO_OK;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 653061 "prime"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        int32_t samplesPerFrame = AAudioStream_getChannelCount(mStream);
        const int numFrames = 32;
        float zeros[numFrames * samplesPerFrame];
        memset(zeros, 0, sizeof(zeros));
        aaudio_result_t result = numFrames;
        while (result == numFrames) {
            result = AAudioStream_write(mStream, zeros, numFrames, 0);
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Write zero data to fill up the buffer and prevent underruns."
      end

      operation 653189 "start"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAudioStream_requestStart(mStream);
        if (result != AAUDIO_OK) {
            printf(\"ERROR - AAudioStream_requestStart() returned %d %s\\n\",
                    result, AAudio_convertResultToText(result));
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Start the stream. AAudio will start calling your callback function."
      end

      operation 653317 "stop"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAudioStream_requestStop(mStream);
        if (result != AAUDIO_OK) {
            printf(\"ERROR - AAudioStream_requestStop() returned %d %s\\n\",
                    result, AAudio_convertResultToText(result));
        }
        int32_t xRunCount = AAudioStream_getXRunCount(mStream);
        printf(\"AAudioStream_getXRunCount %d\\n\", xRunCount);
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Stop the stream. AAudio will stop calling your callback function."
      end

      operation 653445 "getStream"
	const cpp_inline public return_type class_ref 273669 // AAudioStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mStream;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      classrelation 309253 // mBuilder (<unidirectional association>)
	relation 309253 --->
	  a role_name "mBuilder" init_value "=  nullptr" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 309253 // mBuilder (<unidirectional association>)
	  b parent class_ref 273797 // AAudioStreamBuilder
      end

      classrelation 309381 // mStream (<unidirectional association>)
	relation 309381 --->
	  a role_name "mStream" init_value "=  nullptr" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 309381 // mStream (<unidirectional association>)
	  b parent class_ref 273669 // AAudioStream
      end

      classrelation 309509 // mRequestedSharingMode (<directional composition>)
	relation 309509 *-->
	  a role_name "mRequestedSharingMode" init_value "=  SHARING_MODE" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 309509 // mRequestedSharingMode (<directional composition>)
	  b parent class_ref 272901 // aaudio_sharing_mode_t
      end

      classrelation 309637 // mRequestedPerformanceMode (<directional composition>)
	relation 309637 *-->
	  a role_name "mRequestedPerformanceMode" init_value "=  PERFORMANCE_MODE" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 309637 // mRequestedPerformanceMode (<directional composition>)
	  b parent class_ref 273029 // aaudio_performance_mode_t
      end
    end

    class 273925 "SineThreadedData_s"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 309765 // sineOsc1 (<directional composition>)
	relation 309765 *-->
	  a role_name "sineOsc1" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${readonly}${attribute}${type} ${name};
"
	    classrelation_ref 309765 // sineOsc1 (<directional composition>)
	  b parent class_ref 274053 // SineGenerator
      end

      classrelation 309893 // sineOsc2 (<directional composition>)
	relation 309893 *-->
	  a role_name "sineOsc2" public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${readonly}${attribute}${type} ${name};
"
	    classrelation_ref 309893 // sineOsc2 (<directional composition>)
	  b parent class_ref 274053 // SineGenerator
      end

      attribute 442117 "scheduler"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 442245 "schedulerChecked"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end
    end

    class 274053 "SineGenerator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      operation 655365 "SineGenerator"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 655493 "~SineGenerator"
	cpp_virtual cpp_defaulted public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 655621 "setup"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "frequency" explicit_type "double"
	  param in name "frameRate" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mFrameRate = frameRate;
        mPhaseIncrement = frequency * M_PI * 2 / frameRate;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 655749 "setSweep"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "frequencyLow" explicit_type "double"
	  param in name "frequencyHigh" explicit_type "double"
	  param in name "seconds" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        mPhaseIncrementLow = frequencyLow * M_PI * 2 / mFrameRate;
        mPhaseIncrementHigh = frequencyHigh * M_PI * 2 / mFrameRate;

        double numFrames = seconds * mFrameRate;
        mUpScaler = pow((frequencyHigh / frequencyLow), (1.0 / numFrames));
        mDownScaler = 1.0 / mUpScaler;
        mGoingUp = true;
        mSweeping = true;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 655877 "render"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "buffer" explicit_type "int16_t"
	  param in name "channelStride" explicit_type "int32_t"
	  param in name "numFrames" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        int sampleIndex = 0;
        for (int i = 0; i < numFrames; i++) {
            buffer[sampleIndex] = (int16_t) (32767 * sin(mPhase) * mAmplitude);
            sampleIndex += channelStride;
            advancePhase();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 656005 "render"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "buffer" explicit_type "float"
	  param in name "channelStride" explicit_type "int32_t"
	  param in name "numFrames" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        int sampleIndex = 0;
        for (int i = 0; i < numFrames; i++) {
            buffer[sampleIndex] = sin(mPhase) * mAmplitude;
            sampleIndex += channelStride;
            advancePhase();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 656133 "advancePhase"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mPhase += mPhaseIncrement;
        if (mPhase > M_PI * 2) {
            mPhase -= M_PI * 2;
        }
        if (mSweeping) {
            if (mGoingUp) {
                mPhaseIncrement *= mUpScaler;
                if (mPhaseIncrement > mPhaseIncrementHigh) {
                    mGoingUp = false;
                }
            } else {
                mPhaseIncrement *= mDownScaler;
                if (mPhaseIncrement < mPhaseIncrementLow) {
                    mGoingUp = true;
                }
            }
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 442501 "mAmplitude"
	private explicit_type "double"
	init_value "=  0.05"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " unitless scaler"
      end

      attribute 442629 "mPhase"
	private explicit_type "double"
	init_value "=  0.0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 442757 "mPhaseIncrement"
	private explicit_type "double"
	init_value "=  440 * M_PI * 2 / 48000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 442885 "mFrameRate"
	private explicit_type "double"
	init_value "=  48000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 443013 "mPhaseIncrementLow"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 443141 "mPhaseIncrementHigh"
	private explicit_type "double"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 443269 "mUpScaler"
	private explicit_type "double"
	init_value "=  1.0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 443397 "mDownScaler"
	private explicit_type "double"
	init_value "=  1.0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 443525 "mGoingUp"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 443653 "mSweeping"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end
    end

    class 274181 "SineThreadedData_t"
      visibility package stereotype "typedef" base_type class_ref 273925 // SineThreadedData_s
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 274309 "AAudioSimpleRecorder"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Simple wrapper for AAudio that opens an input stream either in callback or blocking read mode.
"
      operation 653573 "AAudioSimpleRecorder"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 653701 "~AAudioSimpleRecorder"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw}${abstract} {
        close();
    };
"
	
	
	
	
      end

      operation 653829 "setSharingMode"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "requestedSharingMode" type class_ref 272901 // aaudio_sharing_mode_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mRequestedSharingMode = requestedSharingMode;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Call this before calling open().
@param requestedSharingMode
"
      end

      operation 653957 "setPerformanceMode"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "requestedPerformanceMode" type class_ref 273029 // aaudio_performance_mode_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mRequestedPerformanceMode = requestedPerformanceMode;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Call this before calling open().
@param requestedPerformanceMode
"
      end

      operation 654085 "getFramesPerSecond"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream == nullptr) {
            return AAUDIO_ERROR_INVALID_STATE;
        }
        return AAudioStream_getSampleRate(mStream);;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Also known as \"sample rate\"
Only call this after open() has been called.
"
      end

      operation 654213 "getSamplesPerFrame"
	cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream == nullptr) {
            return AAUDIO_ERROR_INVALID_STATE;
        }
        return AAudioStream_getSamplesPerFrame(mStream);;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Only call this after open() has been called.
"
      end

      operation 654341 "getFramesRead"
	cpp_inline public explicit_return_type "int64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream == nullptr) {
            return AAUDIO_ERROR_INVALID_STATE;
        }
        return AAudioStream_getFramesRead(mStream);;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Only call this after open() has been called.
"
      end

      operation 654469 "open"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 6
	  param in name "channelCount" explicit_type "int"
	  param in name "sampSampleRate" explicit_type "int"
	  param in name "format" type class_ref 273285 // aaudio_format_t
	  param in name "dataProc" type class_ref 273413 // AAudioStream_dataCallback
	  param in name "errorProc" type class_ref 273541 // AAudioStream_errorCallback
	  param inout name "userContext" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAUDIO_OK;

        // Use an AAudioStreamBuilder to contain requested parameters.
        result = AAudio_createStreamBuilder(&mBuilder);
        if (result != AAUDIO_OK) return result;

        AAudioStreamBuilder_setDirection(mBuilder, AAUDIO_DIRECTION_INPUT);
        AAudioStreamBuilder_setPerformanceMode(mBuilder, mRequestedPerformanceMode);
        AAudioStreamBuilder_setSharingMode(mBuilder, mRequestedSharingMode);
        if (dataProc != nullptr) {
            AAudioStreamBuilder_setDataCallback(mBuilder, dataProc, userContext);
        }
        if (errorProc != nullptr) {
            AAudioStreamBuilder_setErrorCallback(mBuilder, errorProc, userContext);
        }
        AAudioStreamBuilder_setChannelCount(mBuilder, channelCount);
        AAudioStreamBuilder_setSampleRate(mBuilder, sampSampleRate);
        AAudioStreamBuilder_setFormat(mBuilder, format);

        // Open an AAudioStream using the Builder.
        result = AAudioStreamBuilder_openStream(mBuilder, &mStream);
        if (result != AAUDIO_OK) {
            fprintf(stderr, \"ERROR - AAudioStreamBuilder_openStream() returned %d %s\\n\",
                    result, AAudio_convertResultToText(result));
            goto finish1;
        }

        printf(\"AAudioStream_getFramesPerBurst() = %d\\n\",
               AAudioStream_getFramesPerBurst(mStream));
        printf(\"AAudioStream_getBufferSizeInFrames() = %d\\n\",
               AAudioStream_getBufferSizeInFrames(mStream));
        printf(\"AAudioStream_getBufferCapacityInFrames() = %d\\n\",
               AAudioStream_getBufferCapacityInFrames(mStream));
        return result;

     finish1:
        AAudioStreamBuilder_delete(mBuilder);
        mBuilder = nullptr;
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Open a stream
"
      end

      operation 654597 "close"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mStream != nullptr) {
            printf(\"call AAudioStream_close(%p)\\n\", mStream);  fflush(stdout);
            AAudioStream_close(mStream);
            mStream = nullptr;
            AAudioStreamBuilder_delete(mBuilder);
            mBuilder = nullptr;
        }
        return AAUDIO_OK;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 654725 "prime"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        int32_t samplesPerFrame = AAudioStream_getSamplesPerFrame(mStream);
        const int numFrames = 32; // arbitrary
        float zeros[numFrames * samplesPerFrame];
        memset(zeros, 0, sizeof(zeros));
        aaudio_result_t result = numFrames;
        while (result == numFrames) {
            result = AAudioStream_write(mStream, zeros, numFrames, 0);
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Write zero data to fill up the buffer and prevent underruns."
      end

      operation 654853 "start"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAudioStream_requestStart(mStream);
        if (result != AAUDIO_OK) {
            fprintf(stderr, \"ERROR - AAudioStream_requestStart() returned %d %s\\n\",
                    result, AAudio_convertResultToText(result));
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Start the stream. AAudio will start calling your callback function."
      end

      operation 654981 "stop"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAudioStream_requestStop(mStream);
        if (result != AAUDIO_OK) {
            fprintf(stderr, \"ERROR - AAudioStream_requestStop() returned %d %s\\n\",
                    result, AAudio_convertResultToText(result));
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Stop the stream. AAudio will stop calling your callback function."
      end

      operation 655109 "pause"
	cpp_inline public return_type class_ref 273157 // aaudio_result_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        aaudio_result_t result = AAudioStream_requestPause(mStream);
        if (result != AAUDIO_OK) {
            fprintf(stderr, \"ERROR - AAudioStream_requestPause() returned %d %s\\n\",
                    result, AAudio_convertResultToText(result));
        }
        return result;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Pause the stream. AAudio will stop calling your callback function."
      end

      operation 655237 "getStream"
	const cpp_inline public return_type class_ref 273669 // AAudioStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mStream;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      classrelation 310021 // mBuilder (<unidirectional association>)
	relation 310021 --->
	  a role_name "mBuilder" init_value "=  nullptr" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 310021 // mBuilder (<unidirectional association>)
	  b parent class_ref 273797 // AAudioStreamBuilder
      end

      classrelation 310149 // mStream (<unidirectional association>)
	relation 310149 --->
	  a role_name "mStream" init_value "=  nullptr" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 310149 // mStream (<unidirectional association>)
	  b parent class_ref 273669 // AAudioStream
      end

      classrelation 310277 // mRequestedSharingMode (<directional composition>)
	relation 310277 *-->
	  a role_name "mRequestedSharingMode" init_value "=  SHARING_MODE" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 310277 // mRequestedSharingMode (<directional composition>)
	  b parent class_ref 272901 // aaudio_sharing_mode_t
      end

      classrelation 310405 // mRequestedPerformanceMode (<directional composition>)
	relation 310405 *-->
	  a role_name "mRequestedPerformanceMode" init_value "=  PERFORMANCE_MODE" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 310405 // mRequestedPerformanceMode (<directional composition>)
	  b parent class_ref 273029 // aaudio_performance_mode_t
      end
    end

    class 274437 "PeakTrackerData"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment " Application data that gets passed to the callback."
      attribute 442373 "peakLevel"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${readonly}${attribute}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end
    end

    class 274565 "PeakTrackerData_t"
      visibility package stereotype "typedef" base_type class_ref 274437 // PeakTrackerData
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 152325 "utils"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 178949 "AAudioSimplePlayer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 272773 // AAudioSimplePlayer
	class_ref 273925 // SineThreadedData_s
	class_ref 274181 // SineThreadedData_t
      end
    end

    artifact 179077 "AAudioSimpleRecorder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 274309 // AAudioSimpleRecorder
	class_ref 274437 // PeakTrackerData
	class_ref 274565 // PeakTrackerData_t
      end
    end

    artifact 179205 "SineGenerator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 274053 // SineGenerator
      end
    end
  end
end
