class Builder
!!!6920581.java!!!	Builder()
            mBundle = new Bundle();
!!!6920709.java!!!	Builder(inout source : RadioMetadata)
            mBundle = new Bundle(source.mBundle);
!!!6920837.java!!!	Builder(inout source : RadioMetadata, in maxBitmapSize : int)
            this(source);
            for (String key : mBundle.keySet()) {
                Object value = mBundle.get(key);
                if (value != null && value instanceof Bitmap) {
                    Bitmap bmp = (Bitmap) value;
                    if (bmp.getHeight() > maxBitmapSize || bmp.getWidth() > maxBitmapSize) {
                        putBitmap(key, scaleBitmap(bmp, maxBitmapSize));
                    }
                }
            }
!!!6920965.java!!!	putString(in key : String, in value : String) : RadioMetadata::Builder
            if (!METADATA_KEYS_TYPE.containsKey(key) ||
                    METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_TEXT) {
                throw new IllegalArgumentException("The " + key
                        + " key cannot be used to put a String");
            }
            mBundle.putString(key, value);
            return this;
!!!6921093.java!!!	putInt(in key : String, in value : int) : RadioMetadata::Builder
            if (!METADATA_KEYS_TYPE.containsKey(key) ||
                    METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_INT) {
                throw new IllegalArgumentException("The " + key
                        + " key cannot be used to put a long");
            }
            mBundle.putInt(key, value);
            return this;
!!!6921221.java!!!	putBitmap(in key : String, inout value : Bitmap) : RadioMetadata::Builder
            if (!METADATA_KEYS_TYPE.containsKey(key) ||
                    METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_BITMAP) {
                throw new IllegalArgumentException("The " + key
                        + " key cannot be used to put a Bitmap");
            }
            mBundle.putParcelable(key, value);
            return this;
!!!6921349.java!!!	putClock(in key : String, in utcSecondsSinceEpoch : long, in timezoneOffsetMinutes : int) : RadioMetadata::Builder
            if (!METADATA_KEYS_TYPE.containsKey(key) ||
                    METADATA_KEYS_TYPE.get(key) != METADATA_TYPE_CLOCK) {
                throw new IllegalArgumentException("The " + key
                    + " key cannot be used to put a RadioMetadata.Clock.");
            }
            mBundle.putParcelable(key, new Clock(utcSecondsSinceEpoch, timezoneOffsetMinutes));
            return this;
!!!6921477.java!!!	build() : RadioMetadata
            return new RadioMetadata(mBundle);
!!!6921605.java!!!	scaleBitmap(inout bmp : Bitmap, in maxSize : int) : Bitmap
            float maxSizeF = maxSize;
            float widthScale = maxSizeF / bmp.getWidth();
            float heightScale = maxSizeF / bmp.getHeight();
            float scale = Math.min(widthScale, heightScale);
            int height = (int) (bmp.getHeight() * scale);
            int width = (int) (bmp.getWidth() * scale);
            return Bitmap.createScaledBitmap(bmp, width, height, true);
