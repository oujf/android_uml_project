class StreamHalLocal
!!!610565.cpp!!!	getSampleRate(inout rate : uint32_t) : status_t
    *rate = mStream->get_sample_rate(mStream);
    return OK;
!!!610693.cpp!!!	getBufferSize(inout size : size_t) : status_t
    *size = mStream->get_buffer_size(mStream);
    return OK;
!!!610821.cpp!!!	getChannelMask(inout mask : audio_channel_mask_t) : status_t
    *mask = mStream->get_channels(mStream);
    return OK;
!!!610949.cpp!!!	getFormat(inout format : audio_format_t) : status_t
    *format = mStream->get_format(mStream);
    return OK;
!!!611077.cpp!!!	getAudioProperties(inout sampleRate : uint32_t, inout mask : audio_channel_mask_t, inout format : audio_format_t) : status_t
    *sampleRate = mStream->get_sample_rate(mStream);
    *mask = mStream->get_channels(mStream);
    *format = mStream->get_format(mStream);
    return OK;
!!!611205.cpp!!!	setParameters(in kvPairs : String8) : status_t
    return mStream->set_parameters(mStream, kvPairs.string());
!!!611333.cpp!!!	getParameters(in keys : String8, inout values : String8) : status_t
    char *halValues = mStream->get_parameters(mStream, keys.string());
    if (halValues != NULL) {
        values->setTo(halValues);
        free(halValues);
    } else {
        values->clear();
    }
    return OK;
!!!611461.cpp!!!	addEffect(in effect : sp<EffectHalInterface>) : status_t
    LOG_ALWAYS_FATAL_IF(!effect->isLocal(), "Only local effects can be added for a local stream");
    return mStream->add_audio_effect(mStream,
            static_cast<EffectHalLocal*>(effect.get())->handle());
!!!611589.cpp!!!	removeEffect(in effect : sp<EffectHalInterface>) : status_t
    LOG_ALWAYS_FATAL_IF(!effect->isLocal(), "Only local effects can be removed for a local stream");
    return mStream->remove_audio_effect(mStream,
            static_cast<EffectHalLocal*>(effect.get())->handle());
!!!611717.cpp!!!	standby() : status_t
    return mStream->standby(mStream);
!!!611845.cpp!!!	dump(in fd : int) : status_t
    return mStream->dump(mStream, fd);
!!!612485.cpp!!!	setHalThreadPriority(in priority : int) : status_t
    // Don't need to do anything as local hal is executed by audioflinger directly
    // on the same thread.
    return OK;
!!!612741.cpp!!!	~StreamHalLocal()
    mStream = 0;
    mDevice.clear();
