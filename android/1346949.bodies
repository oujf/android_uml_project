class ConditionProviderService
!!!8007045.java!!!	getNotificationInterface() : INotificationManager
        if (mNoMan == null) {
            mNoMan = INotificationManager.Stub.asInterface(
                    ServiceManager.getService(Context.NOTIFICATION_SERVICE));
        }
        return mNoMan;
!!!8007173.java!!!	requestRebind(inout componentName : ComponentName) : void
        INotificationManager noMan = INotificationManager.Stub.asInterface(
                ServiceManager.getService(Context.NOTIFICATION_SERVICE));
        try {
            noMan.requestBindProvider(componentName);
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!8007301.java!!!	requestUnbind() : void
        INotificationManager noMan = getNotificationInterface();
        try {
            noMan.requestUnbindProvider(mProvider);
            // Disable future messages.
            mProvider = null;
        } catch (RemoteException ex) {
            throw ex.rethrowFromSystemServer();
        }
!!!8007429.java!!!	notifyCondition(inout condition : Condition) : void
        if (condition == null) return;
        notifyConditions(new Condition[]{ condition });
!!!8007557.java!!!	notifyConditions(inout  : Condition...conditions) : void
        if (!isBound() || conditions == null) return;
        try {
            getNotificationInterface().notifyConditions(getPackageName(), mProvider, conditions);
        } catch (android.os.RemoteException ex) {
            Log.v(TAG, "Unable to contact notification manager", ex);
        }
!!!8007685.java!!!	onBind(inout intent : Intent) : IBinder
        if (mProvider == null) {
            mProvider = new Provider();
        }
        return mProvider;
!!!8007813.java!!!	isBound() : boolean
        if (mProvider == null) {
            Log.w(TAG, "Condition provider service not yet bound.");
            return false;
        }
        return true;
