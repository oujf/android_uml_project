class AAudioBinderClient
!!!656517.cpp!!!	openStream(in request : AAudioStreamRequest, inout configurationOutput : AAudioStreamConfiguration) : aaudio_handle_t
    aaudio_handle_t stream;
    for (int i = 0; i < 2; i++) {
        const sp<IAAudioService> &service = getAAudioService();
        if (service == 0) {
            return AAUDIO_ERROR_NO_SERVICE;
        }

        stream = service->openStream(request, configurationOutput);

        if (stream == AAUDIO_ERROR_NO_SERVICE) {
            ALOGE("AAudioBinderClient: lost connection to AAudioService.");
            dropAAudioService(); // force a reconnect
        } else {
            break;
        }
    }
    return stream;
!!!656645.cpp!!!	closeStream(in streamHandle : aaudio_handle_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->closeStream(streamHandle);
!!!656773.cpp!!!	getStreamDescription(in streamHandle : aaudio_handle_t, inout parcelable : AudioEndpointParcelable) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->getStreamDescription(streamHandle, parcelable);
!!!656901.cpp!!!	startStream(in streamHandle : aaudio_handle_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->startStream(streamHandle);
!!!657029.cpp!!!	pauseStream(in streamHandle : aaudio_handle_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->pauseStream(streamHandle);
!!!657157.cpp!!!	stopStream(in streamHandle : aaudio_handle_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->stopStream(streamHandle);
!!!657285.cpp!!!	flushStream(in streamHandle : aaudio_handle_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->flushStream(streamHandle);
!!!657413.cpp!!!	registerAudioThread(in streamHandle : aaudio_handle_t, in clientProcessId : pid_t, in clientThreadId : pid_t, in periodNanoseconds : int64_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->registerAudioThread(streamHandle,
                                        clientProcessId,
                                        clientThreadId,
                                        periodNanoseconds);
!!!657541.cpp!!!	unregisterAudioThread(in streamHandle : aaudio_handle_t, in clientProcessId : pid_t, in clientThreadId : pid_t) : aaudio_result_t
    const sp<IAAudioService> &service = getAAudioService();
    if (service == 0) return AAUDIO_ERROR_NO_SERVICE;
    return service->unregisterAudioThread(streamHandle,
                                          clientProcessId,
                                          clientThreadId);
