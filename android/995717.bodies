class PendingIntent
!!!5646213.java!!!	setOnMarshaledListener(inout listener : PendingIntent::OnMarshaledListener) : void
        sOnMarshaledListener.set(listener);
!!!5646341.java!!!	getActivity(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int) : PendingIntent
        return getActivity(context, requestCode, intent, flags, null);
!!!5646469.java!!!	getActivity(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int, inout options : Bundle) : PendingIntent
        String packageName = context.getPackageName();
        String resolvedType = intent != null ? intent.resolveTypeIfNeeded(
                context.getContentResolver()) : null;
        try {
            intent.migrateExtraStreamToClipData();
            intent.prepareToLeaveProcess(context);
            IIntentSender target =
                ActivityManager.getService().getIntentSender(
                    ActivityManager.INTENT_SENDER_ACTIVITY, packageName,
                    null, null, requestCode, new Intent[] { intent },
                    resolvedType != null ? new String[] { resolvedType } : null,
                    flags, options, UserHandle.myUserId());
            return target != null ? new PendingIntent(target) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5646597.java!!!	getActivityAsUser(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int, inout options : Bundle, inout user : UserHandle) : PendingIntent
        String packageName = context.getPackageName();
        String resolvedType = intent != null ? intent.resolveTypeIfNeeded(
                context.getContentResolver()) : null;
        try {
            intent.migrateExtraStreamToClipData();
            intent.prepareToLeaveProcess(context);
            IIntentSender target =
                ActivityManager.getService().getIntentSender(
                    ActivityManager.INTENT_SENDER_ACTIVITY, packageName,
                    null, null, requestCode, new Intent[] { intent },
                    resolvedType != null ? new String[] { resolvedType } : null,
                    flags, options, user.getIdentifier());
            return target != null ? new PendingIntent(target) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5646725.java!!!	getActivities(inout context : Context, in requestCode : int, inout intents : Intent [[]], in flags : int) : PendingIntent
        return getActivities(context, requestCode, intents, flags, null);
!!!5646853.java!!!	getActivities(inout context : Context, in requestCode : int, inout intents : Intent [[]], in flags : int, inout options : Bundle) : PendingIntent
        String packageName = context.getPackageName();
        String[] resolvedTypes = new String[intents.length];
        for (int i=0; i<intents.length; i++) {
            intents[i].migrateExtraStreamToClipData();
            intents[i].prepareToLeaveProcess(context);
            resolvedTypes[i] = intents[i].resolveTypeIfNeeded(context.getContentResolver());
        }
        try {
            IIntentSender target =
                ActivityManager.getService().getIntentSender(
                    ActivityManager.INTENT_SENDER_ACTIVITY, packageName,
                    null, null, requestCode, intents, resolvedTypes, flags, options,
                    UserHandle.myUserId());
            return target != null ? new PendingIntent(target) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5646981.java!!!	getActivitiesAsUser(inout context : Context, in requestCode : int, inout intents : Intent [[]], in flags : int, inout options : Bundle, inout user : UserHandle) : PendingIntent
        String packageName = context.getPackageName();
        String[] resolvedTypes = new String[intents.length];
        for (int i=0; i<intents.length; i++) {
            intents[i].migrateExtraStreamToClipData();
            intents[i].prepareToLeaveProcess(context);
            resolvedTypes[i] = intents[i].resolveTypeIfNeeded(context.getContentResolver());
        }
        try {
            IIntentSender target =
                ActivityManager.getService().getIntentSender(
                    ActivityManager.INTENT_SENDER_ACTIVITY, packageName,
                    null, null, requestCode, intents, resolvedTypes,
                    flags, options, user.getIdentifier());
            return target != null ? new PendingIntent(target) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5647109.java!!!	getBroadcast(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int) : PendingIntent
        return getBroadcastAsUser(context, requestCode, intent, flags,
                new UserHandle(UserHandle.myUserId()));
!!!5647237.java!!!	getBroadcastAsUser(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int, inout userHandle : UserHandle) : PendingIntent
        String packageName = context.getPackageName();
        String resolvedType = intent != null ? intent.resolveTypeIfNeeded(
                context.getContentResolver()) : null;
        try {
            intent.prepareToLeaveProcess(context);
            IIntentSender target =
                ActivityManager.getService().getIntentSender(
                    ActivityManager.INTENT_SENDER_BROADCAST, packageName,
                    null, null, requestCode, new Intent[] { intent },
                    resolvedType != null ? new String[] { resolvedType } : null,
                    flags, null, userHandle.getIdentifier());
            return target != null ? new PendingIntent(target) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5647365.java!!!	getService(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int) : PendingIntent
        return buildServicePendingIntent(context, requestCode, intent, flags,
                ActivityManager.INTENT_SENDER_SERVICE);
!!!5647493.java!!!	getForegroundService(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int) : PendingIntent
        return buildServicePendingIntent(context, requestCode, intent, flags,
                ActivityManager.INTENT_SENDER_FOREGROUND_SERVICE);
!!!5647621.java!!!	buildServicePendingIntent(inout context : Context, in requestCode : int, inout intent : Intent, in flags : int, in serviceKind : int) : PendingIntent
        String packageName = context.getPackageName();
        String resolvedType = intent != null ? intent.resolveTypeIfNeeded(
                context.getContentResolver()) : null;
        try {
            intent.prepareToLeaveProcess(context);
            IIntentSender target =
                ActivityManager.getService().getIntentSender(
                    serviceKind, packageName,
                    null, null, requestCode, new Intent[] { intent },
                    resolvedType != null ? new String[] { resolvedType } : null,
                    flags, null, UserHandle.myUserId());
            return target != null ? new PendingIntent(target) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5647749.java!!!	getIntentSender() : IntentSender
        return new IntentSender(mTarget, mWhitelistToken);
!!!5647877.java!!!	cancel() : void
        try {
            ActivityManager.getService().cancelIntentSender(mTarget);
        } catch (RemoteException e) {
        }
!!!5648005.java!!!	send() : void
        send(null, 0, null, null, null, null, null);
!!!5648133.java!!!	send(in code : int) : void
        send(null, code, null, null, null, null, null);
!!!5648261.java!!!	send(inout context : Context, in code : int, inout intent : Intent) : void
        send(context, code, intent, null, null, null, null);
!!!5648389.java!!!	send(in code : int, inout onFinished : PendingIntent::OnFinished, inout handler : Handler) : void
        send(null, code, null, onFinished, handler, null, null);
!!!5648517.java!!!	send(inout context : Context, in code : int, inout intent : Intent, inout onFinished : PendingIntent::OnFinished, inout handler : Handler) : void
        send(context, code, intent, onFinished, handler, null, null);
!!!5648645.java!!!	send(inout context : Context, in code : int, inout intent : Intent, inout onFinished : PendingIntent::OnFinished, inout handler : Handler, in requiredPermission : String) : void
        send(context, code, intent, onFinished, handler, requiredPermission, null);
!!!5648773.java!!!	send(inout context : Context, in code : int, inout intent : Intent, inout onFinished : PendingIntent::OnFinished, inout handler : Handler, in requiredPermission : String, inout options : Bundle) : void
        try {
            String resolvedType = intent != null ?
                    intent.resolveTypeIfNeeded(context.getContentResolver())
                    : null;
            int res = ActivityManager.getService().sendIntentSender(
                    mTarget, mWhitelistToken, code, intent, resolvedType,
                    onFinished != null
                            ? new FinishedDispatcher(this, onFinished, handler)
                            : null,
                    requiredPermission, options);
            if (res < 0) {
                throw new CanceledException();
            }
        } catch (RemoteException e) {
            throw new CanceledException(e);
        }
!!!5648901.java!!!	getTargetPackage() : String
        try {
            return ActivityManager.getService()
                .getPackageForIntentSender(mTarget);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649029.java!!!	getCreatorPackage() : String
        try {
            return ActivityManager.getService()
                .getPackageForIntentSender(mTarget);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649157.java!!!	getCreatorUid() : int
        try {
            return ActivityManager.getService()
                .getUidForIntentSender(mTarget);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649285.java!!!	getCreatorUserHandle() : UserHandle
        try {
            int uid = ActivityManager.getService()
                .getUidForIntentSender(mTarget);
            return uid > 0 ? new UserHandle(UserHandle.getUserId(uid)) : null;
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649413.java!!!	isTargetedToPackage() : boolean
        try {
            return ActivityManager.getService()
                .isIntentSenderTargetedToPackage(mTarget);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649541.java!!!	isActivity() : boolean
        try {
            return ActivityManager.getService()
                .isIntentSenderAnActivity(mTarget);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649669.java!!!	getIntent() : Intent
        try {
            return ActivityManager.getService()
                .getIntentForIntentSender(mTarget);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649797.java!!!	getTag(in prefix : String) : String
        try {
            return ActivityManager.getService()
                .getTagForIntentSender(mTarget, prefix);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!5649925.java!!!	equals(inout otherObj : Object) : boolean
        if (otherObj instanceof PendingIntent) {
            return mTarget.asBinder().equals(((PendingIntent)otherObj)
                    .mTarget.asBinder());
        }
        return false;
!!!5650053.java!!!	hashCode() : int
        return mTarget.asBinder().hashCode();
!!!5650181.java!!!	toString() : String
        StringBuilder sb = new StringBuilder(128);
        sb.append("PendingIntent{");
        sb.append(Integer.toHexString(System.identityHashCode(this)));
        sb.append(": ");
        sb.append(mTarget != null ? mTarget.asBinder() : null);
        sb.append('}');
        return sb.toString();
!!!5650309.java!!!	describeContents() : int
        return 0;
!!!5650437.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        out.writeStrongBinder(mTarget.asBinder());
        OnMarshaledListener listener = sOnMarshaledListener.get();
        if (listener != null) {
            listener.onMarshaled(this, out, flags);
        }

!!!5650565.java!!!	writePendingIntentOrNullToParcel(inout sender : PendingIntent, inout out : Parcel) : void
        out.writeStrongBinder(sender != null ? sender.mTarget.asBinder()
                : null);
!!!5650693.java!!!	readPendingIntentOrNullFromParcel(inout in : Parcel) : PendingIntent
        IBinder b = in.readStrongBinder();
        return b != null ? new PendingIntent(b, in.getClassCookie(PendingIntent.class)) : null;
!!!5650821.java!!!	PendingIntent(inout target : IIntentSender)
        mTarget = target;
!!!5650949.java!!!	PendingIntent(inout target : IBinder, inout cookie : Object)
        mTarget = IIntentSender.Stub.asInterface(target);
        if (cookie != null) {
            mWhitelistToken = (IBinder)cookie;
        }
!!!5651077.java!!!	getTarget() : IIntentSender
        return mTarget;
!!!5651205.java!!!	getWhitelistToken() : IBinder
        return mWhitelistToken;
