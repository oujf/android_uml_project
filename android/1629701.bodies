class Injector
!!!10950021.java!!!	Injector(inout context : Context)
            mContext = context;
!!!10950149.java!!!	getMessageHandlerLooper() : Looper
            ServiceThread serviceThread = new ServiceThread(TAG,
                    android.os.Process.THREAD_PRIORITY_FOREGROUND, true /* allowIo */);
            serviceThread.start();
            return serviceThread.getLooper();
!!!10950277.java!!!	getContext() : Context
            return mContext;
!!!10950405.java!!!	addLocalService(inout service : AccountManagerInternal) : void
            LocalServices.addService(AccountManagerInternal.class, service);
!!!10950533.java!!!	getDeDatabaseName(in userId : int) : String
            File databaseFile = new File(Environment.getDataSystemDeDirectory(userId),
                    AccountsDb.DE_DATABASE_NAME);
            return databaseFile.getPath();
!!!10950661.java!!!	getCeDatabaseName(in userId : int) : String
            File databaseFile = new File(Environment.getDataSystemCeDirectory(userId),
                    AccountsDb.CE_DATABASE_NAME);
            return databaseFile.getPath();
!!!10950789.java!!!	getPreNDatabaseName(in userId : int) : String
            File systemDir = Environment.getDataSystemDirectory();
            File databaseFile = new File(Environment.getUserSystemDirectory(userId),
                    PRE_N_DATABASE_NAME);
            if (userId == 0) {
                // Migrate old file, if it exists, to the new location.
                // Make sure the new file doesn't already exist. A dummy file could have been
                // accidentally created in the old location,
                // causing the new one to become corrupted as well.
                File oldFile = new File(systemDir, PRE_N_DATABASE_NAME);
                if (oldFile.exists() && !databaseFile.exists()) {
                    // Check for use directory; create if it doesn't exist, else renameTo will fail
                    File userDir = Environment.getUserSystemDirectory(userId);
                    if (!userDir.exists()) {
                        if (!userDir.mkdirs()) {
                            throw new IllegalStateException(
                                    "User dir cannot be created: " + userDir);
                        }
                    }
                    if (!oldFile.renameTo(databaseFile)) {
                        throw new IllegalStateException(
                                "User dir cannot be migrated: " + databaseFile);
                    }
                }
            }
            return databaseFile.getPath();
!!!10950917.java!!!	getAccountAuthenticatorCache() : IAccountAuthenticatorCache
            return new AccountAuthenticatorCache(mContext);
!!!10951045.java!!!	getNotificationManager() : INotificationManager
            return NotificationManager.getService();
