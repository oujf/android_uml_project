class HdmiDeviceInfo
!!!6832901.java!!!	HdmiDeviceInfo(in logicalAddress : int, in physicalAddress : int, in portId : int, in deviceType : int, in vendorId : int, in displayName : String, in powerStatus : int)
        mHdmiDeviceType = HDMI_DEVICE_TYPE_CEC;
        mPhysicalAddress = physicalAddress;
        mPortId = portId;

        mId = idForCecDevice(logicalAddress);
        mLogicalAddress = logicalAddress;
        mDeviceType = deviceType;
        mVendorId = vendorId;
        mDevicePowerStatus = powerStatus;
        mDisplayName = displayName;

        mDeviceId = -1;
        mAdopterId = -1;
!!!6833029.java!!!	HdmiDeviceInfo(in logicalAddress : int, in physicalAddress : int, in portId : int, in deviceType : int, in vendorId : int, in displayName : String)
        this(logicalAddress, physicalAddress, portId, deviceType,
                vendorId, displayName, HdmiControlManager.POWER_STATUS_UNKNOWN);
!!!6833157.java!!!	HdmiDeviceInfo(in physicalAddress : int, in portId : int)
        mHdmiDeviceType = HDMI_DEVICE_TYPE_HARDWARE;
        mPhysicalAddress = physicalAddress;
        mPortId = portId;

        mId = idForHardware(portId);
        mLogicalAddress = -1;
        mDeviceType = DEVICE_RESERVED;
        mVendorId = 0;
        mDevicePowerStatus = HdmiControlManager.POWER_STATUS_UNKNOWN;
        mDisplayName = "HDMI" + portId;

        mDeviceId = -1;
        mAdopterId = -1;
!!!6833285.java!!!	HdmiDeviceInfo(in physicalAddress : int, in portId : int, in adopterId : int, in deviceId : int)
        mHdmiDeviceType = HDMI_DEVICE_TYPE_MHL;
        mPhysicalAddress = physicalAddress;
        mPortId = portId;

        mId = idForMhlDevice(portId);
        mLogicalAddress = -1;
        mDeviceType = DEVICE_RESERVED;
        mVendorId = 0;
        mDevicePowerStatus = HdmiControlManager.POWER_STATUS_UNKNOWN;
        mDisplayName = "Mobile";

        mDeviceId = adopterId;
        mAdopterId = deviceId;
!!!6833413.java!!!	HdmiDeviceInfo()
        mHdmiDeviceType = HDMI_DEVICE_TYPE_INACTIVE;
        mPhysicalAddress = PATH_INVALID;
        mId = ID_INVALID;

        mLogicalAddress = -1;
        mDeviceType = DEVICE_INACTIVE;
        mPortId = PORT_INVALID;
        mDevicePowerStatus = HdmiControlManager.POWER_STATUS_UNKNOWN;
        mDisplayName = "Inactive";
        mVendorId = 0;

        mDeviceId = -1;
        mAdopterId = -1;
!!!6833541.java!!!	getId() : int
        return mId;
!!!6833669.java!!!	idForCecDevice(in address : int) : int
        // The id is generated based on the logical address.
        return ID_OFFSET_CEC + address;
!!!6833797.java!!!	idForMhlDevice(in portId : int) : int
        // The id is generated based on the port id since there can be only one MHL device per port.
        return ID_OFFSET_MHL + portId;
!!!6833925.java!!!	idForHardware(in portId : int) : int
        return ID_OFFSET_HARDWARE + portId;
!!!6834053.java!!!	getLogicalAddress() : int
        return mLogicalAddress;
!!!6834181.java!!!	getPhysicalAddress() : int
        return mPhysicalAddress;
!!!6834309.java!!!	getPortId() : int
        return mPortId;
!!!6834437.java!!!	getDeviceType() : int
        return mDeviceType;
!!!6834565.java!!!	getDevicePowerStatus() : int
        return mDevicePowerStatus;
!!!6834693.java!!!	getDeviceId() : int
        return mDeviceId;
!!!6834821.java!!!	getAdopterId() : int
        return mAdopterId;
!!!6834949.java!!!	isSourceType() : boolean
        if (isCecDevice()) {
            return mDeviceType == DEVICE_PLAYBACK
                    || mDeviceType == DEVICE_RECORDER
                    || mDeviceType == DEVICE_TUNER;
        } else if (isMhlDevice()) {
            return true;
        } else {
            return false;
        }
!!!6835077.java!!!	isCecDevice() : boolean
        return mHdmiDeviceType == HDMI_DEVICE_TYPE_CEC;
!!!6835205.java!!!	isMhlDevice() : boolean
        return mHdmiDeviceType == HDMI_DEVICE_TYPE_MHL;
!!!6835333.java!!!	isInactivated() : boolean
        return mHdmiDeviceType == HDMI_DEVICE_TYPE_INACTIVE;
!!!6835461.java!!!	getDisplayName() : String
        return mDisplayName;
!!!6835589.java!!!	getVendorId() : int
        return mVendorId;
!!!6835717.java!!!	describeContents() : int
        return 0;
!!!6835845.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(mHdmiDeviceType);
        dest.writeInt(mPhysicalAddress);
        dest.writeInt(mPortId);
        switch (mHdmiDeviceType) {
            case HDMI_DEVICE_TYPE_CEC:
                dest.writeInt(mLogicalAddress);
                dest.writeInt(mDeviceType);
                dest.writeInt(mVendorId);
                dest.writeInt(mDevicePowerStatus);
                dest.writeString(mDisplayName);
                break;
            case HDMI_DEVICE_TYPE_MHL:
                dest.writeInt(mDeviceId);
                dest.writeInt(mAdopterId);
                break;
            case HDMI_DEVICE_TYPE_INACTIVE:
                // flow through
            default:
                // no-op
        }
!!!6835973.java!!!	toString() : String
        StringBuffer s = new StringBuffer();
        switch (mHdmiDeviceType) {
            case HDMI_DEVICE_TYPE_CEC:
                s.append("CEC: ");
                s.append("logical_address: ").append(String.format("0x%02X", mLogicalAddress));
                s.append(" ");
                s.append("device_type: ").append(mDeviceType).append(" ");
                s.append("vendor_id: ").append(mVendorId).append(" ");
                s.append("display_name: ").append(mDisplayName).append(" ");
                s.append("power_status: ").append(mDevicePowerStatus).append(" ");
                break;
            case HDMI_DEVICE_TYPE_MHL:
                s.append("MHL: ");
                s.append("device_id: ").append(String.format("0x%04X", mDeviceId)).append(" ");
                s.append("adopter_id: ").append(String.format("0x%04X", mAdopterId)).append(" ");
                break;

            case HDMI_DEVICE_TYPE_HARDWARE:
                s.append("Hardware: ");
                break;
            case HDMI_DEVICE_TYPE_INACTIVE:
                s.append("Inactivated: ");
                break;
            default:
                return "";
        }
        s.append("physical_address: ").append(String.format("0x%04X", mPhysicalAddress));
        s.append(" ");
        s.append("port_id: ").append(mPortId);
        return s.toString();
!!!6836101.java!!!	equals(inout obj : Object) : boolean
        if (!(obj instanceof HdmiDeviceInfo)) {
            return false;
        }

        HdmiDeviceInfo other = (HdmiDeviceInfo) obj;
        return mHdmiDeviceType == other.mHdmiDeviceType
                && mPhysicalAddress == other.mPhysicalAddress
                && mPortId == other.mPortId
                && mLogicalAddress == other.mLogicalAddress
                && mDeviceType == other.mDeviceType
                && mVendorId == other.mVendorId
                && mDevicePowerStatus == other.mDevicePowerStatus
                && mDisplayName.equals(other.mDisplayName)
                && mDeviceId == other.mDeviceId
                && mAdopterId == other.mAdopterId;
