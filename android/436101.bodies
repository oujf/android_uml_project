class SoftVP8Encoder
!!!1163781.cpp!!!	internalGetParameter(in index : OMX_INDEXTYPE, in param : OMX_PTR) : OMX_ERRORTYPE
    // can include extension index OMX_INDEXEXTTYPE
    const int32_t indexFull = index;

    switch (indexFull) {
        case OMX_IndexParamVideoVp8:
            return internalGetVp8Params(
                (OMX_VIDEO_PARAM_VP8TYPE *)param);

        default:
            return SoftVPXEncoder::internalGetParameter(index, param);
    }
!!!1163909.cpp!!!	internalSetParameter(in index : OMX_INDEXTYPE, in param : OMX_PTR) : OMX_ERRORTYPE
    // can include extension index OMX_INDEXEXTTYPE
    const int32_t indexFull = index;

    switch (indexFull) {
        case OMX_IndexParamVideoVp8:
            return internalSetVp8Params(
                (const OMX_VIDEO_PARAM_VP8TYPE *)param);

        default:
            return SoftVPXEncoder::internalSetParameter(index, param);
    }
!!!1164037.cpp!!!	setCodecSpecificInterface() : void
    mCodecInterface = vpx_codec_vp8_cx();
!!!1164165.cpp!!!	setCodecSpecificConfiguration() : void
    switch (mLevel) {
        case OMX_VIDEO_VP8Level_Version0:
            mCodecConfiguration->g_profile = 0;
            break;

        case OMX_VIDEO_VP8Level_Version1:
            mCodecConfiguration->g_profile = 1;
            break;

        case OMX_VIDEO_VP8Level_Version2:
            mCodecConfiguration->g_profile = 2;
            break;

        case OMX_VIDEO_VP8Level_Version3:
            mCodecConfiguration->g_profile = 3;
            break;

        default:
            mCodecConfiguration->g_profile = 0;
    }
!!!1164293.cpp!!!	setCodecSpecificControls() : vpx_codec_err_t
    vpx_codec_err_t codec_return = vpx_codec_control(mCodecContext,
                                                     VP8E_SET_TOKEN_PARTITIONS,
                                                     mDCTPartitions);
    if (codec_return != VPX_CODEC_OK) {
        ALOGE("Error setting dct partitions for vpx encoder.");
    }
    return codec_return;
!!!1164421.cpp!!!	internalGetVp8Params(inout vp8Params : OMX_VIDEO_PARAM_VP8TYPE) : OMX_ERRORTYPE
    if (vp8Params->nPortIndex != kOutputPortIndex) {
        return OMX_ErrorUnsupportedIndex;
    }

    vp8Params->eProfile = OMX_VIDEO_VP8ProfileMain;
    vp8Params->eLevel = mLevel;
    vp8Params->bErrorResilientMode = mErrorResilience;
    vp8Params->nDCTPartitions = mDCTPartitions;
    return OMX_ErrorNone;
!!!1164549.cpp!!!	internalSetVp8Params(in vp8Params : OMX_VIDEO_PARAM_VP8TYPE) : OMX_ERRORTYPE
    if (vp8Params->nPortIndex != kOutputPortIndex) {
        return OMX_ErrorUnsupportedIndex;
    }

    if (vp8Params->eProfile != OMX_VIDEO_VP8ProfileMain) {
        return OMX_ErrorBadParameter;
    }

    if (vp8Params->eLevel == OMX_VIDEO_VP8Level_Version0 ||
        vp8Params->eLevel == OMX_VIDEO_VP8Level_Version1 ||
        vp8Params->eLevel == OMX_VIDEO_VP8Level_Version2 ||
        vp8Params->eLevel == OMX_VIDEO_VP8Level_Version3) {
        mLevel = vp8Params->eLevel;
    } else {
        return OMX_ErrorBadParameter;
    }

    mErrorResilience = vp8Params->bErrorResilientMode;
    if (vp8Params->nDCTPartitions <= kMaxDCTPartitions) {
        mDCTPartitions = vp8Params->nDCTPartitions;
    } else {
        return OMX_ErrorBadParameter;
    }
    return OMX_ErrorNone;
