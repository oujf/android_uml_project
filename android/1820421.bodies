class Stub
!!!13126277.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!13126405.java!!!	asInterface(inout obj : android.os.IBinder) : IJobCallback
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.app.job.IJobCallback))) {
return ((android.app.job.IJobCallback)iin);
}
return new android.app.job.IJobCallback.Stub.Proxy(obj);
!!!13126533.java!!!	asBinder() : android.os.IBinder
return this;
!!!13126661.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_acknowledgeStartMessage:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
this.acknowledgeStartMessage(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_acknowledgeStopMessage:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
this.acknowledgeStopMessage(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_dequeueWork:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.app.job.JobWorkItem _result = this.dequeueWork(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_completeWork:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
int _arg1;
_arg1 = data.readInt();
boolean _result = this.completeWork(_arg0, _arg1);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_jobFinished:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
boolean _arg1;
_arg1 = (0!=data.readInt());
this.jobFinished(_arg0, _arg1);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
