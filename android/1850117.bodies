class Proxy
!!!13402757.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13402885.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13403013.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13403141.java!!!	authenticate(inout token : android.os.IBinder, in sessionId : long, in userId : int, inout receiver : IFingerprintServiceReceiver, in flags : int, inout opPackageName : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeLong(sessionId);
_data.writeInt(userId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
_data.writeInt(flags);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_authenticate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13403269.java!!!	cancelAuthentication(inout token : android.os.IBinder, inout opPackageName : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_cancelAuthentication, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13403397.java!!!	enroll(inout token : android.os.IBinder, inout cryptoToken : byte [[]], in groupId : int, inout receiver : IFingerprintServiceReceiver, in flags : int, inout opPackageName : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeByteArray(cryptoToken);
_data.writeInt(groupId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
_data.writeInt(flags);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_enroll, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13403525.java!!!	cancelEnrollment(inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_cancelEnrollment, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13403653.java!!!	remove(inout token : android.os.IBinder, in fingerId : int, in groupId : int, in userId : int, inout receiver : IFingerprintServiceReceiver) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(fingerId);
_data.writeInt(groupId);
_data.writeInt(userId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_remove, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13403781.java!!!	rename(in fingerId : int, in groupId : int, inout name : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(fingerId);
_data.writeInt(groupId);
_data.writeString(name);
mRemote.transact(Stub.TRANSACTION_rename, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13403909.java!!!	getEnrolledFingerprints(in groupId : int, inout opPackageName : java.lang.String) : java.util.List<android.hardware.fingerprint.Fingerprint>
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.hardware.fingerprint.Fingerprint> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(groupId);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_getEnrolledFingerprints, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.hardware.fingerprint.Fingerprint.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13404037.java!!!	isHardwareDetected(in deviceId : long, inout opPackageName : java.lang.String) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeLong(deviceId);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_isHardwareDetected, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13404165.java!!!	preEnroll(inout token : android.os.IBinder) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_preEnroll, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13404293.java!!!	postEnroll(inout token : android.os.IBinder) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_postEnroll, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13404421.java!!!	hasEnrolledFingerprints(in groupId : int, inout opPackageName : java.lang.String) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(groupId);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_hasEnrolledFingerprints, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13404549.java!!!	getAuthenticatorId(inout opPackageName : java.lang.String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(opPackageName);
mRemote.transact(Stub.TRANSACTION_getAuthenticatorId, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13404677.java!!!	resetTimeout(inout cryptoToken : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeByteArray(cryptoToken);
mRemote.transact(Stub.TRANSACTION_resetTimeout, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13404805.java!!!	addLockoutResetCallback(inout callback : IFingerprintServiceLockoutResetCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_addLockoutResetCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13404933.java!!!	setActiveUser(in uid : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(uid);
mRemote.transact(Stub.TRANSACTION_setActiveUser, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13405061.java!!!	enumerate(inout token : android.os.IBinder, in userId : int, inout receiver : IFingerprintServiceReceiver) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(userId);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_enumerate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13405189.java!!!	isClientActive() : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_isClientActive, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13405317.java!!!	addClientActiveCallback(inout callback : IFingerprintClientActiveCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_addClientActiveCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13405445.java!!!	removeClientActiveCallback(inout callback : IFingerprintClientActiveCallback) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((callback!=null))?(callback.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_removeClientActiveCallback, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
