class ClipDescription
!!!6101509.java!!!	ClipDescription(inout label : CharSequence, inout mimeTypes : String [[]])
        if (mimeTypes == null) {
            throw new NullPointerException("mimeTypes is null");
        }
        mLabel = label;
        mMimeTypes = new ArrayList<String>(Arrays.asList(mimeTypes));
!!!6101637.java!!!	ClipDescription(inout o : ClipDescription)
        mLabel = o.mLabel;
        mMimeTypes = new ArrayList<String>(o.mMimeTypes);
        mTimeStamp = o.mTimeStamp;
!!!6101765.java!!!	compareMimeTypes(in concreteType : String, in desiredType : String) : boolean
        final int typeLength = desiredType.length();
        if (typeLength == 3 && desiredType.equals("*/*")) {
            return true;
        }

        final int slashpos = desiredType.indexOf('/');
        if (slashpos > 0) {
            if (typeLength == slashpos+2 && desiredType.charAt(slashpos+1) == '*') {
                if (desiredType.regionMatches(0, concreteType, 0, slashpos+1)) {
                    return true;
                }
            } else if (desiredType.equals(concreteType)) {
                return true;
            }
        }

        return false;
!!!6101893.java!!!	setTimestamp(in timeStamp : long) : void
        mTimeStamp = timeStamp;
!!!6102021.java!!!	getTimestamp() : long
        return mTimeStamp;
!!!6102149.java!!!	getLabel() : CharSequence
        return mLabel;
!!!6102277.java!!!	hasMimeType(in mimeType : String) : boolean
        final int size = mMimeTypes.size();
        for (int i=0; i<size; i++) {
            if (compareMimeTypes(mMimeTypes.get(i), mimeType)) {
                return true;
            }
        }
        return false;
!!!6102405.java!!!	filterMimeTypes(in mimeType : String) : String
        ArrayList<String> array = null;
        final int size = mMimeTypes.size();
        for (int i=0; i<size; i++) {
            if (compareMimeTypes(mMimeTypes.get(i), mimeType)) {
                if (array == null) {
                    array = new ArrayList<String>();
                }
                array.add(mMimeTypes.get(i));
            }
        }
        if (array == null) {
            return null;
        }
        String[] rawArray = new String[array.size()];
        array.toArray(rawArray);
        return rawArray;
!!!6102533.java!!!	getMimeTypeCount() : int
        return mMimeTypes.size();
!!!6102661.java!!!	getMimeType(in index : int) : String
        return mMimeTypes.get(index);
!!!6102789.java!!!	addMimeTypes(inout mimeTypes : String [[]]) : void
        for (int i=0; i!=mimeTypes.length; i++) {
            final String mimeType = mimeTypes[i];
            if (!mMimeTypes.contains(mimeType)) {
                mMimeTypes.add(mimeType);
            }
        }
!!!6102917.java!!!	getExtras() : PersistableBundle
        return mExtras;
!!!6103045.java!!!	setExtras(inout extras : PersistableBundle) : void
        mExtras = new PersistableBundle(extras);
!!!6103173.java!!!	validate() : void
        if (mMimeTypes == null) {
            throw new NullPointerException("null mime types");
        }
        final int size = mMimeTypes.size();
        if (size <= 0) {
            throw new IllegalArgumentException("must have at least 1 mime type");
        }
        for (int i=0; i<size; i++) {
            if (mMimeTypes.get(i) == null) {
                throw new NullPointerException("mime type at " + i + " is null");
            }
        }
!!!6103301.java!!!	toString() : String
        StringBuilder b = new StringBuilder(128);

        b.append("ClipDescription { ");
        toShortString(b);
        b.append(" }");

        return b.toString();
!!!6103429.java!!!	toShortString(inout b : StringBuilder) : boolean
        boolean first = !toShortStringTypesOnly(b);
        if (mLabel != null) {
            if (!first) {
                b.append(' ');
            }
            first = false;
            b.append('"');
            b.append(mLabel);
            b.append('"');
        }
        if (mExtras != null) {
            if (!first) {
                b.append(' ');
            }
            first = false;
            b.append(mExtras.toString());
        }
        if (mTimeStamp > 0) {
            if (!first) {
                b.append(' ');
            }
            first = false;
            b.append('<');
            b.append(TimeUtils.logTimeOfDay(mTimeStamp));
            b.append('>');
        }
        return !first;
!!!6103557.java!!!	toShortStringTypesOnly(inout b : StringBuilder) : boolean
        boolean first = true;
        final int size = mMimeTypes.size();
        for (int i=0; i<size; i++) {
            if (!first) {
                b.append(' ');
            }
            first = false;
            b.append(mMimeTypes.get(i));
        }
        return !first;
!!!6103685.java!!!	describeContents() : int
        return 0;
!!!6103813.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        TextUtils.writeToParcel(mLabel, dest, flags);
        dest.writeStringList(mMimeTypes);
        dest.writePersistableBundle(mExtras);
        dest.writeLong(mTimeStamp);
!!!6103941.java!!!	ClipDescription(inout in : Parcel)
        mLabel = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(in);
        mMimeTypes = in.createStringArrayList();
        mExtras = in.readPersistableBundle();
        mTimeStamp = in.readLong();
