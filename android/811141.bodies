class CastTile
!!!3425541.java!!!	CastTile(inout host : QSHost)
        super(host);
        mController = Dependency.get(CastController.class);
        mDetailAdapter = new CastDetailAdapter();
        mKeyguard = Dependency.get(KeyguardMonitor.class);
        mActivityStarter = Dependency.get(ActivityStarter.class);
!!!3425669.java!!!	getDetailAdapter() : DetailAdapter
        return mDetailAdapter;
!!!3425797.java!!!	newTileState() : BooleanState
        return new BooleanState();
!!!3425925.java!!!	setListening(inout listening : boolean) : void
        if (mController == null) return;
        if (DEBUG) Log.d(TAG, "setListening " + listening);
        if (listening) {
            mController.addCallback(mCallback);
            mKeyguard.addCallback(mCallback);
        } else {
            mController.setDiscovering(false);
            mController.removeCallback(mCallback);
            mKeyguard.removeCallback(mCallback);
        }
!!!3426053.java!!!	handleUserSwitch(in newUserId : int) : void
        super.handleUserSwitch(newUserId);
        if (mController == null) return;
        mController.setCurrentUserId(newUserId);
!!!3426181.java!!!	getLongClickIntent() : Intent
        return new Intent(Settings.ACTION_CAST_SETTINGS);
!!!3426309.java!!!	handleSecondaryClick() : void
        handleClick();
!!!3426437.java!!!	handleClick() : void
        if (mKeyguard.isSecure() && !mKeyguard.canSkipBouncer()) {
            mActivityStarter.postQSRunnableDismissingKeyguard(() -> {
                showDetail(true);
            });
            return;
        }
        showDetail(true);
!!!3426565.java!!!	showDetail(inout show : boolean) : void
        mUiHandler.post(() -> {
            mDialog = MediaRouteDialogPresenter.createDialog(mContext, ROUTE_TYPE_REMOTE_DISPLAY,
                    v -> {
                        mDialog.dismiss();
                        Dependency.get(ActivityStarter.class)
                                .postStartActivityDismissingKeyguard(getLongClickIntent(), 0);
                    });
            mDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL);
            mUiHandler.post(() -> mDialog.show());
            registerReceiver();
            mHost.collapsePanels();
        });
!!!3426693.java!!!	registerReceiver() : void
        mContext.registerReceiverAsUser(mReceiver, UserHandle.CURRENT,
                new IntentFilter(Intent.ACTION_CLOSE_SYSTEM_DIALOGS), null, null);
        mRegistered = true;
        mDialog.setOnDismissListener(dialog -> {
            if (mRegistered) {
                mContext.unregisterReceiver(mReceiver);
                mRegistered = false;
            }
        });
!!!3426821.java!!!	getTileLabel() : CharSequence
        return mContext.getString(R.string.quick_settings_cast_title);
!!!3426949.java!!!	handleUpdateState(inout state : BooleanState, inout arg : Object) : void
        state.label = mContext.getString(R.string.quick_settings_cast_title);
        state.contentDescription = state.label;
        state.value = false;
        final Set<CastDevice> devices = mController.getCastDevices();
        boolean connecting = false;
        for (CastDevice device : devices) {
            if (device.state == CastDevice.STATE_CONNECTED) {
                state.value = true;
                state.label = getDeviceName(device);
                state.contentDescription = state.contentDescription + "," +
                        mContext.getString(R.string.accessibility_cast_name, state.label);
            } else if (device.state == CastDevice.STATE_CONNECTING) {
                connecting = true;
            }
        }
        if (!state.value && connecting) {
            state.label = mContext.getString(R.string.quick_settings_connecting);
        }
        state.state = state.value ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE;
        state.icon = ResourceIcon.get(state.value ? R.drawable.ic_qs_cast_on
                : R.drawable.ic_qs_cast_off);
        mDetailAdapter.updateItems(devices);
        state.expandedAccessibilityClassName = Button.class.getName();
        state.contentDescription = state.contentDescription + ","
                + mContext.getString(R.string.accessibility_quick_settings_open_details);
!!!3427077.java!!!	getMetricsCategory() : int
        return MetricsEvent.QS_CAST;
!!!3427205.java!!!	composeChangeAnnouncement() : String
        if (!mState.value) {
            // We only announce when it's turned off to avoid vocal overflow.
            return mContext.getString(R.string.accessibility_casting_turned_off);
        }
        return null;
!!!3427333.java!!!	getDeviceName(inout device : CastController::CastDevice) : String
        return device.name != null ? device.name
                : mContext.getString(R.string.quick_settings_cast_device_default_name);
