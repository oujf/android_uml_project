class DozeParameters
!!!3901701.java!!!	DozeParameters(inout context : Context)
        mContext = context;
        mAmbientDisplayConfiguration = new AmbientDisplayConfiguration(mContext);
!!!3901829.java!!!	dump(inout pw : PrintWriter) : void
        pw.println("  DozeParameters:");
        pw.print("    getDisplayStateSupported(): "); pw.println(getDisplayStateSupported());
        pw.print("    getPulseDuration(pickup=false): "); pw.println(getPulseDuration(false));
        pw.print("    getPulseDuration(pickup=true): "); pw.println(getPulseDuration(true));
        pw.print("    getPulseInDuration(pickup=false): "); pw.println(getPulseInDuration(false));
        pw.print("    getPulseInDuration(pickup=true): "); pw.println(getPulseInDuration(true));
        pw.print("    getPulseInVisibleDuration(): "); pw.println(getPulseVisibleDuration());
        pw.print("    getPulseOutDuration(): "); pw.println(getPulseOutDuration());
        pw.print("    getPulseOnSigMotion(): "); pw.println(getPulseOnSigMotion());
        pw.print("    getVibrateOnSigMotion(): "); pw.println(getVibrateOnSigMotion());
        pw.print("    getVibrateOnPickup(): "); pw.println(getVibrateOnPickup());
        pw.print("    getProxCheckBeforePulse(): "); pw.println(getProxCheckBeforePulse());
        pw.print("    getPickupVibrationThreshold(): "); pw.println(getPickupVibrationThreshold());
        pw.print("    getPickupSubtypePerformsProxCheck(): ");pw.println(
                dumpPickupSubtypePerformsProxCheck());
!!!3901957.java!!!	dumpPickupSubtypePerformsProxCheck() : String
        // Refresh sPickupSubtypePerformsProxMatcher
        getPickupSubtypePerformsProxCheck(0);

        if (sPickupSubtypePerformsProxMatcher == null) {
            return "fallback: " + mContext.getResources().getBoolean(
                    R.bool.doze_pickup_performs_proximity_check);
        } else {
            return "spec: " + sPickupSubtypePerformsProxMatcher.mSpec;
        }
!!!3902085.java!!!	getDisplayStateSupported() : boolean
        return getBoolean("doze.display.supported", R.bool.doze_display_state_supported);
!!!3902213.java!!!	getPulseDuration(inout pickup : boolean) : int
        return getPulseInDuration(pickup) + getPulseVisibleDuration() + getPulseOutDuration();
!!!3902341.java!!!	getPulseInDuration(inout pickupOrDoubleTap : boolean) : int
        return pickupOrDoubleTap
                ? getInt("doze.pulse.duration.in.pickup", R.integer.doze_pulse_duration_in_pickup)
                : getInt("doze.pulse.duration.in", R.integer.doze_pulse_duration_in);
!!!3902469.java!!!	getPulseVisibleDuration() : int
        return getInt("doze.pulse.duration.visible", R.integer.doze_pulse_duration_visible);
!!!3902597.java!!!	getPulseOutDuration() : int
        return getInt("doze.pulse.duration.out", R.integer.doze_pulse_duration_out);
!!!3902725.java!!!	getPulseOnSigMotion() : boolean
        return getBoolean("doze.pulse.sigmotion", R.bool.doze_pulse_on_significant_motion);
!!!3902853.java!!!	getVibrateOnSigMotion() : boolean
        return SystemProperties.getBoolean("doze.vibrate.sigmotion", false);
!!!3902981.java!!!	getVibrateOnPickup() : boolean
        return SystemProperties.getBoolean("doze.vibrate.pickup", false);
!!!3903109.java!!!	getProxCheckBeforePulse() : boolean
        return getBoolean("doze.pulse.proxcheck", R.bool.doze_proximity_check_before_pulse);
!!!3903237.java!!!	getPickupVibrationThreshold() : int
        return getInt("doze.pickup.vibration.threshold", R.integer.doze_pickup_vibration_threshold);
!!!3903365.java!!!	getAlwaysOn() : boolean
        return mAmbientDisplayConfiguration.alwaysOnEnabled(UserHandle.USER_CURRENT);
!!!3903493.java!!!	getBoolean(in propName : String, in resId : int) : boolean
        return SystemProperties.getBoolean(propName, mContext.getResources().getBoolean(resId));
!!!3903621.java!!!	getInt(in propName : String, in resId : int) : int
        int value = SystemProperties.getInt(propName, mContext.getResources().getInteger(resId));
        return MathUtils.constrain(value, 0, MAX_DURATION);
!!!3903749.java!!!	getString(in propName : String, in resId : int) : String
        return SystemProperties.get(propName, mContext.getString(resId));
!!!3903877.java!!!	getPickupSubtypePerformsProxCheck(in subType : int) : boolean
        String spec = getString("doze.pickup.proxcheck",
                R.string.doze_pickup_subtype_performs_proximity_check);

        if (TextUtils.isEmpty(spec)) {
            // Fall back to non-subtype based property.
            return mContext.getResources().getBoolean(R.bool.doze_pickup_performs_proximity_check);
        }

        if (sPickupSubtypePerformsProxMatcher == null
                || !TextUtils.equals(spec, sPickupSubtypePerformsProxMatcher.mSpec)) {
            sPickupSubtypePerformsProxMatcher = new IntInOutMatcher(spec);
        }

        return sPickupSubtypePerformsProxMatcher.isIn(subType);
!!!3904005.java!!!	getPulseVisibleDurationExtended() : int
        return 2 * getPulseVisibleDuration();
