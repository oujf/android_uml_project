class KeycodeEntry
!!!11585029.java!!!	KeycodeEntry(in androidKeycode : int, in cecKeycode : int, inout isRepeatable : boolean, inout cecParams : byte [[]])
            mAndroidKeycode = androidKeycode;
            mIsRepeatable = isRepeatable;
            mCecKeycodeAndParams = new byte[cecParams.length + 1];
            System.arraycopy(cecParams, 0, mCecKeycodeAndParams, 1, cecParams.length);
            mCecKeycodeAndParams[0] = (byte) (cecKeycode & 0xFF);
!!!11585157.java!!!	KeycodeEntry(in androidKeycode : int, in cecKeycode : int, inout isRepeatable : boolean)
            this(androidKeycode, cecKeycode, isRepeatable, EmptyArray.BYTE);
!!!11585285.java!!!	KeycodeEntry(in androidKeycode : int, in cecKeycode : int, inout cecParams : byte [[]])
            this(androidKeycode, cecKeycode, true, cecParams);
!!!11585413.java!!!	KeycodeEntry(in androidKeycode : int, in cecKeycode : int)
            this(androidKeycode, cecKeycode, true, EmptyArray.BYTE);
!!!11585541.java!!!	toCecKeycodeAndParamIfMatched(in androidKeycode : int) : byte
            if (mAndroidKeycode == androidKeycode) {
                return mCecKeycodeAndParams;
            } else {
                return null;
            }
!!!11585669.java!!!	toAndroidKeycodeIfMatched(inout cecKeycodeAndParams : byte [[]]) : int
            if (Arrays.equals(mCecKeycodeAndParams, cecKeycodeAndParams)) {
                return mAndroidKeycode;
            } else {
                return UNSUPPORTED_KEYCODE;
            }
!!!11585797.java!!!	isRepeatableIfMatched(in androidKeycode : int) : Boolean
            if (mAndroidKeycode == androidKeycode) {
                return mIsRepeatable;
            } else {
                return null;
            }
