class ViewAnimator
!!!9508997.java!!!	ViewAnimator(inout context : Context)
        super(context);
        initViewAnimator(context, null);
!!!9509125.java!!!	ViewAnimator(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);

        TypedArray a = context.obtainStyledAttributes(attrs, com.android.internal.R.styleable.ViewAnimator);
        int resource = a.getResourceId(com.android.internal.R.styleable.ViewAnimator_inAnimation, 0);
        if (resource > 0) {
            setInAnimation(context, resource);
        }

        resource = a.getResourceId(com.android.internal.R.styleable.ViewAnimator_outAnimation, 0);
        if (resource > 0) {
            setOutAnimation(context, resource);
        }

        boolean flag = a.getBoolean(com.android.internal.R.styleable.ViewAnimator_animateFirstView, true);
        setAnimateFirstView(flag);

        a.recycle();

        initViewAnimator(context, attrs);
!!!9509253.java!!!	initViewAnimator(inout context : Context, inout attrs : AttributeSet) : void
        if (attrs == null) {
            // For compatibility, always measure children when undefined.
            mMeasureAllChildren = true;
            return;
        }

        // For compatibility, default to measure children, but allow XML
        // attribute to override.
        final TypedArray a = context.obtainStyledAttributes(attrs,
                com.android.internal.R.styleable.FrameLayout);
        final boolean measureAllChildren = a.getBoolean(
                com.android.internal.R.styleable.FrameLayout_measureAllChildren, true);
        setMeasureAllChildren(measureAllChildren);
        a.recycle();
!!!9509381.java!!!	setDisplayedChild(in whichChild : int) : void
        mWhichChild = whichChild;
        if (whichChild >= getChildCount()) {
            mWhichChild = 0;
        } else if (whichChild < 0) {
            mWhichChild = getChildCount() - 1;
        }
        boolean hasFocus = getFocusedChild() != null;
        // This will clear old focus if we had it
        showOnly(mWhichChild);
        if (hasFocus) {
            // Try to retake focus if we had it
            requestFocus(FOCUS_FORWARD);
        }
!!!9509509.java!!!	getDisplayedChild() : int
        return mWhichChild;
!!!9509637.java!!!	showNext() : void
        setDisplayedChild(mWhichChild + 1);
!!!9509765.java!!!	showPrevious() : void
        setDisplayedChild(mWhichChild - 1);
!!!9509893.java!!!	showOnly(in childIndex : int, inout animate : boolean) : void
        final int count = getChildCount();
        for (int i = 0; i < count; i++) {
            final View child = getChildAt(i);
            if (i == childIndex) {
                if (animate && mInAnimation != null) {
                    child.startAnimation(mInAnimation);
                }
                child.setVisibility(View.VISIBLE);
                mFirstTime = false;
            } else {
                if (animate && mOutAnimation != null && child.getVisibility() == View.VISIBLE) {
                    child.startAnimation(mOutAnimation);
                } else if (child.getAnimation() == mInAnimation)
                    child.clearAnimation();
                child.setVisibility(View.GONE);
            }
        }
!!!9510021.java!!!	showOnly(in childIndex : int) : void
        final boolean animate = (!mFirstTime || mAnimateFirstTime);
        showOnly(childIndex, animate);
!!!9510149.java!!!	addView(inout child : View, in index : int, inout params : ViewGroup::LayoutParams) : void
        super.addView(child, index, params);
        if (getChildCount() == 1) {
            child.setVisibility(View.VISIBLE);
        } else {
            child.setVisibility(View.GONE);
        }
        if (index >= 0 && mWhichChild >= index) {
            // Added item above current one, increment the index of the displayed child
            setDisplayedChild(mWhichChild + 1);
        }
!!!9510277.java!!!	removeAllViews() : void
        super.removeAllViews();
        mWhichChild = 0;
        mFirstTime = true;
!!!9510405.java!!!	removeView(inout view : View) : void
        final int index = indexOfChild(view);
        if (index >= 0) {
            removeViewAt(index);
        }
!!!9510533.java!!!	removeViewAt(in index : int) : void
        super.removeViewAt(index);
        final int childCount = getChildCount();
        if (childCount == 0) {
            mWhichChild = 0;
            mFirstTime = true;
        } else if (mWhichChild >= childCount) {
            // Displayed is above child count, so float down to top of stack
            setDisplayedChild(childCount - 1);
        } else if (mWhichChild == index) {
            // Displayed was removed, so show the new child living in its place
            setDisplayedChild(mWhichChild);
        }
!!!9510661.java!!!	removeViewInLayout(inout view : View) : void
        removeView(view);
!!!9510789.java!!!	removeViews(in start : int, in count : int) : void
        super.removeViews(start, count);
        if (getChildCount() == 0) {
            mWhichChild = 0;
            mFirstTime = true;
        } else if (mWhichChild >= start && mWhichChild < start + count) {
            // Try showing new displayed child, wrapping if needed
            setDisplayedChild(mWhichChild);
        }
!!!9510917.java!!!	removeViewsInLayout(in start : int, in count : int) : void
        removeViews(start, count);
!!!9511045.java!!!	getCurrentView() : View
        return getChildAt(mWhichChild);
!!!9511173.java!!!	getInAnimation() : Animation
        return mInAnimation;
!!!9511301.java!!!	setInAnimation(inout inAnimation : Animation) : void
        mInAnimation = inAnimation;
!!!9511429.java!!!	getOutAnimation() : Animation
        return mOutAnimation;
!!!9511557.java!!!	setOutAnimation(inout outAnimation : Animation) : void
        mOutAnimation = outAnimation;
!!!9511685.java!!!	setInAnimation(inout context : Context, in resourceID : int) : void
        setInAnimation(AnimationUtils.loadAnimation(context, resourceID));
!!!9511813.java!!!	setOutAnimation(inout context : Context, in resourceID : int) : void
        setOutAnimation(AnimationUtils.loadAnimation(context, resourceID));
!!!9511941.java!!!	getAnimateFirstView() : boolean
        return mAnimateFirstTime;
!!!9512069.java!!!	setAnimateFirstView(inout animate : boolean) : void
        mAnimateFirstTime = animate;
!!!9512197.java!!!	getBaseline() : int
        return (getCurrentView() != null) ? getCurrentView().getBaseline() : super.getBaseline();
!!!9512325.java!!!	getAccessibilityClassName() : CharSequence
        return ViewAnimator.class.getName();
