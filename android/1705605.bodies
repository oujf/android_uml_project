class GeofenceProxy
!!!11757957.java!!!	createAndBind(inout context : Context, in overlaySwitchResId : int, in defaultServicePackageNameResId : int, in initialPackageNamesResId : int, inout handler : Handler, inout gpsGeofence : IGpsGeofenceHardware, inout fusedGeofenceHardware : IFusedGeofenceHardware) : GeofenceProxy
        GeofenceProxy proxy = new GeofenceProxy(context, overlaySwitchResId,
            defaultServicePackageNameResId, initialPackageNamesResId, handler, gpsGeofence,
            fusedGeofenceHardware);
        if (proxy.bindGeofenceProvider()) {
            return proxy;
        } else {
            return null;
        }
!!!11758085.java!!!	GeofenceProxy(inout context : Context, in overlaySwitchResId : int, in defaultServicePackageNameResId : int, in initialPackageNamesResId : int, inout handler : Handler, inout gpsGeofence : IGpsGeofenceHardware, inout fusedGeofenceHardware : IFusedGeofenceHardware)
        mContext = context;
        mServiceWatcher = new ServiceWatcher(context, TAG, SERVICE_ACTION, overlaySwitchResId,
            defaultServicePackageNameResId, initialPackageNamesResId, mRunnable, handler);
        mGpsGeofenceHardware = gpsGeofence;
        mFusedGeofenceHardware = fusedGeofenceHardware;
        bindHardwareGeofence();
!!!11758213.java!!!	bindGeofenceProvider() : boolean
        return mServiceWatcher.start();
!!!11758341.java!!!	bindHardwareGeofence() : void
        mContext.bindServiceAsUser(new Intent(mContext, GeofenceHardwareService.class),
                mServiceConnection, Context.BIND_AUTO_CREATE, UserHandle.SYSTEM);
!!!11758469.java!!!	setGeofenceHardwareInProviderLocked() : void
        try {
            IGeofenceProvider provider = IGeofenceProvider.Stub.asInterface(
                      mServiceWatcher.getBinder());
            if (provider != null) {
                provider.setGeofenceHardware(mGeofenceHardware);
            }
        } catch (RemoteException e) {
            Log.e(TAG, "Remote Exception: setGeofenceHardwareInProviderLocked: " + e);
        }
!!!11758597.java!!!	setGpsGeofenceLocked() : void
        try {
            if (mGpsGeofenceHardware != null) {
                mGeofenceHardware.setGpsGeofenceHardware(mGpsGeofenceHardware);
            }
        } catch (RemoteException e) {
            Log.e(TAG, "Error while connecting to GeofenceHardwareService");
        }
!!!11758725.java!!!	setFusedGeofenceLocked() : void
        try {
            mGeofenceHardware.setFusedGeofenceHardware(mFusedGeofenceHardware);
        } catch(RemoteException e) {
            Log.e(TAG, "Error while connecting to GeofenceHardwareService");
        }
