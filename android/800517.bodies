class QSContainerImpl
!!!3348485.java!!!	QSContainerImpl(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!3348613.java!!!	onFinishInflate() : void
        super.onFinishInflate();
        mQSPanel = findViewById(R.id.quick_settings_panel);
        mQSDetail = findViewById(R.id.qs_detail);
        mHeader = findViewById(R.id.header);
        mQSCustomizer = findViewById(R.id.qs_customize);
        mQSFooter = findViewById(R.id.qs_footer);
        mBackground = findViewById(R.id.qs_background);
        mGutterHeight = getContext().getResources().getDimensionPixelSize(R.dimen.qs_gutter_height);
        mFullElevation = mQSPanel.getElevation();

        setClickable(true);
        setImportantForAccessibility(IMPORTANT_FOR_ACCESSIBILITY_NO);
!!!3348741.java!!!	performClick() : boolean
        // Want to receive clicks so missing QQS tiles doesn't cause collapse, but
        // don't want to do anything with them.
        return true;
!!!3348869.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        // Since we control our own bottom, be whatever size we want.
        // Otherwise the QSPanel ends up with 0 height when the window is only the
        // size of the status bar.
        mQSPanel.measure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(
                MeasureSpec.getSize(heightMeasureSpec), MeasureSpec.UNSPECIFIED));
        int width = mQSPanel.getMeasuredWidth();
        LayoutParams layoutParams = (LayoutParams) mQSPanel.getLayoutParams();
        int height = layoutParams.topMargin + layoutParams.bottomMargin
                + mQSPanel.getMeasuredHeight();
        super.onMeasure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.EXACTLY),
                MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY));

        // QSCustomizer will always be the height of the screen, but do this after
        // other measuring to avoid changing the height of the QS.
        getDisplay().getRealSize(mSizePoint);
        mQSCustomizer.measure(widthMeasureSpec,
                MeasureSpec.makeMeasureSpec(mSizePoint.y, MeasureSpec.EXACTLY));
!!!3348997.java!!!	onLayout(inout changed : boolean, in left : int, in top : int, in right : int, in bottom : int) : void
        super.onLayout(changed, left, top, right, bottom);
        updateExpansion();
!!!3349125.java!!!	setHeightOverride(in heightOverride : int) : void
        mHeightOverride = heightOverride;
        updateExpansion();
!!!3349253.java!!!	updateExpansion() : void
        int height = calculateContainerHeight();
        int gutterHeight = Math.round(mQsExpansion * mGutterHeight);
        setBottom(getTop() + height + gutterHeight);
        mQSDetail.setBottom(getTop() + height);
        mBackground.setBottom(getTop() + height);
        // Pin QS Footer to the bottom of the panel.
        mQSFooter.setTranslationY(height - mQSFooter.getHeight());

        float elevation = mQsExpansion * mFullElevation;
        mQSDetail.setElevation(elevation);
        mBackground.setElevation(elevation);
        mQSFooter.setElevation(elevation);
        mQSPanel.setElevation(elevation);
!!!3349381.java!!!	calculateContainerHeight() : int
        int heightOverride = mHeightOverride != -1 ? mHeightOverride : getMeasuredHeight();
        return mQSCustomizer.isCustomizing() ? mQSCustomizer.getHeight()
                : Math.round(mQsExpansion * (heightOverride - mHeader.getHeight()))
                + mHeader.getHeight();
!!!3349509.java!!!	setExpansion(in expansion : float) : void
        mQsExpansion = expansion;
        updateExpansion();
!!!3349637.java!!!	setGutterEnabled(inout gutterEnabled : boolean) : void
        if (gutterEnabled == (mGutterHeight != 0)) {
            return;
        }
        if (gutterEnabled) {
            mGutterHeight = getContext().getResources().getDimensionPixelSize(
                    R.dimen.qs_gutter_height);
        } else {
            mGutterHeight = 0;
        }
        updateExpansion();
