class Stub
!!!13864709.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!13864837.java!!!	asInterface(inout obj : android.os.IBinder) : IWebViewUpdateService
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.webkit.IWebViewUpdateService))) {
return ((android.webkit.IWebViewUpdateService)iin);
}
return new android.webkit.IWebViewUpdateService.Stub.Proxy(obj);
!!!13864965.java!!!	asBinder() : android.os.IBinder
return this;
!!!13865093.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_notifyRelroCreationCompleted:
{
data.enforceInterface(DESCRIPTOR);
this.notifyRelroCreationCompleted();
reply.writeNoException();
return true;
}
case TRANSACTION_waitForAndGetProvider:
{
data.enforceInterface(DESCRIPTOR);
android.webkit.WebViewProviderResponse _result = this.waitForAndGetProvider();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_changeProviderAndSetting:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _result = this.changeProviderAndSetting(_arg0);
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_getValidWebViewPackages:
{
data.enforceInterface(DESCRIPTOR);
android.webkit.WebViewProviderInfo[] _result = this.getValidWebViewPackages();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getAllWebViewPackages:
{
data.enforceInterface(DESCRIPTOR);
android.webkit.WebViewProviderInfo[] _result = this.getAllWebViewPackages();
reply.writeNoException();
reply.writeTypedArray(_result, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
return true;
}
case TRANSACTION_getCurrentWebViewPackageName:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _result = this.getCurrentWebViewPackageName();
reply.writeNoException();
reply.writeString(_result);
return true;
}
case TRANSACTION_getCurrentWebViewPackage:
{
data.enforceInterface(DESCRIPTOR);
android.content.pm.PackageInfo _result = this.getCurrentWebViewPackage();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_isFallbackPackage:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
boolean _result = this.isFallbackPackage(_arg0);
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_enableFallbackLogic:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.enableFallbackLogic(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_isMultiProcessEnabled:
{
data.enforceInterface(DESCRIPTOR);
boolean _result = this.isMultiProcessEnabled();
reply.writeNoException();
reply.writeInt(((_result)?(1):(0)));
return true;
}
case TRANSACTION_enableMultiProcess:
{
data.enforceInterface(DESCRIPTOR);
boolean _arg0;
_arg0 = (0!=data.readInt());
this.enableMultiProcess(_arg0);
reply.writeNoException();
return true;
}
}
return super.onTransact(code, data, reply, flags);
