class Proxy
!!!13126789.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!13126917.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!13127045.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!13127173.java!!!	acknowledgeStartMessage(in jobId : int, inout ongoing : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
_data.writeInt(((ongoing)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_acknowledgeStartMessage, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13127301.java!!!	acknowledgeStopMessage(in jobId : int, inout reschedule : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
_data.writeInt(((reschedule)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_acknowledgeStopMessage, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!13127429.java!!!	dequeueWork(in jobId : int) : android.app.job.JobWorkItem
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.app.job.JobWorkItem _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
mRemote.transact(Stub.TRANSACTION_dequeueWork, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.app.job.JobWorkItem.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13127557.java!!!	completeWork(in jobId : int, in workId : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
_data.writeInt(workId);
mRemote.transact(Stub.TRANSACTION_completeWork, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!13127685.java!!!	jobFinished(in jobId : int, inout reschedule : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(jobId);
_data.writeInt(((reschedule)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_jobFinished, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
