class Builder
!!!6737797.java!!!	Builder(in requestId : int, in subsequenceId : int, inout request : CaptureRequest, inout repeating : boolean, inout jpegSurfaceIds : Collection<Long>)
            checkNotNull(request, "request must not be null");
            mRequestId = requestId;
            mSubsequenceId = subsequenceId;
            mRequest = request;
            mRepeating = repeating;
            mJpegSurfaceIds = jpegSurfaceIds;
            mNumJpegTargets = numJpegTargets(mRequest);
            mNumPreviewTargets = numPreviewTargets(mRequest);
!!!6737925.java!!!	jpegType(inout s : Surface) : boolean
            return LegacyCameraDevice.containsSurfaceId(s, mJpegSurfaceIds);
!!!6738053.java!!!	previewType(inout s : Surface) : boolean
            return !jpegType(s);
!!!6738181.java!!!	numJpegTargets(inout request : CaptureRequest) : int
            int count = 0;
            for (Surface s : request.getTargets()) {
                try {
                    if (jpegType(s)) {
                        ++count;
                    }
                } catch (LegacyExceptionUtils.BufferQueueAbandonedException e) {
                    Log.d(TAG, "Surface abandoned, skipping...", e);
                }
            }
            return count;
!!!6738309.java!!!	numPreviewTargets(inout request : CaptureRequest) : int
            int count = 0;
            for (Surface s : request.getTargets()) {
                try {
                    if (previewType(s)) {
                        ++count;
                    }
                } catch (LegacyExceptionUtils.BufferQueueAbandonedException e) {
                    Log.d(TAG, "Surface abandoned, skipping...", e);
                }
            }
            return count;
!!!6738437.java!!!	build(in frameNumber : long) : RequestHolder
            return new RequestHolder(mRequestId, mSubsequenceId, mRequest, mRepeating, frameNumber,
                    mNumJpegTargets, mNumPreviewTargets, mJpegSurfaceIds);
