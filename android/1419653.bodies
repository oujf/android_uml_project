class RecordingCanvas
!!!8687493.java!!!	RecordingCanvas(in nativeCanvas : long)
        super(nativeCanvas);
!!!8687621.java!!!	drawArc(in left : float, in top : float, in right : float, in bottom : float, in startAngle : float, in sweepAngle : float, inout useCenter : boolean, inout paint : Paint) : void
        nDrawArc(mNativeCanvasWrapper, left, top, right, bottom, startAngle, sweepAngle,
                useCenter, paint.getNativeInstance());
!!!8687749.java!!!	drawArc(inout oval : RectF, in startAngle : float, in sweepAngle : float, inout useCenter : boolean, inout paint : Paint) : void
        drawArc(oval.left, oval.top, oval.right, oval.bottom, startAngle, sweepAngle, useCenter,
                paint);
!!!8687877.java!!!	drawARGB(in a : int, in r : int, in g : int, in b : int) : void
        drawColor(Color.argb(a, r, g, b));
!!!8688005.java!!!	drawBitmap(inout bitmap : Bitmap, in left : float, in top : float, inout paint : Paint) : void
        throwIfCannotDraw(bitmap);
        nDrawBitmap(mNativeCanvasWrapper, bitmap, left, top,
                paint != null ? paint.getNativeInstance() : 0, mDensity, mScreenDensity,
                bitmap.mDensity);
!!!8688133.java!!!	drawBitmap(inout bitmap : Bitmap, inout matrix : Matrix, inout paint : Paint) : void
        nDrawBitmapMatrix(mNativeCanvasWrapper, bitmap, matrix.ni(),
                paint != null ? paint.getNativeInstance() : 0);
!!!8688261.java!!!	drawBitmap(inout bitmap : Bitmap, inout src : Rect, inout dst : Rect, inout paint : Paint) : void
        if (dst == null) {
            throw new NullPointerException();
        }
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();

        int left, top, right, bottom;
        if (src == null) {
            left = top = 0;
            right = bitmap.getWidth();
            bottom = bitmap.getHeight();
        } else {
            left = src.left;
            right = src.right;
            top = src.top;
            bottom = src.bottom;
        }

        nDrawBitmap(mNativeCanvasWrapper, bitmap, left, top, right, bottom,
                dst.left, dst.top, dst.right, dst.bottom, nativePaint, mScreenDensity,
                bitmap.mDensity);
!!!8688389.java!!!	drawBitmap(inout bitmap : Bitmap, inout src : Rect, inout dst : RectF, inout paint : Paint) : void
        if (dst == null) {
            throw new NullPointerException();
        }
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();

        float left, top, right, bottom;
        if (src == null) {
            left = top = 0;
            right = bitmap.getWidth();
            bottom = bitmap.getHeight();
        } else {
            left = src.left;
            right = src.right;
            top = src.top;
            bottom = src.bottom;
        }

        nDrawBitmap(mNativeCanvasWrapper, bitmap, left, top, right, bottom,
                dst.left, dst.top, dst.right, dst.bottom, nativePaint, mScreenDensity,
                bitmap.mDensity);
!!!8688517.java!!!	drawBitmap(inout colors : int [[]], in offset : int, in stride : int, in x : float, in y : float, in width : int, in height : int, inout hasAlpha : boolean, inout paint : Paint) : void
        // check for valid input
        if (width < 0) {
            throw new IllegalArgumentException("width must be >= 0");
        }
        if (height < 0) {
            throw new IllegalArgumentException("height must be >= 0");
        }
        if (Math.abs(stride) < width) {
            throw new IllegalArgumentException("abs(stride) must be >= width");
        }
        int lastScanline = offset + (height - 1) * stride;
        int length = colors.length;
        if (offset < 0 || (offset + width > length) || lastScanline < 0
                || (lastScanline + width > length)) {
            throw new ArrayIndexOutOfBoundsException();
        }
        // quick escape if there's nothing to draw
        if (width == 0 || height == 0) {
            return;
        }
        // punch down to native for the actual draw
        nDrawBitmap(mNativeCanvasWrapper, colors, offset, stride, x, y, width, height, hasAlpha,
                paint != null ? paint.getNativeInstance() : 0);
!!!8688645.java!!!	drawBitmap(inout colors : int [[]], in offset : int, in stride : int, in x : int, in y : int, in width : int, in height : int, inout hasAlpha : boolean, inout paint : Paint) : void
        // call through to the common float version
        drawBitmap(colors, offset, stride, (float) x, (float) y, width, height,
                hasAlpha, paint);
!!!8688773.java!!!	drawBitmapMesh(inout bitmap : Bitmap, in meshWidth : int, in meshHeight : int, inout verts : float [[]], in vertOffset : int, inout colors : int [[]], in colorOffset : int, inout paint : Paint) : void
        if ((meshWidth | meshHeight | vertOffset | colorOffset) < 0) {
            throw new ArrayIndexOutOfBoundsException();
        }
        if (meshWidth == 0 || meshHeight == 0) {
            return;
        }
        int count = (meshWidth + 1) * (meshHeight + 1);
        // we mul by 2 since we need two floats per vertex
        checkRange(verts.length, vertOffset, count * 2);
        if (colors != null) {
            // no mul by 2, since we need only 1 color per vertex
            checkRange(colors.length, colorOffset, count);
        }
        nDrawBitmapMesh(mNativeCanvasWrapper, bitmap, meshWidth, meshHeight,
                verts, vertOffset, colors, colorOffset,
                paint != null ? paint.getNativeInstance() : 0);
!!!8688901.java!!!	drawCircle(in cx : float, in cy : float, in radius : float, inout paint : Paint) : void
        nDrawCircle(mNativeCanvasWrapper, cx, cy, radius, paint.getNativeInstance());
!!!8689029.java!!!	drawColor(in color : int) : void
        nDrawColor(mNativeCanvasWrapper, color, PorterDuff.Mode.SRC_OVER.nativeInt);
!!!8689157.java!!!	drawColor(in color : int, inout mode : PorterDuff.Mode) : void
        nDrawColor(mNativeCanvasWrapper, color, mode.nativeInt);
!!!8689285.java!!!	drawLine(in startX : float, in startY : float, in stopX : float, in stopY : float, inout paint : Paint) : void
        nDrawLine(mNativeCanvasWrapper, startX, startY, stopX, stopY, paint.getNativeInstance());
!!!8689413.java!!!	drawLines(inout pts : float [[]], in offset : int, in count : int, inout paint : Paint) : void
        nDrawLines(mNativeCanvasWrapper, pts, offset, count, paint.getNativeInstance());
!!!8689541.java!!!	drawLines(inout pts : float [[]], inout paint : Paint) : void
        drawLines(pts, 0, pts.length, paint);
!!!8689669.java!!!	drawOval(in left : float, in top : float, in right : float, in bottom : float, inout paint : Paint) : void
        nDrawOval(mNativeCanvasWrapper, left, top, right, bottom, paint.getNativeInstance());
!!!8689797.java!!!	drawOval(inout oval : RectF, inout paint : Paint) : void
        if (oval == null) {
            throw new NullPointerException();
        }
        drawOval(oval.left, oval.top, oval.right, oval.bottom, paint);
!!!8689925.java!!!	drawPaint(inout paint : Paint) : void
        nDrawPaint(mNativeCanvasWrapper, paint.getNativeInstance());
!!!8690053.java!!!	drawPatch(inout patch : NinePatch, inout dst : Rect, inout paint : Paint) : void
        Bitmap bitmap = patch.getBitmap();
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();
        nDrawNinePatch(mNativeCanvasWrapper, bitmap.getNativeInstance(), patch.mNativeChunk,
                dst.left, dst.top, dst.right, dst.bottom, nativePaint,
                mDensity, patch.getDensity());
!!!8690181.java!!!	drawPatch(inout patch : NinePatch, inout dst : RectF, inout paint : Paint) : void
        Bitmap bitmap = patch.getBitmap();
        throwIfCannotDraw(bitmap);
        final long nativePaint = paint == null ? 0 : paint.getNativeInstance();
        nDrawNinePatch(mNativeCanvasWrapper, bitmap.getNativeInstance(), patch.mNativeChunk,
                dst.left, dst.top, dst.right, dst.bottom, nativePaint,
                mDensity, patch.getDensity());
!!!8690309.java!!!	drawPath(inout path : Path, inout paint : Paint) : void
        if (path.isSimplePath && path.rects != null) {
            nDrawRegion(mNativeCanvasWrapper, path.rects.mNativeRegion, paint.getNativeInstance());
        } else {
            nDrawPath(mNativeCanvasWrapper, path.readOnlyNI(), paint.getNativeInstance());
        }
!!!8690437.java!!!	drawPicture(inout picture : Picture) : void
        picture.endRecording();
        int restoreCount = save();
        picture.draw(this);
        restoreToCount(restoreCount);
!!!8690565.java!!!	drawPicture(inout picture : Picture, inout dst : Rect) : void
        save();
        translate(dst.left, dst.top);
        if (picture.getWidth() > 0 && picture.getHeight() > 0) {
            scale((float) dst.width() / picture.getWidth(),
                    (float) dst.height() / picture.getHeight());
        }
        drawPicture(picture);
        restore();
!!!8690693.java!!!	drawPicture(inout picture : Picture, inout dst : RectF) : void
        save();
        translate(dst.left, dst.top);
        if (picture.getWidth() > 0 && picture.getHeight() > 0) {
            scale(dst.width() / picture.getWidth(), dst.height() / picture.getHeight());
        }
        drawPicture(picture);
        restore();
!!!8690821.java!!!	drawPoint(in x : float, in y : float, inout paint : Paint) : void
        nDrawPoint(mNativeCanvasWrapper, x, y, paint.getNativeInstance());
!!!8690949.java!!!	drawPoints(inout pts : float [[]], in offset : int, in count : int, inout paint : Paint) : void
        nDrawPoints(mNativeCanvasWrapper, pts, offset, count, paint.getNativeInstance());
!!!8691077.java!!!	drawPoints(inout pts : float [[]], inout paint : Paint) : void
        drawPoints(pts, 0, pts.length, paint);
!!!8691205.java!!!	drawPosText(inout text : char [[]], in index : int, in count : int, inout pos : float [[]], inout paint : Paint) : void
        if (index < 0 || index + count > text.length || count * 2 > pos.length) {
            throw new IndexOutOfBoundsException();
        }
        for (int i = 0; i < count; i++) {
            drawText(text, index + i, 1, pos[i * 2], pos[i * 2 + 1], paint);
        }
!!!8691333.java!!!	drawPosText(in text : String, inout pos : float [[]], inout paint : Paint) : void
        drawPosText(text.toCharArray(), 0, text.length(), pos, paint);
!!!8691461.java!!!	drawRect(in left : float, in top : float, in right : float, in bottom : float, inout paint : Paint) : void
        nDrawRect(mNativeCanvasWrapper, left, top, right, bottom, paint.getNativeInstance());
!!!8691589.java!!!	drawRect(inout r : Rect, inout paint : Paint) : void
        drawRect(r.left, r.top, r.right, r.bottom, paint);
!!!8691717.java!!!	drawRect(inout rect : RectF, inout paint : Paint) : void
        nDrawRect(mNativeCanvasWrapper,
                rect.left, rect.top, rect.right, rect.bottom, paint.getNativeInstance());
!!!8691845.java!!!	drawRGB(in r : int, in g : int, in b : int) : void
        drawColor(Color.rgb(r, g, b));
!!!8691973.java!!!	drawRoundRect(in left : float, in top : float, in right : float, in bottom : float, in rx : float, in ry : float, inout paint : Paint) : void
        nDrawRoundRect(mNativeCanvasWrapper, left, top, right, bottom, rx, ry,
                paint.getNativeInstance());
!!!8692101.java!!!	drawRoundRect(inout rect : RectF, in rx : float, in ry : float, inout paint : Paint) : void
        drawRoundRect(rect.left, rect.top, rect.right, rect.bottom, rx, ry, paint);
!!!8692229.java!!!	drawText(inout text : char [[]], in index : int, in count : int, in x : float, in y : float, inout paint : Paint) : void
        if ((index | count | (index + count)
                | (text.length - index - count)) < 0) {
            throw new IndexOutOfBoundsException();
        }
        nDrawText(mNativeCanvasWrapper, text, index, count, x, y, paint.mBidiFlags,
                paint.getNativeInstance(), paint.mNativeTypeface);
!!!8692357.java!!!	drawText(inout text : CharSequence, in start : int, in end : int, in x : float, in y : float, inout paint : Paint) : void
        if ((start | end | (end - start) | (text.length() - end)) < 0) {
            throw new IndexOutOfBoundsException();
        }
        if (text instanceof String || text instanceof SpannedString
                || text instanceof SpannableString) {
            nDrawText(mNativeCanvasWrapper, text.toString(), start, end, x, y,
                    paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
        } else if (text instanceof GraphicsOperations) {
            ((GraphicsOperations) text).drawText(this, start, end, x, y,
                    paint);
        } else {
            char[] buf = TemporaryBuffer.obtain(end - start);
            TextUtils.getChars(text, start, end, buf, 0);
            nDrawText(mNativeCanvasWrapper, buf, 0, end - start, x, y,
                    paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
            TemporaryBuffer.recycle(buf);
        }
!!!8692485.java!!!	drawText(in text : String, in x : float, in y : float, inout paint : Paint) : void
        nDrawText(mNativeCanvasWrapper, text, 0, text.length(), x, y, paint.mBidiFlags,
                paint.getNativeInstance(), paint.mNativeTypeface);
!!!8692613.java!!!	drawText(in text : String, in start : int, in end : int, in x : float, in y : float, inout paint : Paint) : void
        if ((start | end | (end - start) | (text.length() - end)) < 0) {
            throw new IndexOutOfBoundsException();
        }
        nDrawText(mNativeCanvasWrapper, text, start, end, x, y, paint.mBidiFlags,
                paint.getNativeInstance(), paint.mNativeTypeface);
!!!8692741.java!!!	drawTextOnPath(inout text : char [[]], in index : int, in count : int, inout path : Path, in hOffset : float, in vOffset : float, inout paint : Paint) : void
        if (index < 0 || index + count > text.length) {
            throw new ArrayIndexOutOfBoundsException();
        }
        nDrawTextOnPath(mNativeCanvasWrapper, text, index, count,
                path.readOnlyNI(), hOffset, vOffset,
                paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
!!!8692869.java!!!	drawTextOnPath(in text : String, inout path : Path, in hOffset : float, in vOffset : float, inout paint : Paint) : void
        if (text.length() > 0) {
            nDrawTextOnPath(mNativeCanvasWrapper, text, path.readOnlyNI(), hOffset, vOffset,
                    paint.mBidiFlags, paint.getNativeInstance(), paint.mNativeTypeface);
        }
!!!8692997.java!!!	drawTextRun(inout text : char [[]], in index : int, in count : int, in contextIndex : int, in contextCount : int, in x : float, in y : float, inout isRtl : boolean, inout paint : Paint) : void

        if (text == null) {
            throw new NullPointerException("text is null");
        }
        if (paint == null) {
            throw new NullPointerException("paint is null");
        }
        if ((index | count | contextIndex | contextCount | index - contextIndex
                | (contextIndex + contextCount) - (index + count)
                | text.length - (contextIndex + contextCount)) < 0) {
            throw new IndexOutOfBoundsException();
        }

        nDrawTextRun(mNativeCanvasWrapper, text, index, count, contextIndex, contextCount,
                x, y, isRtl, paint.getNativeInstance(), paint.mNativeTypeface);
!!!8693125.java!!!	drawTextRun(inout text : CharSequence, in start : int, in end : int, in contextStart : int, in contextEnd : int, in x : float, in y : float, inout isRtl : boolean, inout paint : Paint) : void

        if (text == null) {
            throw new NullPointerException("text is null");
        }
        if (paint == null) {
            throw new NullPointerException("paint is null");
        }
        if ((start | end | contextStart | contextEnd | start - contextStart | end - start
                | contextEnd - end | text.length() - contextEnd) < 0) {
            throw new IndexOutOfBoundsException();
        }

        if (text instanceof String || text instanceof SpannedString
                || text instanceof SpannableString) {
            nDrawTextRun(mNativeCanvasWrapper, text.toString(), start, end, contextStart,
                    contextEnd, x, y, isRtl, paint.getNativeInstance(), paint.mNativeTypeface);
        } else if (text instanceof GraphicsOperations) {
            ((GraphicsOperations) text).drawTextRun(this, start, end,
                    contextStart, contextEnd, x, y, isRtl, paint);
        } else {
            int contextLen = contextEnd - contextStart;
            int len = end - start;
            char[] buf = TemporaryBuffer.obtain(contextLen);
            TextUtils.getChars(text, contextStart, contextEnd, buf, 0);
            nDrawTextRun(mNativeCanvasWrapper, buf, start - contextStart, len,
                    0, contextLen, x, y, isRtl, paint.getNativeInstance(), paint.mNativeTypeface);
            TemporaryBuffer.recycle(buf);
        }
!!!8693253.java!!!	drawVertices(inout mode : VertexMode, in vertexCount : int, inout verts : float [[]], in vertOffset : int, inout texs : float [[]], in texOffset : int, inout colors : int [[]], in colorOffset : int, inout indices : short [[]], in indexOffset : int, in indexCount : int, inout paint : Paint) : void
        checkRange(verts.length, vertOffset, vertexCount);
        if (isHardwareAccelerated()) {
            return;
        }
        if (texs != null) {
            checkRange(texs.length, texOffset, vertexCount);
        }
        if (colors != null) {
            checkRange(colors.length, colorOffset, vertexCount / 2);
        }
        if (indices != null) {
            checkRange(indices.length, indexOffset, indexCount);
        }
        nDrawVertices(mNativeCanvasWrapper, mode.nativeInt, vertexCount, verts,
                vertOffset, texs, texOffset, colors, colorOffset,
                indices, indexOffset, indexCount, paint.getNativeInstance());
