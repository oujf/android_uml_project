class CallbackMap
!!!8133381.java!!!	setCallback(inout caller : IBinder, inout cb : ITextToSpeechCallback) : void
            synchronized (mCallerToCallback) {
                ITextToSpeechCallback old;
                if (cb != null) {
                    register(cb, caller);
                    old = mCallerToCallback.put(caller, cb);
                } else {
                    old = mCallerToCallback.remove(caller);
                }
                if (old != null && old != cb) {
                    unregister(old);
                }
            }
!!!8133509.java!!!	dispatchOnStop(inout callerIdentity : Object, in utteranceId : String, inout started : boolean) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onStop(utteranceId, started);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback onStop failed: " + e);
            }
!!!8133637.java!!!	dispatchOnSuccess(inout callerIdentity : Object, in utteranceId : String) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onSuccess(utteranceId);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback onDone failed: " + e);
            }
!!!8133765.java!!!	dispatchOnStart(inout callerIdentity : Object, in utteranceId : String) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onStart(utteranceId);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback onStart failed: " + e);
            }
!!!8133893.java!!!	dispatchOnError(inout callerIdentity : Object, in utteranceId : String, in errorCode : int) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onError(utteranceId, errorCode);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback onError failed: " + e);
            }
!!!8134021.java!!!	dispatchOnBeginSynthesis(inout callerIdentity : Object, in utteranceId : String, in sampleRateInHz : int, in audioFormat : int, in channelCount : int) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onBeginSynthesis(utteranceId, sampleRateInHz, audioFormat, channelCount);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback dispatchOnBeginSynthesis(String, int, int, int) failed: " + e);
            }
!!!8134149.java!!!	dispatchOnAudioAvailable(inout callerIdentity : Object, in utteranceId : String, inout buffer : byte [[]]) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onAudioAvailable(utteranceId, buffer);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback dispatchOnAudioAvailable(String, byte[]) failed: " + e);
            }
!!!8134277.java!!!	dispatchOnRangeStart(inout callerIdentity : Object, in utteranceId : String, in start : int, in end : int, in frame : int) : void
            ITextToSpeechCallback cb = getCallbackFor(callerIdentity);
            if (cb == null) return;
            try {
                cb.onRangeStart(utteranceId, start, end, frame);
            } catch (RemoteException e) {
                Log.e(TAG, "Callback dispatchOnRangeStart(String, int, int, int) failed: " + e);
            }
!!!8134405.java!!!	onCallbackDied(inout callback : ITextToSpeechCallback, inout cookie : Object) : void
            IBinder caller = (IBinder) cookie;
            synchronized (mCallerToCallback) {
                mCallerToCallback.remove(caller);
            }
            //mSynthHandler.stopForApp(caller);
!!!8134533.java!!!	kill() : void
            synchronized (mCallerToCallback) {
                mCallerToCallback.clear();
                super.kill();
            }
!!!8134661.java!!!	getCallbackFor(inout caller : Object) : ITextToSpeechCallback
            ITextToSpeechCallback cb;
            IBinder asBinder = (IBinder) caller;
            synchronized (mCallerToCallback) {
                cb = mCallerToCallback.get(asBinder);
            }

            return cb;
