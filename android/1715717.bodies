class NetworkPolicyManagerInternalImpl
!!!11873669.java!!!	resetUserState(in userId : int) : void
            synchronized (mUidRulesFirstLock) {
                boolean changed = removeUserStateUL(userId, false);
                changed = addDefaultRestrictBackgroundWhitelistUidsUL(userId) || changed;
                if (changed) {
                    synchronized (mNetworkPoliciesSecondLock) {
                        writePolicyAL();
                    }
                }
            }
!!!11873797.java!!!	isUidRestrictedOnMeteredNetworks(in uid : int) : boolean
            final int uidRules;
            final boolean isBackgroundRestricted;
            synchronized (mUidRulesFirstLock) {
                uidRules = mUidRules.get(uid, RULE_ALLOW_ALL);
                isBackgroundRestricted = mRestrictBackground;
            }
            return isBackgroundRestricted
                    && !hasRule(uidRules, RULE_ALLOW_METERED)
                    && !hasRule(uidRules, RULE_TEMPORARY_ALLOW_METERED);
!!!11873925.java!!!	isUidNetworkingBlocked(in uid : int, in ifname : String) : boolean
            final int uidRules;
            final boolean isBackgroundRestricted;
            final boolean isNetworkMetered;
            synchronized (mUidRulesFirstLock) {
                uidRules = mUidRules.get(uid, RULE_NONE);
                isBackgroundRestricted = mRestrictBackground;
                synchronized (mNetworkPoliciesSecondLock) {
                    isNetworkMetered = mMeteredIfaces.contains(ifname);
                }
            }
            if (hasRule(uidRules, RULE_REJECT_ALL)) {
                if (LOGV) logUidStatus(uid, "blocked by power restrictions");
                return true;
            }
            if (!isNetworkMetered) {
                if (LOGV) logUidStatus(uid, "allowed on unmetered network");
                return false;
            }
            if (hasRule(uidRules, RULE_REJECT_METERED)) {
                if (LOGV) logUidStatus(uid, "blacklisted on metered network");
                return true;
            }
            if (hasRule(uidRules, RULE_ALLOW_METERED)) {
                if (LOGV) logUidStatus(uid, "whitelisted on metered network");
                return false;
            }
            if (hasRule(uidRules, RULE_TEMPORARY_ALLOW_METERED)) {
                if (LOGV) logUidStatus(uid, "temporary whitelisted on metered network");
                return false;
            }
            if (isBackgroundRestricted) {
                if (LOGV) logUidStatus(uid, "blocked when background is restricted");
                return true;
            }
            if (LOGV) logUidStatus(uid, "allowed by default");
            return false;
