class InputConsumerController
!!!3269125.java!!!	InputConsumerController(inout windowManager : IWindowManager)
        mWindowManager = windowManager;
        registerInputConsumer();
!!!3269253.java!!!	setTouchListener(inout listener : InputConsumerController::TouchListener) : void
        mListener = listener;
!!!3269381.java!!!	setRegistrationListener(inout listener : InputConsumerController::RegistrationListener) : void
        mRegistrationListener = listener;
        if (mRegistrationListener != null) {
            mRegistrationListener.onRegistrationChanged(mInputEventReceiver != null);
        }
!!!3269509.java!!!	isRegistered() : boolean
        return mInputEventReceiver != null;
!!!3269637.java!!!	registerInputConsumer() : void
        if (mInputEventReceiver == null) {
            final InputChannel inputChannel = new InputChannel();
            try {
                mWindowManager.destroyInputConsumer(INPUT_CONSUMER_PIP);
                mWindowManager.createInputConsumer(INPUT_CONSUMER_PIP, inputChannel);
            } catch (RemoteException e) {
                Log.e(TAG, "Failed to create PIP input consumer", e);
            }
            mInputEventReceiver = new PipInputEventReceiver(inputChannel, Looper.myLooper());
            if (mRegistrationListener != null) {
                mRegistrationListener.onRegistrationChanged(true /* isRegistered */);
            }
        }
!!!3269765.java!!!	unregisterInputConsumer() : void
        if (mInputEventReceiver != null) {
            try {
                mWindowManager.destroyInputConsumer(INPUT_CONSUMER_PIP);
            } catch (RemoteException e) {
                Log.e(TAG, "Failed to destroy PIP input consumer", e);
            }
            mInputEventReceiver.dispose();
            mInputEventReceiver = null;
            if (mRegistrationListener != null) {
                mRegistrationListener.onRegistrationChanged(false /* isRegistered */);
            }
        }
!!!3269893.java!!!	dump(inout pw : PrintWriter, in prefix : String) : void
        final String innerPrefix = prefix + "  ";
        pw.println(prefix + TAG);
        pw.println(innerPrefix + "registered=" + (mInputEventReceiver != null));
