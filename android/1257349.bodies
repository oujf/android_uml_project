class DnsEvent
!!!7293957.java!!!	DnsEvent(in netId : int, in transports : long, in initialCapacity : int)
        this.netId = netId;
        this.transports = transports;
        eventTypes = new byte[initialCapacity];
        returnCodes = new byte[initialCapacity];
        latenciesMs = new int[initialCapacity];
!!!7294085.java!!!	addResult(in eventType : byte, in returnCode : byte, in latencyMs : int) : void
        if (eventCount >= SIZE_LIMIT) {
            // TODO: implement better rate limiting that does not biases metrics.
            return;
        }
        if (eventCount == eventTypes.length) {
            resize((int) (1.4 * eventCount));
        }
        eventTypes[eventCount] = eventType;
        returnCodes[eventCount] = returnCode;
        latenciesMs[eventCount] = latencyMs;
        eventCount++;
!!!7294213.java!!!	resize(in newLength : int) : void
        eventTypes = Arrays.copyOf(eventTypes, newLength);
        returnCodes = Arrays.copyOf(returnCodes, newLength);
        latenciesMs = Arrays.copyOf(latenciesMs, newLength);
!!!7294341.java!!!	toString() : String
        StringBuilder builder = new StringBuilder("DnsEvent(").append(netId).append(", ");
        for (int t : BitUtils.unpackBits(transports)) {
            builder.append(NetworkCapabilities.transportNameOf(t)).append(", ");
        }
        return builder.append(eventCount).append(" events)").toString();
