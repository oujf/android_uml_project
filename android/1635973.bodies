class AppTimeTracker
!!!11178501.java!!!	AppTimeTracker(inout receiver : PendingIntent)
        mReceiver = receiver;
!!!11178629.java!!!	start(in packageName : String) : void
        long now = SystemClock.elapsedRealtime();
        if (mStartedTime == 0) {
            mStartedTime = now;
        }
        if (!packageName.equals(mStartedPackage)) {
            if (mStartedPackageTime != null) {
                long elapsedTime = now - mStartedTime;
                mStartedPackageTime.value += elapsedTime;
                mTotalTime += elapsedTime;
            }
            mStartedPackage = packageName;
            mStartedPackageTime = mPackageTimes.get(packageName);
            if (mStartedPackageTime == null) {
                mStartedPackageTime = new MutableLong(0);
                mPackageTimes.put(packageName, mStartedPackageTime);
            }
        }
!!!11178757.java!!!	stop() : void
        if (mStartedTime != 0) {
            long elapsedTime = SystemClock.elapsedRealtime() - mStartedTime;
            mTotalTime += elapsedTime;
            if (mStartedPackageTime != null) {
                mStartedPackageTime.value += elapsedTime;
            }
            mStartedPackage = null;
            mStartedPackageTime = null;
        }
!!!11178885.java!!!	deliverResult(inout context : Context) : void
        stop();
        Bundle extras = new Bundle();
        extras.putLong(ActivityOptions.EXTRA_USAGE_TIME_REPORT, mTotalTime);
        Bundle pkgs = new Bundle();
        for (int i=mPackageTimes.size()-1; i>=0; i--) {
            pkgs.putLong(mPackageTimes.keyAt(i), mPackageTimes.valueAt(i).value);
        }
        extras.putBundle(ActivityOptions.EXTRA_USAGE_TIME_REPORT_PACKAGES, pkgs);
        Intent fillinIntent = new Intent();
        fillinIntent.putExtras(extras);
        try {
            mReceiver.send(context, 0, fillinIntent);
        } catch (PendingIntent.CanceledException e) {
        }
!!!11179013.java!!!	dumpWithHeader(inout pw : PrintWriter, in prefix : String, inout details : boolean) : void
        pw.print(prefix); pw.print("AppTimeTracker #");
        pw.print(Integer.toHexString(System.identityHashCode(this)));
        pw.println(":");
        dump(pw, prefix + "  ", details);
!!!11179141.java!!!	dump(inout pw : PrintWriter, in prefix : String, inout details : boolean) : void
        pw.print(prefix); pw.print("mReceiver="); pw.println(mReceiver);
        pw.print(prefix); pw.print("mTotalTime=");
        TimeUtils.formatDuration(mTotalTime, pw);
        pw.println();
        for (int i = 0; i < mPackageTimes.size(); i++) {
            pw.print(prefix); pw.print("mPackageTime:"); pw.print(mPackageTimes.keyAt(i));
            pw.print("=");
            TimeUtils.formatDuration(mPackageTimes.valueAt(i).value, pw);
            pw.println();
        }
        if (details && mStartedTime != 0) {
            pw.print(prefix); pw.print("mStartedTime=");
            TimeUtils.formatDuration(SystemClock.elapsedRealtime(), mStartedTime, pw);
            pw.println();
            pw.print(prefix); pw.print("mStartedPackage="); pw.println(mStartedPackage);
        }
