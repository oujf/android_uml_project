class UserPackage
!!!9158789.java!!!	UserPackage(inout user : UserInfo, inout packageInfo : PackageInfo)
        this.mUserInfo = user;
        this.mPackageInfo = packageInfo;
!!!9158917.java!!!	getPackageInfosAllUsers(inout context : Context, in packageName : String, in packageFlags : int) : UserPackage
        List<UserInfo> users = getAllUsers(context);
        List<UserPackage> userPackages = new ArrayList<UserPackage>(users.size());
        for (UserInfo user : users) {
            PackageInfo packageInfo = null;
            try {
                packageInfo = context.getPackageManager().getPackageInfoAsUser(
                        packageName, packageFlags, user.id);
            } catch (NameNotFoundException e) {
            }
            userPackages.add(new UserPackage(user, packageInfo));
        }
        return userPackages;
!!!9159045.java!!!	isEnabledPackage() : boolean
        if (mPackageInfo == null) return false;
        return mPackageInfo.applicationInfo.enabled;
!!!9159173.java!!!	isInstalledPackage() : boolean
        if (mPackageInfo == null) return false;
        return (((mPackageInfo.applicationInfo.flags & ApplicationInfo.FLAG_INSTALLED) != 0)
            && ((mPackageInfo.applicationInfo.privateFlags
                        & ApplicationInfo.PRIVATE_FLAG_HIDDEN) == 0));
!!!9159301.java!!!	hasCorrectTargetSdkVersion(inout packageInfo : PackageInfo) : boolean
        return packageInfo.applicationInfo.targetSdkVersion >= Build.VERSION_CODES.O;
!!!9159429.java!!!	getUserInfo() : UserInfo
        return mUserInfo;
!!!9159557.java!!!	getPackageInfo() : PackageInfo
        return mPackageInfo;
!!!9159685.java!!!	getAllUsers(inout context : Context) : UserInfo
        UserManager userManager = (UserManager) context.getSystemService(Context.USER_SERVICE);
        return userManager.getUsers(false);
