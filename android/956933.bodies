class Context
!!!4476805.java!!!	getNextAutofillId() : int
        if (sLastAutofillId == View.LAST_APP_AUTOFILL_ID - 1) {
            sLastAutofillId = View.NO_ID;
        }

        sLastAutofillId++;

        return sLastAutofillId;
!!!4476933.java!!!	registerComponentCallbacks(inout callback : ComponentCallbacks) : void
        getApplicationContext().registerComponentCallbacks(callback);
!!!4477061.java!!!	unregisterComponentCallbacks(inout callback : ComponentCallbacks) : void
        getApplicationContext().unregisterComponentCallbacks(callback);
!!!4477189.java!!!	getText(in resId : int) : CharSequence
        return getResources().getText(resId);
!!!4477317.java!!!	getString(in resId : int) : String
        return getResources().getString(resId);
!!!4477445.java!!!	getString(in resId : int, inout  : Object...formatArgs) : String
        return getResources().getString(resId, formatArgs);
!!!4477573.java!!!	getColor(in id : int) : int
        return getResources().getColor(id, getTheme());
!!!4477701.java!!!	getDrawable(in id : int) : Drawable
        return getResources().getDrawable(id, getTheme());
!!!4477829.java!!!	getColorStateList(in id : int) : ColorStateList
        return getResources().getColorStateList(id, getTheme());
!!!4478085.java!!!	getThemeResId() : int
        return 0;
!!!4478341.java!!!	obtainStyledAttributes(inout attrs : int [[]]) : TypedArray
        return getTheme().obtainStyledAttributes(attrs);
!!!4478469.java!!!	obtainStyledAttributes(in resid : int, inout attrs : int [[]]) : TypedArray
        return getTheme().obtainStyledAttributes(resid, attrs);
!!!4478597.java!!!	obtainStyledAttributes(inout set : AttributeSet, inout attrs : int [[]]) : TypedArray
        return getTheme().obtainStyledAttributes(set, attrs, 0, 0);
!!!4478725.java!!!	obtainStyledAttributes(inout set : AttributeSet, inout attrs : int [[]], in defStyleAttr : int, in defStyleRes : int) : TypedArray
        return getTheme().obtainStyledAttributes(
            set, attrs, defStyleAttr, defStyleRes);
!!!4479749.java!!!	getSharedPrefsFile(in name : String) : File
        return getSharedPreferencesPath(name);
!!!4484741.java!!!	startActivityAsUser(inout intent : Intent, inout user : UserHandle) : void
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4484997.java!!!	startActivityAsUser(inout intent : Intent, inout options : Bundle, inout userId : UserHandle) : void
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4485125.java!!!	startActivityForResult(in who : String, inout intent : Intent, in requestCode : int, inout options : Bundle) : void
        throw new RuntimeException("This method is only implemented for Activity-based Contexts. "
                + "Check canStartActivityForResult() before calling.");
!!!4485253.java!!!	canStartActivityForResult() : boolean
        return false;
!!!4485637.java!!!	startActivitiesAsUser(inout intents : Intent [[]], inout options : Bundle, inout userHandle : UserHandle) : void
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4490629.java!!!	bindServiceAsUser(inout service : Intent, inout conn : ServiceConnection, in flags : int, inout user : UserHandle) : boolean
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4490757.java!!!	bindServiceAsUser(inout service : Intent, inout conn : ServiceConnection, in flags : int, inout handler : Handler, inout user : UserHandle) : boolean
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4491269.java!!!	getSystemService(inout serviceClass : Class<T>) : T
        // Because subclasses may override getSystemService(String) we cannot
        // perform a lookup by class alone.  We must first map the class to its
        // service name then invoke the string-based method.
        String serviceName = getSystemServiceName(serviceClass);
        return serviceName != null ? (T)getSystemService(serviceName) : null;
!!!4495621.java!!!	isRestricted() : boolean
        return false;
!!!4496133.java!!!	getActivityToken() : IBinder
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4496261.java!!!	getServiceDispatcher(inout conn : ServiceConnection, inout handler : Handler, in flags : int) : IServiceConnection
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4496389.java!!!	getIApplicationThread() : IApplicationThread
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4496517.java!!!	getMainThreadHandler() : Handler
        throw new RuntimeException("Not implemented. Must override in a subclass.");
!!!4496645.java!!!	assertRuntimeOverlayThemable() : void
        // Resources.getSystem() is a singleton and the only Resources not managed by
        // ResourcesManager; therefore Resources.getSystem() is not themable.
        if (getResources() == Resources.getSystem()) {
            throw new IllegalArgumentException("Non-UI context used to display UI; "
                    + "get a UI context from ActivityThread#getSystemUiContext()");
        }
