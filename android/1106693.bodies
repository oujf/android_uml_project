class ViewNodeBuilder
!!!5830533.java!!!	ViewNodeBuilder(inout assist : AssistStructure, inout node : AssistStructure::ViewNode, inout async : boolean)
            mAssist = assist;
            mNode = node;
            mAsync = async;
!!!5830661.java!!!	setId(in id : int, in packageName : String, in typeName : String, in entryName : String) : void
            mNode.mId = id;
            mNode.mIdPackage = packageName;
            mNode.mIdType = typeName;
            mNode.mIdEntry = entryName;
!!!5830789.java!!!	setDimens(in left : int, in top : int, in scrollX : int, in scrollY : int, in width : int, in height : int) : void
            mNode.mX = left;
            mNode.mY = top;
            mNode.mScrollX = scrollX;
            mNode.mScrollY = scrollY;
            mNode.mWidth = width;
            mNode.mHeight = height;
!!!5830917.java!!!	setTransformation(inout matrix : Matrix) : void
            if (matrix == null) {
                mNode.mMatrix = null;
            } else {
                mNode.mMatrix = new Matrix(matrix);
            }
!!!5831045.java!!!	setElevation(in elevation : float) : void
            mNode.mElevation = elevation;
!!!5831173.java!!!	setAlpha(in alpha : float) : void
            mNode.mAlpha = alpha;
!!!5831301.java!!!	setVisibility(in visibility : int) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_VISIBILITY_MASK) | visibility;
!!!5831429.java!!!	setAssistBlocked(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_ASSIST_BLOCKED)
                    | (state ? ViewNode.FLAGS_ASSIST_BLOCKED : 0);
!!!5831557.java!!!	setEnabled(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_DISABLED)
                    | (state ? 0 : ViewNode.FLAGS_DISABLED);
!!!5831685.java!!!	setClickable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CLICKABLE)
                    | (state ? ViewNode.FLAGS_CLICKABLE : 0);
!!!5831813.java!!!	setLongClickable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_LONG_CLICKABLE)
                    | (state ? ViewNode.FLAGS_LONG_CLICKABLE : 0);
!!!5831941.java!!!	setContextClickable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CONTEXT_CLICKABLE)
                    | (state ? ViewNode.FLAGS_CONTEXT_CLICKABLE : 0);
!!!5832069.java!!!	setFocusable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_FOCUSABLE)
                    | (state ? ViewNode.FLAGS_FOCUSABLE : 0);
!!!5832197.java!!!	setFocused(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_FOCUSED)
                    | (state ? ViewNode.FLAGS_FOCUSED : 0);
!!!5832325.java!!!	setAccessibilityFocused(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_ACCESSIBILITY_FOCUSED)
                    | (state ? ViewNode.FLAGS_ACCESSIBILITY_FOCUSED : 0);
!!!5832453.java!!!	setCheckable(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CHECKABLE)
                    | (state ? ViewNode.FLAGS_CHECKABLE : 0);
!!!5832581.java!!!	setChecked(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_CHECKED)
                    | (state ? ViewNode.FLAGS_CHECKED : 0);
!!!5832709.java!!!	setSelected(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_SELECTED)
                    | (state ? ViewNode.FLAGS_SELECTED : 0);
!!!5832837.java!!!	setActivated(inout state : boolean) : void
            mNode.mFlags = (mNode.mFlags&~ViewNode.FLAGS_ACTIVATED)
                    | (state ? ViewNode.FLAGS_ACTIVATED : 0);
!!!5832965.java!!!	setOpaque(inout opaque : boolean) : void
            mNode.mFlags = (mNode.mFlags & ~ViewNode.FLAGS_OPAQUE)
                    | (opaque ? ViewNode.FLAGS_OPAQUE : 0);
!!!5833093.java!!!	setClassName(in className : String) : void
            mNode.mClassName = className;
!!!5833221.java!!!	setContentDescription(inout contentDescription : CharSequence) : void
            mNode.mContentDescription = contentDescription;
!!!5833349.java!!!	getNodeText() : AssistStructure::ViewNodeText
            if (mNode.mText != null) {
                return mNode.mText;
            }
            mNode.mText = new ViewNodeText();
            return mNode.mText;
!!!5833477.java!!!	setText(inout text : CharSequence) : void
            ViewNodeText t = getNodeText();
            t.mText = TextUtils.trimNoCopySpans(text);
            t.mTextSelectionStart = t.mTextSelectionEnd = -1;
!!!5833605.java!!!	setText(inout text : CharSequence, in selectionStart : int, in selectionEnd : int) : void
            ViewNodeText t = getNodeText();
            t.mText = TextUtils.trimNoCopySpans(text);
            t.mTextSelectionStart = selectionStart;
            t.mTextSelectionEnd = selectionEnd;
!!!5833733.java!!!	setTextStyle(in size : float, in fgColor : int, in bgColor : int, in style : int) : void
            ViewNodeText t = getNodeText();
            t.mTextColor = fgColor;
            t.mTextBackgroundColor = bgColor;
            t.mTextSize = size;
            t.mTextStyle = style;
!!!5833861.java!!!	setTextLines(inout charOffsets : int [[]], inout baselines : int [[]]) : void
            ViewNodeText t = getNodeText();
            t.mLineCharOffsets = charOffsets;
            t.mLineBaselines = baselines;
!!!5833989.java!!!	setHint(inout hint : CharSequence) : void
            getNodeText().mHint = hint != null ? hint.toString() : null;
!!!5834117.java!!!	getText() : CharSequence
            return mNode.mText != null ? mNode.mText.mText : null;
!!!5834245.java!!!	getTextSelectionStart() : int
            return mNode.mText != null ? mNode.mText.mTextSelectionStart : -1;
!!!5834373.java!!!	getTextSelectionEnd() : int
            return mNode.mText != null ? mNode.mText.mTextSelectionEnd : -1;
!!!5834501.java!!!	getHint() : CharSequence
            return mNode.mText != null ? mNode.mText.mHint : null;
!!!5834629.java!!!	getExtras() : Bundle
            if (mNode.mExtras != null) {
                return mNode.mExtras;
            }
            mNode.mExtras = new Bundle();
            return mNode.mExtras;
!!!5834757.java!!!	hasExtras() : boolean
            return mNode.mExtras != null;
!!!5834885.java!!!	setChildCount(in num : int) : void
            mNode.mChildren = new ViewNode[num];
!!!5835013.java!!!	addChildCount(in num : int) : int
            if (mNode.mChildren == null) {
                setChildCount(num);
                return 0;
            }
            final int start = mNode.mChildren.length;
            ViewNode[] newArray = new ViewNode[start + num];
            System.arraycopy(mNode.mChildren, 0, newArray, 0, start);
            mNode.mChildren = newArray;
            return start;
!!!5835141.java!!!	getChildCount() : int
            return mNode.mChildren != null ? mNode.mChildren.length : 0;
!!!5835269.java!!!	newChild(in index : int) : ViewStructure
            ViewNode node = new ViewNode();
            mNode.mChildren[index] = node;
            return new ViewNodeBuilder(mAssist, node, false);
!!!5835397.java!!!	asyncNewChild(in index : int) : ViewStructure
            synchronized (mAssist) {
                ViewNode node = new ViewNode();
                mNode.mChildren[index] = node;
                ViewNodeBuilder builder = new ViewNodeBuilder(mAssist, node, true);
                mAssist.mPendingAsyncChildren.add(builder);
                return builder;
            }
!!!5835525.java!!!	asyncCommit() : void
            synchronized (mAssist) {
                if (!mAsync) {
                    throw new IllegalStateException("Child " + this
                            + " was not created with ViewStructure.asyncNewChild");
                }
                if (!mAssist.mPendingAsyncChildren.remove(this)) {
                    throw new IllegalStateException("Child " + this + " already committed");
                }
                mAssist.notifyAll();
            }
!!!5835653.java!!!	getTempRect() : Rect
            return mAssist.mTmpRect;
!!!5835781.java!!!	setAutofillId(inout id : AutofillId) : void
            mNode.mAutofillId = id;
!!!5835909.java!!!	setAutofillId(inout parentId : AutofillId, in virtualId : int) : void
            mNode.mAutofillId = new AutofillId(parentId, virtualId);
!!!5836037.java!!!	getAutofillId() : AutofillId
            return mNode.mAutofillId;
!!!5836165.java!!!	setAutofillType(in type : int) : void
            mNode.mAutofillType = type;
!!!5836293.java!!!	setAutofillHints(inout hints : String [[]]) : void
            mNode.mAutofillHints = hints;
!!!5836421.java!!!	setAutofillValue(inout value : AutofillValue) : void
            mNode.mAutofillValue = value;
!!!5836549.java!!!	setAutofillOptions(inout options : CharSequence [[]]) : void
            mNode.mAutofillOptions = options;
!!!5836677.java!!!	setInputType(in inputType : int) : void
            mNode.mInputType = inputType;
!!!5836805.java!!!	setDataIsSensitive(inout sensitive : boolean) : void
            mNode.mSanitized = !sensitive;
!!!5836933.java!!!	setWebDomain(in domain : String) : void
            if (domain == null) {
                mNode.mWebDomain = null;
                return;
            }
            mNode.mWebDomain = Uri.parse(domain).getHost();
!!!5837061.java!!!	setLocaleList(inout localeList : LocaleList) : void
            mNode.mLocaleList = localeList;
!!!5837189.java!!!	newHtmlInfoBuilder(in tagName : String) : ViewStructure::HtmlInfo::Builder
            return new HtmlInfoNodeBuilder(tagName);
!!!5837317.java!!!	setHtmlInfo(inout htmlInfo : ViewStructure::HtmlInfo) : void
            mNode.mHtmlInfo = htmlInfo;
