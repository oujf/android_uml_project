class PinItemRequestInner
!!!12267781.java!!!	PinItemRequestInner(inout processor : ShortcutRequestPinProcessor, inout resultIntent : IntentSender, in launcherUid : int)
            mProcessor = processor;
            mResultIntent = resultIntent;
            mLauncherUid = launcherUid;
!!!12267909.java!!!	getShortcutInfo() : ShortcutInfo
            return null;
!!!12268037.java!!!	getAppWidgetProviderInfo() : AppWidgetProviderInfo
            return null;
!!!12268165.java!!!	getExtras() : Bundle
            return null;
!!!12268293.java!!!	isCallerValid() : boolean
            return mProcessor.isCallerUid(mLauncherUid);
!!!12268421.java!!!	isValid() : boolean
            if (!isCallerValid()) {
                return false;
            }
            // TODO When an app calls requestPinShortcut(), all pending requests should be
            // invalidated.
            synchronized (this) {
                return !mAccepted;
            }
!!!12268549.java!!!	accept(inout options : Bundle) : boolean
            // Make sure the options are unparcellable by the FW. (e.g. not containing unknown
            // classes.)
            if (!isCallerValid()) {
                throw new SecurityException("Calling uid mismatch");
            }
            Intent extras = null;
            if (options != null) {
                try {
                    options.size();
                    extras = new Intent().putExtras(options);
                } catch (RuntimeException e) {
                    throw new IllegalArgumentException("options cannot be unparceled", e);
                }
            }
            synchronized (this) {
                if (mAccepted) {
                    throw new IllegalStateException("accept() called already");
                }
                mAccepted = true;
            }

            // Pin it and send the result intent.
            if (tryAccept()) {
                mProcessor.sendResultIntent(mResultIntent, extras);
                return true;
            } else {
                return false;
            }
!!!12268677.java!!!	tryAccept() : boolean
            return true;
