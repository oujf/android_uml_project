class DeathRecipientList
!!!14175749.cpp!!!	DeathRecipientList()
    LOGDEATH("New DRL @ %p", this);
!!!14175877.cpp!!!	~DeathRecipientList()
    LOGDEATH("Destroy DRL @ %p", this);
    AutoMutex _l(mLock);

    // Should never happen -- the JavaDeathRecipient objects that have added themselves
    // to the list are holding references on the list object.  Only when they are torn
    // down can the list header be destroyed.
    if (mList.size() > 0) {
        List< sp<JavaDeathRecipient> >::iterator iter;
        for (iter = mList.begin(); iter != mList.end(); iter++) {
            (*iter)->warnIfStillLive();
        }
    }
!!!14176005.cpp!!!	add(in recipient : sp<JavaDeathRecipient>) : void
    AutoMutex _l(mLock);

    LOGDEATH("DRL @ %p : add JDR %p", this, recipient.get());
    mList.push_back(recipient);
!!!14176133.cpp!!!	remove(in recipient : sp<JavaDeathRecipient>) : void
    AutoMutex _l(mLock);

    List< sp<JavaDeathRecipient> >::iterator iter;
    for (iter = mList.begin(); iter != mList.end(); iter++) {
        if (*iter == recipient) {
            LOGDEATH("DRL @ %p : remove JDR %p", this, recipient.get());
            mList.erase(iter);
            return;
        }
    }
!!!14176261.cpp!!!	find(in recipient : jobject) : sp<JavaDeathRecipient>
    AutoMutex _l(mLock);

    List< sp<JavaDeathRecipient> >::iterator iter;
    for (iter = mList.begin(); iter != mList.end(); iter++) {
        if ((*iter)->matches(recipient)) {
            return *iter;
        }
    }
    return NULL;
!!!14176389.cpp!!!	lock() : Mutex
    return mLock;
