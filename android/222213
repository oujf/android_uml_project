format 214
"hardware" // source::frameworks::base::core::java::android::hardware
  revision 2
  modified_by 5 "Jeff"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  java_dir "C:\\Users\\Jeff\\Documents\\aosp\\frameworks\\base\\core\\java/android/hardware/"
  java_package "android.hardware"
  package_ref 222341 // display

  classview 213253 "hardware"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 1176325 "Camera"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "The Camera class is used to set image capture settings, start/stop preview,
snap pictures, and retrieve frames for encoding for video.  This class is a
client for the Camera service, which manages the actual camera hardware.

<p>To access the device camera, you must declare the
{@link android.Manifest.permission#CAMERA} permission in your Android
Manifest. Also be sure to include the
<a href=\"{@docRoot}guide/topics/manifest/uses-feature-element.html\">&lt;uses-feature></a>
manifest element to declare camera features used by your application.
For example, if you use the camera and auto-focus feature, your Manifest
should include the following:</p>
<pre> &lt;uses-permission android:name=\"android.permission.CAMERA\" />
&lt;uses-feature android:name=\"android.hardware.camera\" />
&lt;uses-feature android:name=\"android.hardware.camera.autofocus\" /></pre>

<p>To take pictures with this class, use the following steps:</p>

<ol>
<li>Obtain an instance of Camera from {@link #open(int)}.

<li>Get existing (default) settings with {@link #getParameters()}.

<li>If necessary, modify the returned {@link Camera.Parameters} object and call
{@link #setParameters(Camera.Parameters)}.

<li>Call {@link #setDisplayOrientation(int)} to ensure correct orientation of preview.

<li><b>Important</b>: Pass a fully initialized {@link SurfaceHolder} to
{@link #setPreviewDisplay(SurfaceHolder)}.  Without a surface, the camera
will be unable to start the preview.

<li><b>Important</b>: Call {@link #startPreview()} to start updating the
preview surface.  Preview must be started before you can take a picture.

<li>When you want, call {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback, Camera.PictureCallback)} to
capture a photo.  Wait for the callbacks to provide the actual image data.

<li>After taking a picture, preview display will have stopped.  To take more
photos, call {@link #startPreview()} again first.

<li>Call {@link #stopPreview()} to stop updating the preview surface.

<li><b>Important:</b> Call {@link #release()} to release the camera for
use by other applications.  Applications should release the camera
immediately in {@link android.app.Activity#onPause()} (and re-{@link #open()}
it in {@link android.app.Activity#onResume()}).
</ol>

<p>To quickly switch to video recording mode, use these steps:</p>

<ol>
<li>Obtain and initialize a Camera and start preview as described above.

<li>Call {@link #unlock()} to allow the media process to access the camera.

<li>Pass the camera to {@link android.media.MediaRecorder#setCamera(Camera)}.
See {@link android.media.MediaRecorder} information about video recording.

<li>When finished recording, call {@link #reconnect()} to re-acquire
and re-lock the camera.

<li>If desired, restart preview and take more photos or videos.

<li>Call {@link #stopPreview()} and {@link #release()} as described above.
</ol>

<p>This class is not thread-safe, and is meant for use from one event thread.
Most long-running operations (preview, focus, photo capture, etc) happen
asynchronously and invoke callbacks as necessary.  Callbacks will be invoked
on the event thread {@link #open(int)} was called from.  This class's methods
must never be called from multiple threads at once.</p>

<p class=\"caution\"><strong>Caution:</strong> Different Android-powered devices
may have different hardware specifications, such as megapixel ratings and
auto-focus capabilities. In order for your application to be compatible with
more devices, you should not make assumptions about the device camera
specifications.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using cameras, read the
<a href=\"{@docRoot}guide/topics/media/camera.html\">Camera</a> developer guide.</p>
</div>

@deprecated We recommend using the new {@link android.hardware.camera2} API for new
            applications.
"
      attribute 4237189 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Camera\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4237317 "CAMERA_MSG_ERROR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " These match the enums in frameworks/base/include/camera/Camera.h
"
      end

      attribute 4237445 "CAMERA_MSG_SHUTTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4237573 "CAMERA_MSG_FOCUS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4237701 "CAMERA_MSG_ZOOM"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x008"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4237829 "CAMERA_MSG_PREVIEW_FRAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x010"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4237957 "CAMERA_MSG_VIDEO_FRAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x020"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238085 "CAMERA_MSG_POSTVIEW_FRAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x040"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238213 "CAMERA_MSG_RAW_IMAGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x080"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238341 "CAMERA_MSG_COMPRESSED_IMAGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238469 "CAMERA_MSG_RAW_IMAGE_NOTIFY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x200"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238597 "CAMERA_MSG_PREVIEW_METADATA"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x400"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238725 "CAMERA_MSG_FOCUS_MOVE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x800"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4238853 "mNativeContext"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " accessed by native methods"
      end

      class 1176453 "EventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1762181 // <generalisation>
	  relation 1762181 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 1762181 // <generalisation>
	    b parent class_ref 956421 // Handler
	end

	classrelation 1762309 // mCamera (<unidirectional association>)
	  relation 1762309 --->
	    a role_name "mCamera" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1762309 // mCamera (<unidirectional association>)
	    b parent class_ref 1176325 // Camera
	end

	operation 6580357 "EventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 1176325 // Camera
	    param inout name "looper" type class_ref 958213 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6580485 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 965893 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      classrelation 1760773 // mEventHandler (<unidirectional association>)
	relation 1760773 --->
	  a role_name "mEventHandler" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1760773 // mEventHandler (<unidirectional association>)
	  b parent class_ref 1176453 // EventHandler
      end

      class 1176581 "ShutterCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6581765 "onShutter"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called as near as possible to the moment when a photo is captured
from the sensor.  This is a good opportunity to play a shutter sound
or give other feedback of camera operation.  This may be some time
after the photo was triggered, but some time before the actual data
is available.
"
	end
      end

      classrelation 1760901 // mShutterCallback (<unidirectional association>)
	relation 1760901 --->
	  a role_name "mShutterCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1760901 // mShutterCallback (<unidirectional association>)
	  b parent class_ref 1176581 // ShutterCallback
      end

      class 1176709 "PictureCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6581893 "onPictureTaken"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "data" explicit_type "byte"
	  multiplicity "[]"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called when image data is available after a picture is taken.
The format of the data depends on the context of the callback
and {@link Camera.Parameters} settings.

@param data   a byte array of the picture data
@param camera the Camera service object
"
	end
      end

      classrelation 1761029 // mRawImageCallback (<unidirectional association>)
	relation 1761029 --->
	  a role_name "mRawImageCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761029 // mRawImageCallback (<unidirectional association>)
	  b parent class_ref 1176709 // PictureCallback
      end

      classrelation 1761157 // mJpegCallback (<unidirectional association>)
	relation 1761157 --->
	  a role_name "mJpegCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761157 // mJpegCallback (<unidirectional association>)
	  b parent class_ref 1176709 // PictureCallback
      end

      class 1176837 "PreviewCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6578309 "onPreviewFrame"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "data" explicit_type "byte"
	  multiplicity "[]"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called as preview frames are displayed.  This callback is invoked
on the event thread {@link #open(int)} was called from.

<p>If using the {@link android.graphics.ImageFormat#YV12} format,
refer to the equations in {@link Camera.Parameters#setPreviewFormat}
for the arrangement of the pixel data in the preview callback
buffers.

@param data the contents of the preview frame in the format defined
 by {@link android.graphics.ImageFormat}, which can be queried
 with {@link android.hardware.Camera.Parameters#getPreviewFormat()}.
 If {@link android.hardware.Camera.Parameters#setPreviewFormat(int)}
            is never called, the default will be the YCbCr_420_SP
            (NV21) format.
@param camera the Camera service object.
"
	end
      end

      classrelation 1761285 // mPreviewCallback (<unidirectional association>)
	relation 1761285 --->
	  a role_name "mPreviewCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761285 // mPreviewCallback (<unidirectional association>)
	  b parent class_ref 1176837 // PreviewCallback
      end

      attribute 4238981 "mUsingPreviewAllocation"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1761413 // mPostviewCallback (<unidirectional association>)
	relation 1761413 --->
	  a role_name "mPostviewCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761413 // mPostviewCallback (<unidirectional association>)
	  b parent class_ref 1176709 // PictureCallback
      end

      class 1176965 "AutoFocusCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6580741 "onAutoFocus"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "success" explicit_type "boolean"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called when the camera auto focus completes.  If the camera
does not support auto-focus and autoFocus is called,
onAutoFocus will be called immediately with a fake value of
<code>success</code> set to <code>true</code>.

The auto-focus routine does not lock auto-exposure and auto-white
balance after it completes.

@param success true if focus was successful, false if otherwise
@param camera  the Camera service object
@see android.hardware.Camera.Parameters#setAutoExposureLock(boolean)
@see android.hardware.Camera.Parameters#setAutoWhiteBalanceLock(boolean)
"
	end
      end

      classrelation 1761541 // mAutoFocusCallback (<unidirectional association>)
	relation 1761541 --->
	  a role_name "mAutoFocusCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761541 // mAutoFocusCallback (<unidirectional association>)
	  b parent class_ref 1176965 // AutoFocusCallback
      end

      class 1177093 "AutoFocusMoveCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6581381 "onAutoFocusMoving"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "start" explicit_type "boolean"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called when the camera auto focus starts or stops.

@param start true if focus starts to move, false if focus stops to move
@param camera the Camera service object
"
	end
      end

      classrelation 1761669 // mAutoFocusMoveCallback (<unidirectional association>)
	relation 1761669 --->
	  a role_name "mAutoFocusMoveCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761669 // mAutoFocusMoveCallback (<unidirectional association>)
	  b parent class_ref 1177093 // AutoFocusMoveCallback
      end

      class 1177221 "OnZoomChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6583173 "onZoomChange"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "zoomValue" explicit_type "int"
	    param inout name "stopped" explicit_type "boolean"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called when the zoom value has changed during a smooth zoom.

@param zoomValue the current zoom value. In smooth zoom mode, camera
                 calls this for every new zoom value.
@param stopped whether smooth zoom is stopped. If the value is true,
               this is the last zoom update for the application.
@param camera  the Camera service object
"
	end
      end

      classrelation 1761797 // mZoomListener (<unidirectional association>)
	relation 1761797 --->
	  a role_name "mZoomListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761797 // mZoomListener (<unidirectional association>)
	  b parent class_ref 1177221 // OnZoomChangeListener
      end

      class 1177349 "FaceDetectionListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6583429 "onFaceDetection"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "faces" type class_ref 1177733 // Face
	  multiplicity "[]"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Notify the listener of the detected faces in the preview frame.

@param faces The detected faces in a list
@param camera  The {@link Camera} service object
"
	end
      end

      classrelation 1761925 // mFaceListener (<unidirectional association>)
	relation 1761925 --->
	  a role_name "mFaceListener" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1761925 // mFaceListener (<unidirectional association>)
	  b parent class_ref 1177349 // FaceDetectionListener
      end

      class 1177477 "ErrorCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6584325 "onError"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "error" explicit_type "int"
	    param inout name "camera" type class_ref 1176325 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Callback for camera errors.
@param error   error code:
<ul>
<li>{@link #CAMERA_ERROR_UNKNOWN}
<li>{@link #CAMERA_ERROR_SERVER_DIED}
</ul>
@param camera  the Camera service object
"
	end
      end

      classrelation 1762053 // mErrorCallback (<unidirectional association>)
	relation 1762053 --->
	  a role_name "mErrorCallback" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1762053 // mErrorCallback (<unidirectional association>)
	  b parent class_ref 1177477 // ErrorCallback
      end

      attribute 4239109 "mOneShot"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4239237 "mWithBuffer"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4239365 "mFaceDetectionRunning"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4239493 "mAutoFocusCallbackLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4239621 "NO_ERROR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4239749 "ACTION_NEW_PICTURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.hardware.action.NEW_PICTURE\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Broadcast Action:  A new picture is taken by the camera, and the entry of
the picture has been added to the media store.
{@link android.content.Intent#getData} is URI of the picture.

<p>In {@link android.os.Build.VERSION_CODES#N Android N} this broadcast was removed, and
applications are recommended to use
{@link android.app.job.JobInfo.Builder JobInfo.Builder}.{@link android.app.job.JobInfo.Builder#addTriggerContentUri}
instead.</p>

<p>In {@link android.os.Build.VERSION_CODES#O Android O} this broadcast has been brought
back, but only for <em>registered</em> receivers.  Apps that are actively running can
again listen to the broadcast if they want an immediate clear signal about a picture
being taken, however anything doing heavy work (or needing to be launched) as a result of
this should still use JobScheduler.</p>

"
      end

      attribute 4239877 "ACTION_NEW_VIDEO"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.hardware.action.NEW_VIDEO\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Broadcast Action:  A new video is recorded by the camera, and the entry
of the video has been added to the media store.
{@link android.content.Intent#getData} is URI of the video.

<p>In {@link android.os.Build.VERSION_CODES#N Android N} this broadcast was removed, and
applications are recommended to use
{@link android.app.job.JobInfo.Builder JobInfo.Builder}.{@link android.app.job.JobInfo.Builder#addTriggerContentUri}
instead.</p>

<p>In {@link android.os.Build.VERSION_CODES#O Android O} this broadcast has been brought
back, but only for <em>registered</em> receivers.  Apps that are actively running can
again listen to the broadcast if they want an immediate clear signal about a video
being taken, however anything doing heavy work (or needing to be launched) as a result of
this should still use JobScheduler.</p>

"
      end

      attribute 4240005 "CAMERA_HAL_API_VERSION_1_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Camera HAL device API version 1.0
@hide

"
      end

      attribute 4240133 "CAMERA_HAL_API_VERSION_NORMAL_CONNECT"
	class_attribute const_attribute private explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant meaning the normal camera connect/open will be used.

"
      end

      attribute 4240261 "CAMERA_HAL_API_VERSION_UNSPECIFIED"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Used to indicate HAL version un-specified.

"
      end

      attribute 4240389 "CAMERA_FACE_DETECTION_HW"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Hardware face detection. It does not use much CPU.

"
      end

      attribute 4240517 "CAMERA_FACE_DETECTION_SW"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Software face detection. It uses some CPU.

"
      end

      operation 6575237 "getNumberOfCameras"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the number of physical cameras available on this device.
"
      end

      operation 6575365 "getCameraInfo"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "cameraInfo" type class_ref 1177605 // CameraInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the information about a particular camera.
If {@link #getNumberOfCameras()} returns N, the valid id is 0 to N-1.
"
      end

      class 1177605 "CameraInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4240645 "CAMERA_FACING_BACK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The facing of the camera is opposite to that of the screen.

"
	end

	attribute 4240773 "CAMERA_FACING_FRONT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The facing of the camera is the same as that of the screen.

"
	end

	attribute 4240901 "facing"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The direction that the camera faces. It should be
CAMERA_FACING_BACK or CAMERA_FACING_FRONT.

"
	end

	attribute 4241029 "orientation"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "<p>The orientation of the camera image. The value is the angle that the
camera image needs to be rotated clockwise so it shows correctly on
the display in its natural orientation. It should be 0, 90, 180, or 270.</p>

<p>For example, suppose a device has a naturally tall screen. The
back-facing camera sensor is mounted in landscape. You are looking at
the screen. If the top side of the camera sensor is aligned with the
right edge of the screen in natural orientation, the value should be
90. If the top side of a front-facing camera sensor is aligned with
the right of the screen, the value should be 270.</p>

@see #setDisplayOrientation(int)
@see Parameters#setRotation(int)
@see Parameters#setPreviewSize(int, int)
@see Parameters#setPictureSize(int, int)
@see Parameters#setJpegThumbnailSize(int, int)

"
	end

	attribute 4241157 "canDisableShutterSound"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "<p>Whether the shutter sound can be disabled.</p>

<p>On some devices, the camera shutter sound cannot be turned off
through {@link #enableShutterSound enableShutterSound}. This field
can be used to determine whether a call to disable the shutter sound
will succeed.</p>

<p>If this field is set to true, then a call of
{@code enableShutterSound(false)} will be successful. If set to
false, then that call will fail, and the shutter sound will be played
when {@link Camera#takePicture takePicture} is called.</p>

"
	end
      end

      operation 6575493 "_getCameraInfo"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "cameraInfo" type class_ref 1177605 // CameraInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6575621 "open"
	class_operation public return_type class_ref 1176325 // Camera
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a new Camera object to access a particular hardware camera. If
the same camera is opened by other applications, this will throw a
RuntimeException.

<p>You must call {@link #release()} when you are done using the camera,
otherwise it will remain locked and be unavailable to other applications.

<p>Your application should only have one Camera object active at a time
for a particular hardware camera.

<p>Callbacks from other methods are delivered to the event loop of the
thread which called open().  If this thread has no event loop, then
callbacks are delivered to the main application event loop.  If there
is no main application event loop, callbacks are not delivered.

<p class=\"caution\"><b>Caution:</b> On some devices, this method may
take a long time to complete.  It is best to call this method from a
worker thread (possibly using {@link android.os.AsyncTask}) to avoid
blocking the main application UI thread.

@param cameraId the hardware camera to access, between 0 and
    {@link #getNumberOfCameras()}-1.
@return a new Camera object, connected, locked and ready for use.
@throws RuntimeException if opening the camera fails (for example, if the
    camera is in use by another process or device policy manager has
    disabled the camera).
@see android.app.admin.DevicePolicyManager#getCameraDisabled(android.content.ComponentName)
"
      end

      operation 6575749 "open"
	class_operation public return_type class_ref 1176325 // Camera
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a new Camera object to access the first back-facing camera on the
device. If the device does not have a back-facing camera, this returns
null.
@see #open(int)
"
      end

      operation 6575877 "openLegacy"
	class_operation public return_type class_ref 1176325 // Camera
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param in name "halVersion" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a new Camera object to access a particular hardware camera with
given hal API version. If the same camera is opened by other applications
or the hal API version is not supported by this device, this will throw a
RuntimeException.
<p>
You must call {@link #release()} when you are done using the camera,
otherwise it will remain locked and be unavailable to other applications.
<p>
Your application should only have one Camera object active at a time for
a particular hardware camera.
<p>
Callbacks from other methods are delivered to the event loop of the
thread which called open(). If this thread has no event loop, then
callbacks are delivered to the main application event loop. If there is
no main application event loop, callbacks are not delivered.
<p class=\"caution\">
<b>Caution:</b> On some devices, this method may take a long time to
complete. It is best to call this method from a worker thread (possibly
using {@link android.os.AsyncTask}) to avoid blocking the main
application UI thread.

@param cameraId The hardware camera to access, between 0 and
{@link #getNumberOfCameras()}-1.
@param halVersion The HAL API version this camera device to be opened as.
@return a new Camera object, connected, locked and ready for use.

@throws IllegalArgumentException if the {@code halVersion} is invalid

@throws RuntimeException if opening the camera fails (for example, if the
camera is in use by another process or device policy manager has disabled
the camera).

@see android.app.admin.DevicePolicyManager#getCameraDisabled(android.content.ComponentName)
@see #CAMERA_HAL_API_VERSION_1_0

@hide
"
      end

      operation 6576005 "Camera"
	private explicit_return_type ""
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param in name "halVersion" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Create a legacy camera object.

@param cameraId The hardware camera to access, between 0 and
{@link #getNumberOfCameras()}-1.
@param halVersion The HAL API version this camera device to be opened as.
"
      end

      operation 6576133 "cameraInitVersion"
	private explicit_return_type "int"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param in name "halVersion" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6576261 "cameraInitNormal"
	private explicit_return_type "int"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6576389 "cameraInitUnspecified"
	public explicit_return_type "int"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Connect to the camera service using #connectLegacy

<p>
This acts the same as normal except that it will return
the detailed error code if open fails instead of
converting everything into {@code NO_INIT}.</p>

<p>Intended to use by the camera2 shim only, do <i>not</i> use this for other code.</p>

@return a detailed errno error code, or {@code NO_ERROR} on success

@hide
"
      end

      operation 6576517 "Camera"
	package explicit_return_type ""
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment " used by Camera#open, Camera#open(int) "
      end

      operation 6576645 "checkInitErrors"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "err" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6576773 "openUninitialized"
	class_operation public return_type class_ref 1176325 // Camera
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6576901 "Camera"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "An empty Camera for testing purpose.
"
      end

      operation 6577029 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6577157 "native_setup"
	private explicit_return_type "int"
	nparams 4
	  param inout name "camera_this" explicit_type "Object"
	  param in name "cameraId" explicit_type "int"
	  param in name "halVersion" explicit_type "int"
	  param in name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6577285 "native_release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6577413 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Disconnects and releases the Camera object resources.

<p>You must call this as soon as you're done with the Camera object.</p>
"
      end

      operation 6577541 "unlock"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Unlocks the camera to allow another process to access it.
Normally, the camera is locked to the process with an active Camera
object until {@link #release()} is called.  To allow rapid handoff
between processes, you can call this method to release the camera
temporarily for another process to use; once the other process is done
you can call {@link #reconnect()} to reclaim the camera.

<p>This must be done before calling
{@link android.media.MediaRecorder#setCamera(Camera)}. This cannot be
called after recording starts.

<p>If you are not recording video, you probably do not need this method.

@throws RuntimeException if the camera cannot be unlocked.
"
      end

      operation 6577669 "lock"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Re-locks the camera to prevent other processes from accessing it.
Camera objects are locked by default unless {@link #unlock()} is
called.  Normally {@link #reconnect()} is used instead.

<p>Since API level 14, camera is automatically locked for applications in
{@link android.media.MediaRecorder#start()}. Applications can use the
camera (ex: zoom) after recording starts. There is no need to call this
after recording starts or stops.

<p>If you are not recording video, you probably do not need this method.

@throws RuntimeException if the camera cannot be re-locked (for
    example, if the camera is still in use by another process).
"
      end

      operation 6577797 "reconnect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Reconnects to the camera service after another process used it.
After {@link #unlock()} is called, another process may use the
camera; when the process is done, you must reconnect to the camera,
which will re-acquire the lock and allow you to continue using the
camera.

<p>Since API level 14, camera is automatically locked for applications in
{@link android.media.MediaRecorder#start()}. Applications can use the
camera (ex: zoom) after recording starts. There is no need to call this
after recording starts or stops.

<p>If you are not recording video, you probably do not need this method.

@throws IOException if a connection cannot be re-established (for
    example, if the camera is still in use by another process).
"
      end

      operation 6577925 "setPreviewDisplay"
	public explicit_return_type "void"
	nparams 1
	  param inout name "holder" type class_ref 989701 // SurfaceHolder
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the {@link Surface} to be used for live preview.
Either a surface or surface texture is necessary for preview, and
preview is necessary to take pictures.  The same surface can be re-set
without harm.  Setting a preview surface will un-set any preview surface
texture that was set via {@link #setPreviewTexture}.

<p>The {@link SurfaceHolder} must already contain a surface when this
method is called.  If you are using {@link android.view.SurfaceView},
you will need to register a {@link SurfaceHolder.Callback} with
{@link SurfaceHolder#addCallback(SurfaceHolder.Callback)} and wait for
{@link SurfaceHolder.Callback#surfaceCreated(SurfaceHolder)} before
calling setPreviewDisplay() or starting preview.

<p>This method must be called before {@link #startPreview()}.  The
one exception is that if the preview surface is not set (or set to null)
before startPreview() is called, then this method may be called once
with a non-null parameter to set the preview surface.  (This allows
camera setup and surface creation to happen in parallel, saving time.)
The preview surface may not otherwise change while preview is running.

@param holder containing the Surface on which to place the preview,
    or null to remove the preview surface
@throws IOException if the method fails (for example, if the surface
    is unavailable or unsuitable).
"
      end

      operation 6578053 "setPreviewSurface"
	public explicit_return_type "void"
	nparams 1
	  param inout name "surface" type class_ref 985605 // Surface
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6578181 "setPreviewTexture"
	public explicit_return_type "void"
	nparams 1
	  param inout name "surfaceTexture" explicit_type "SurfaceTexture"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the {@link SurfaceTexture} to be used for live preview.
Either a surface or surface texture is necessary for preview, and
preview is necessary to take pictures.  The same surface texture can be
re-set without harm.  Setting a preview surface texture will un-set any
preview surface that was set via {@link #setPreviewDisplay}.

<p>This method must be called before {@link #startPreview()}.  The
one exception is that if the preview surface texture is not set (or set
to null) before startPreview() is called, then this method may be called
once with a non-null parameter to set the preview surface.  (This allows
camera setup and surface creation to happen in parallel, saving time.)
The preview surface texture may not otherwise change while preview is
running.

<p>The timestamps provided by {@link SurfaceTexture#getTimestamp()} for a
SurfaceTexture set as the preview texture have an unspecified zero point,
and cannot be directly compared between different cameras or different
instances of the same camera, or across multiple runs of the same
program.

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@see android.media.MediaActionSound
@see android.graphics.SurfaceTexture
@see android.view.TextureView
@param surfaceTexture the {@link SurfaceTexture} to which the preview
    images are to be sent or null to remove the current preview surface
    texture
@throws IOException if the method fails (for example, if the surface
    texture is unavailable or unsuitable).
"
      end

      operation 6578437 "startPreview"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Starts capturing and drawing preview frames to the screen.
Preview will not actually start until a surface is supplied
with {@link #setPreviewDisplay(SurfaceHolder)} or
{@link #setPreviewTexture(SurfaceTexture)}.

<p>If {@link #setPreviewCallback(Camera.PreviewCallback)},
{@link #setOneShotPreviewCallback(Camera.PreviewCallback)}, or
{@link #setPreviewCallbackWithBuffer(Camera.PreviewCallback)} were
called, {@link Camera.PreviewCallback#onPreviewFrame(byte[], Camera)}
will be called when preview data becomes available.
"
      end

      operation 6578565 "stopPreview"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Stops capturing and drawing preview frames to the surface, and
resets the camera for a future call to {@link #startPreview()}.
"
      end

      operation 6578693 "_stopPreview"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6578821 "previewEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return current preview state.

FIXME: Unhide before release
@hide
"
      end

      operation 6578949 "setPreviewCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 1176837 // PreviewCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Installs a callback to be invoked for every preview frame in addition
to displaying them on the screen.  The callback will be repeatedly called
for as long as preview is active.  This method can be called at any time,
even while preview is live.  Any other preview callbacks are
overridden.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param cb a callback object that receives a copy of each preview frame,
    or null to stop receiving callbacks.
@see android.media.MediaActionSound
"
      end

      operation 6579077 "setOneShotPreviewCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 1176837 // PreviewCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Installs a callback to be invoked for the next preview frame in
addition to displaying it on the screen.  After one invocation, the
callback is cleared. This method can be called any time, even when
preview is live.  Any other preview callbacks are overridden.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param cb a callback object that receives a copy of the next preview frame,
    or null to stop receiving callbacks.
@see android.media.MediaActionSound
"
      end

      operation 6579205 "setHasPreviewCallback"
	private explicit_return_type "void"
	nparams 2
	  param inout name "installed" explicit_type "boolean"
	  param inout name "manualBuffer" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6579333 "setPreviewCallbackWithBuffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 1176837 // PreviewCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Installs a callback to be invoked for every preview frame, using
buffers supplied with {@link #addCallbackBuffer(byte[])}, in addition to
displaying them on the screen.  The callback will be repeatedly called
for as long as preview is active and buffers are available.  Any other
preview callbacks are overridden.</p>

<p>The purpose of this method is to improve preview efficiency and frame
rate by allowing preview frame memory reuse.  You must call
{@link #addCallbackBuffer(byte[])} at some point -- before or after
calling this method -- or no callbacks will received.</p>

<p>The buffer queue will be cleared if this method is called with a null
callback, {@link #setPreviewCallback(Camera.PreviewCallback)} is called,
or {@link #setOneShotPreviewCallback(Camera.PreviewCallback)} is
called.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param cb a callback object that receives a copy of the preview frame,
    or null to stop receiving callbacks and clear the buffer queue.
@see #addCallbackBuffer(byte[])
@see android.media.MediaActionSound
"
      end

      operation 6579461 "addCallbackBuffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callbackBuffer" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds a pre-allocated buffer to the preview callback buffer queue.
Applications can add one or more buffers to the queue. When a preview
frame arrives and there is still at least one available buffer, the
buffer will be used and removed from the queue. Then preview callback is
invoked with the buffer. If a frame arrives and there is no buffer left,
the frame is discarded. Applications should add buffers back when they
finish processing the data in them.

<p>For formats besides YV12, the size of the buffer is determined by
multiplying the preview image width, height, and bytes per pixel. The
width and height can be read from
{@link Camera.Parameters#getPreviewSize()}. Bytes per pixel can be
computed from {@link android.graphics.ImageFormat#getBitsPerPixel(int)} /
8, using the image format from
{@link Camera.Parameters#getPreviewFormat()}.

<p>If using the {@link android.graphics.ImageFormat#YV12} format, the
size can be calculated using the equations listed in
{@link Camera.Parameters#setPreviewFormat}.

<p>This method is only necessary when
{@link #setPreviewCallbackWithBuffer(PreviewCallback)} is used. When
{@link #setPreviewCallback(PreviewCallback)} or
{@link #setOneShotPreviewCallback(PreviewCallback)} are used, buffers
are automatically allocated. When a supplied buffer is too small to
hold the preview frame data, preview callback will return null and
the buffer will be removed from the buffer queue.

@param callbackBuffer the buffer to add to the queue. The size of the
  buffer must match the values described above.
@see #setPreviewCallbackWithBuffer(PreviewCallback)
"
      end

      operation 6579589 "addRawImageCallbackBuffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callbackBuffer" explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Adds a pre-allocated buffer to the raw image callback buffer queue.
Applications can add one or more buffers to the queue. When a raw image
frame arrives and there is still at least one available buffer, the
buffer will be used to hold the raw image data and removed from the
queue. Then raw image callback is invoked with the buffer. If a raw
image frame arrives but there is no buffer left, the frame is
discarded. Applications should add buffers back when they finish
processing the data in them by calling this method again in order
to avoid running out of raw image callback buffers.

<p>The size of the buffer is determined by multiplying the raw image
width, height, and bytes per pixel. The width and height can be
read from {@link Camera.Parameters#getPictureSize()}. Bytes per pixel
can be computed from
{@link android.graphics.ImageFormat#getBitsPerPixel(int)} / 8,
using the image format from {@link Camera.Parameters#getPreviewFormat()}.

<p>This method is only necessary when the PictureCallbck for raw image
is used while calling {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback, Camera.PictureCallback)}.

<p>Please note that by calling this method, the mode for
application-managed callback buffers is triggered. If this method has
never been called, null will be returned by the raw image callback since
there is no image callback buffer available. Furthermore, When a supplied
buffer is too small to hold the raw image data, raw image callback will
return null and the buffer will be removed from the buffer queue.

@param callbackBuffer the buffer to add to the raw image callback buffer
    queue. The size should be width * height * (bits per pixel) / 8. An
    null callbackBuffer will be ignored and won't be added to the queue.

@see #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback, Camera.PictureCallback)}.

{@hide}
"
      end

      operation 6579717 "addCallbackBuffer"
	private explicit_return_type "void"
	nparams 2
	  param inout name "callbackBuffer" explicit_type "byte"
	multiplicity "[]"
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6579845 "_addCallbackBuffer"
	private explicit_return_type "void"
	nparams 2
	  param inout name "callbackBuffer" explicit_type "byte"
	multiplicity "[]"
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6579973 "createPreviewAllocation"
	public explicit_return_type "Allocation"
	nparams 2
	  param inout name "rs" explicit_type "RenderScript"
	  param in name "usage" explicit_type "int"
	nexceptions 1
	  explicit_exception "RSIllegalArgumentException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Create a {@link android.renderscript RenderScript}
{@link android.renderscript.Allocation Allocation} to use as a
destination of preview callback frames. Use
{@link #setPreviewCallbackAllocation setPreviewCallbackAllocation} to use
the created Allocation as a destination for camera preview frames.</p>

<p>The Allocation will be created with a YUV type, and its contents must
be accessed within Renderscript with the {@code rsGetElementAtYuv_*}
accessor methods. Its size will be based on the current
{@link Parameters#getPreviewSize preview size} configured for this
camera.</p>

@param rs the RenderScript context for this Allocation.
@param usage additional usage flags to set for the Allocation. The usage
  flag {@link android.renderscript.Allocation#USAGE_IO_INPUT} will always
  be set on the created Allocation, but additional flags may be provided
  here.
@return a new YUV-type Allocation with dimensions equal to the current
  preview size.
@throws RSIllegalArgumentException if the usage flags are not compatible
  with an YUV Allocation.
@see #setPreviewCallbackAllocation
@hide
"
      end

      operation 6580101 "setPreviewCallbackAllocation"
	public explicit_return_type "void"
	nparams 1
	  param inout name "previewAllocation" explicit_type "Allocation"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Set an {@link android.renderscript.Allocation Allocation} as the
target of preview callback data. Use this method for efficient processing
of camera preview data with RenderScript. The Allocation must be created
with the {@link #createPreviewAllocation createPreviewAllocation }
method.</p>

<p>Setting a preview allocation will disable any active preview callbacks
set by {@link #setPreviewCallback setPreviewCallback} or
{@link #setPreviewCallbackWithBuffer setPreviewCallbackWithBuffer}, and
vice versa. Using a preview allocation still requires an active standard
preview target to be set, either with
{@link #setPreviewTexture setPreviewTexture} or
{@link #setPreviewDisplay setPreviewDisplay}.</p>

<p>To be notified when new frames are available to the Allocation, use
{@link android.renderscript.Allocation#setIoInputNotificationHandler Allocation.setIoInputNotificationHandler}. To
update the frame currently accessible from the Allocation to the latest
preview frame, call
{@link android.renderscript.Allocation#ioReceive Allocation.ioReceive}.</p>

<p>To disable preview into the Allocation, call this method with a
{@code null} parameter.</p>

<p>Once a preview allocation is set, the preview size set by
{@link Parameters#setPreviewSize setPreviewSize} cannot be changed. If
you wish to change the preview size, first remove the preview allocation
by calling {@code setPreviewCallbackAllocation(null)}, then change the
preview size, create a new preview Allocation with
{@link #createPreviewAllocation createPreviewAllocation}, and set it as
the new preview callback allocation target.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param previewAllocation the allocation to use as destination for preview
@throws IOException if configuring the camera to use the Allocation for
  preview fails.
@throws IllegalArgumentException if the Allocation's dimensions or other
  parameters don't meet the requirements.
@see #createPreviewAllocation
@see #setPreviewCallback
@see #setPreviewCallbackWithBuffer
@hide
"
      end

      operation 6580229 "setPreviewCallbackSurface"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 985605 // Surface
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6580613 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "camera_ref" explicit_type "Object"
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6580869 "autoFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 1176965 // AutoFocusCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Starts camera auto-focus and registers a callback function to run when
the camera is focused.  This method is only valid when preview is active
(between {@link #startPreview()} and before {@link #stopPreview()}).

<p>Callers should check
{@link android.hardware.Camera.Parameters#getFocusMode()} to determine if
this method should be called. If the camera does not support auto-focus,
it is a no-op and {@link AutoFocusCallback#onAutoFocus(boolean, Camera)}
callback will be called immediately.

<p>If your application should not be installed
on devices without auto-focus, you must declare that your application
uses auto-focus with the
<a href=\"{@docRoot}guide/topics/manifest/uses-feature-element.html\">&lt;uses-feature></a>
manifest element.</p>

<p>If the current flash mode is not
{@link android.hardware.Camera.Parameters#FLASH_MODE_OFF}, flash may be
fired during auto-focus, depending on the driver and camera hardware.<p>

<p>Auto-exposure lock {@link android.hardware.Camera.Parameters#getAutoExposureLock()}
and auto-white balance locks {@link android.hardware.Camera.Parameters#getAutoWhiteBalanceLock()}
do not change during and after autofocus. But auto-focus routine may stop
auto-exposure and auto-white balance transiently during focusing.

<p>Stopping preview with {@link #stopPreview()}, or triggering still
image capture with {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)}, will not change the
the focus position. Applications must call cancelAutoFocus to reset the
focus.</p>

<p>If autofocus is successful, consider using
{@link android.media.MediaActionSound} to properly play back an autofocus
success sound to the user.</p>

@param cb the callback to run
@see #cancelAutoFocus()
@see android.hardware.Camera.Parameters#setAutoExposureLock(boolean)
@see android.hardware.Camera.Parameters#setAutoWhiteBalanceLock(boolean)
@see android.media.MediaActionSound
"
      end

      operation 6580997 "native_autoFocus"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6581125 "cancelAutoFocus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Cancels any auto-focus function in progress.
Whether or not auto-focus is currently in progress,
this function will return the focus position to the default.
If the camera does not support auto-focus, this is a no-op.

@see #autoFocus(Camera.AutoFocusCallback)
"
      end

      operation 6581253 "native_cancelAutoFocus"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6581509 "setAutoFocusMoveCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 1177093 // AutoFocusMoveCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets camera auto-focus move callback.

@param cb the callback to run
"
      end

      operation 6581637 "enableFocusMoveCallback"
	private explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6582021 "takePicture"
	public explicit_return_type "void"
	nparams 3
	  param inout name "shutter" type class_ref 1176581 // ShutterCallback
	  param inout name "raw" type class_ref 1176709 // PictureCallback
	  param inout name "jpeg" type class_ref 1176709 // PictureCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Equivalent to takePicture(shutter, raw, null, jpeg).

@see #takePicture(ShutterCallback, PictureCallback, PictureCallback, PictureCallback)
"
      end

      operation 6582149 "native_takePicture"
	private explicit_return_type "void"
	nparams 1
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6582277 "takePicture"
	public explicit_return_type "void"
	nparams 4
	  param inout name "shutter" type class_ref 1176581 // ShutterCallback
	  param inout name "raw" type class_ref 1176709 // PictureCallback
	  param inout name "postview" type class_ref 1176709 // PictureCallback
	  param inout name "jpeg" type class_ref 1176709 // PictureCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Triggers an asynchronous image capture. The camera service will initiate
a series of callbacks to the application as the image capture progresses.
The shutter callback occurs after the image is captured. This can be used
to trigger a sound to let the user know that image has been captured. The
raw callback occurs when the raw image data is available (NOTE: the data
will be null if there is no raw image callback buffer available or the
raw image callback buffer is not large enough to hold the raw image).
The postview callback occurs when a scaled, fully processed postview
image is available (NOTE: not all hardware supports this). The jpeg
callback occurs when the compressed image is available. If the
application does not need a particular callback, a null can be passed
instead of a callback method.

<p>This method is only valid when preview is active (after
{@link #startPreview()}).  Preview will be stopped after the image is
taken; callers must call {@link #startPreview()} again if they want to
re-start preview or take more pictures. This should not be called between
{@link android.media.MediaRecorder#start()} and
{@link android.media.MediaRecorder#stop()}.

<p>After calling this method, you must not call {@link #startPreview()}
or take another picture until the JPEG callback has returned.

@param shutter   the callback for image capture moment, or null
@param raw       the callback for raw (uncompressed) image data, or null
@param postview  callback with postview image data, may be null
@param jpeg      the callback for JPEG image data, or null
"
      end

      operation 6582405 "startSmoothZoom"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Zooms to the requested value smoothly. The driver will notify {@link
OnZoomChangeListener} of the zoom value and whether zoom is stopped at
the time. For example, suppose the current zoom is 0 and startSmoothZoom
is called with value 3. The
{@link Camera.OnZoomChangeListener#onZoomChange(int, boolean, Camera)}
method will be called three times with zoom values 1, 2, and 3.
Applications can call {@link #stopSmoothZoom} to stop the zoom earlier.
Applications should not call startSmoothZoom again or change the zoom
value before zoom stops. If the supplied zoom value equals to the current
zoom value, no zoom callback will be generated. This method is supported
if {@link android.hardware.Camera.Parameters#isSmoothZoomSupported}
returns true.

@param value zoom value. The valid range is 0 to {@link
             android.hardware.Camera.Parameters#getMaxZoom}.
@throws IllegalArgumentException if the zoom value is invalid.
@throws RuntimeException if the method fails.
@see #setZoomChangeListener(OnZoomChangeListener)
"
      end

      operation 6582533 "stopSmoothZoom"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Stops the smooth zoom. Applications should wait for the {@link
OnZoomChangeListener} to know when the zoom is actually stopped. This
method is supported if {@link
android.hardware.Camera.Parameters#isSmoothZoomSupported} is true.

@throws RuntimeException if the method fails.
"
      end

      operation 6582661 "setDisplayOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "degrees" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Set the clockwise rotation of preview display in degrees. This affects
the preview frames and the picture displayed after snapshot. This method
is useful for portrait mode applications. Note that preview display of
front-facing cameras is flipped horizontally before the rotation, that
is, the image is reflected along the central vertical axis of the camera
sensor. So the users can see themselves as looking into a mirror.

<p>This does not affect the order of byte array passed in {@link
PreviewCallback#onPreviewFrame}, JPEG pictures, or recorded videos. This
method is not allowed to be called during preview.

<p>If you want to make the camera image show in the same orientation as
the display, you can use the following code.
<pre>
public static void setCameraDisplayOrientation(Activity activity,
        int cameraId, android.hardware.Camera camera) {
    android.hardware.Camera.CameraInfo info =
            new android.hardware.Camera.CameraInfo();
    android.hardware.Camera.getCameraInfo(cameraId, info);
    int rotation = activity.getWindowManager().getDefaultDisplay()
            .getRotation();
    int degrees = 0;
    switch (rotation) {
        case Surface.ROTATION_0: degrees = 0; break;
        case Surface.ROTATION_90: degrees = 90; break;
        case Surface.ROTATION_180: degrees = 180; break;
        case Surface.ROTATION_270: degrees = 270; break;
    }

    int result;
    if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
        result = (info.orientation + degrees) % 360;
        result = (360 - result) % 360;  // compensate the mirror
    } else {  // back-facing
        result = (info.orientation - degrees + 360) % 360;
    }
    camera.setDisplayOrientation(result);
}
</pre>

<p>Starting from API level 14, this method can be called when preview is
active.

<p><b>Note: </b>Before API level 24, the default value for orientation is 0. Starting in
API level 24, the default orientation will be such that applications in forced-landscape mode
will have correct preview orientation, which may be either a default of 0 or
180. Applications that operate in portrait mode or allow for changing orientation must still
call this method after each orientation change to ensure correct preview display in all
cases.</p>

@param degrees the angle that the picture will be rotated clockwise.
               Valid values are 0, 90, 180, and 270.
@see #setPreviewDisplay(SurfaceHolder)
"
      end

      operation 6582789 "enableShutterSound"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Enable or disable the default shutter sound when taking a picture.</p>

<p>By default, the camera plays the system-defined camera shutter sound
when {@link #takePicture} is called. Using this method, the shutter sound
can be disabled. It is strongly recommended that an alternative shutter
sound is played in the {@link ShutterCallback} when the system shutter
sound is disabled.</p>

<p>Note that devices may not always allow disabling the camera shutter
sound. If the shutter sound state cannot be set to the desired value,
this method will return false. {@link CameraInfo#canDisableShutterSound}
can be used to determine whether the device will allow the shutter sound
to be disabled.</p>

@param enabled whether the camera should play the system shutter sound
               when {@link #takePicture takePicture} is called.
@return {@code true} if the shutter sound state was successfully
        changed. {@code false} if the shutter sound state could not be
        changed. {@code true} is also returned if shutter sound playback
        is already set to the requested state.
@see #takePicture
@see CameraInfo#canDisableShutterSound
@see ShutterCallback
"
      end

      operation 6582917 "disableShutterSound"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Disable the shutter sound unconditionally.

<p>
This is only guaranteed to work for legacy cameras
(i.e. initialized with {@link #cameraInitUnspecified}). Trying to call this on
a regular camera will force a conditional check in the camera service.
</p>

@return {@code true} if the shutter sound state was successfully
        changed. {@code false} if the shutter sound state could not be
        changed. {@code true} is also returned if shutter sound playback
        is already set to the requested state.

@hide
"
      end

      operation 6583045 "_enableShutterSound"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6583301 "setZoomChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1177221 // OnZoomChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a listener to be notified when the zoom value is updated by the
camera driver during smooth zoom.

@param listener the listener to notify
@see #startSmoothZoom(int)
"
      end

      class 1177733 "Face"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6584197 "Face"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment "Create an empty face.
"
	end

	attribute 4241285 "rect"
	  public explicit_type "Rect"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Bounds of the face. (-1000, -1000) represents the top-left of the
camera field of view, and (1000, 1000) represents the bottom-right of
the field of view. For example, suppose the size of the viewfinder UI
is 800x480. The rect passed from the driver is (-1000, -1000, 0, 0).
The corresponding viewfinder rect should be (0, 0, 400, 240). It is
guaranteed left < right and top < bottom. The coordinates can be
smaller than -1000 or bigger than 1000. But at least one vertex will
be within (-1000, -1000) and (1000, 1000).

<p>The direction is relative to the sensor orientation, that is, what
the sensor sees. The direction is not affected by the rotation or
mirroring of {@link #setDisplayOrientation(int)}. The face bounding
rectangle does not provide any information about face orientation.</p>

<p>Here is the matrix to convert driver coordinates to View coordinates
in pixels.</p>
<pre>
Matrix matrix = new Matrix();
CameraInfo info = CameraHolder.instance().getCameraInfo()[cameraId];
// Need mirror for front camera.
boolean mirror = (info.facing == CameraInfo.CAMERA_FACING_FRONT);
matrix.setScale(mirror ? -1 : 1, 1);
// This is the value for android.hardware.Camera.setDisplayOrientation.
matrix.postRotate(displayOrientation);
// Camera driver coordinates range from (-1000, -1000) to (1000, 1000).
// UI coordinates range from (0, 0) to (width, height).
matrix.postScale(view.getWidth() / 2000f, view.getHeight() / 2000f);
matrix.postTranslate(view.getWidth() / 2f, view.getHeight() / 2f);
</pre>

@see #startFaceDetection()

"
	end

	attribute 4241413 "score"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "<p>The confidence level for the detection of the face. The range is 1 to
100. 100 is the highest confidence.</p>

<p>Depending on the device, even very low-confidence faces may be
listed, so applications should filter out faces with low confidence,
depending on the use case. For a typical point-and-shoot camera
application that wishes to display rectangles around detected faces,
filtering out faces with confidence less than 50 is recommended.</p>

@see #startFaceDetection()

"
	end

	attribute 4241541 "id"
	  public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "An unique id per face while the face is visible to the tracker. If
the face leaves the field-of-view and comes back, it will get a new
id. This is an optional field, may not be supported on all devices.
If not supported, id will always be set to -1. The optional fields
are supported as a set. Either they are all valid, or none of them
are.

"
	end

	attribute 4241669 "leftEye"
	  public explicit_type "Point"
	  init_value " null"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The coordinates of the center of the left eye. The coordinates are in
the same space as the ones for {@link #rect}. This is an optional
field, may not be supported on all devices. If not supported, the
value will always be set to null. The optional fields are supported
as a set. Either they are all valid, or none of them are.

"
	end

	attribute 4241797 "rightEye"
	  public explicit_type "Point"
	  init_value " null"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The coordinates of the center of the right eye. The coordinates are
in the same space as the ones for {@link #rect}.This is an optional
field, may not be supported on all devices. If not supported, the
value will always be set to null. The optional fields are supported
as a set. Either they are all valid, or none of them are.

"
	end

	attribute 4241925 "mouth"
	  public explicit_type "Point"
	  init_value " null"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The coordinates of the center of the mouth.  The coordinates are in
the same space as the ones for {@link #rect}. This is an optional
field, may not be supported on all devices. If not supported, the
value will always be set to null. The optional fields are supported
as a set. Either they are all valid, or none of them are.

"
	end
      end

      operation 6583557 "setFaceDetectionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1177349 // FaceDetectionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a listener to be notified about the faces detected in the
preview frame.

@param listener the listener to notify
@see #startFaceDetection()
"
      end

      operation 6583685 "startFaceDetection"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Starts the face detection. This should be called after preview is started.
The camera will notify {@link FaceDetectionListener} of the detected
faces in the preview frame. The detected faces may be the same as the
previous ones. Applications should call {@link #stopFaceDetection} to
stop the face detection. This method is supported if {@link
Parameters#getMaxNumDetectedFaces()} returns a number larger than 0.
If the face detection has started, apps should not call this again.

<p>When the face detection is running, {@link Parameters#setWhiteBalance(String)},
{@link Parameters#setFocusAreas(List)}, and {@link Parameters#setMeteringAreas(List)}
have no effect. The camera uses the detected faces to do auto-white balance,
auto exposure, and autofocus.

<p>If the apps call {@link #autoFocus(AutoFocusCallback)}, the camera
will stop sending face callbacks. The last face callback indicates the
areas used to do autofocus. After focus completes, face detection will
resume sending face callbacks. If the apps call {@link
#cancelAutoFocus()}, the face callbacks will also resume.</p>

<p>After calling {@link #takePicture(Camera.ShutterCallback, Camera.PictureCallback,
Camera.PictureCallback)} or {@link #stopPreview()}, and then resuming
preview with {@link #startPreview()}, the apps should call this method
again to resume face detection.</p>

@throws IllegalArgumentException if the face detection is unsupported.
@throws RuntimeException if the method fails or the face detection is
        already running.
@see FaceDetectionListener
@see #stopFaceDetection()
@see Parameters#getMaxNumDetectedFaces()
"
      end

      operation 6583813 "stopFaceDetection"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Stops the face detection.

@see #startFaceDetection()
"
      end

      operation 6583941 "_startFaceDetection"
	private explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6584069 "_stopFaceDetection"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 4242053 "CAMERA_ERROR_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Unspecified camera error.
@see Camera.ErrorCallback

"
      end

      attribute 4242181 "CAMERA_ERROR_EVICTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Camera was disconnected due to use by higher priority user.
@see Camera.ErrorCallback

"
      end

      attribute 4242309 "CAMERA_ERROR_SERVER_DIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Media server died. In this case, the application must release the
Camera object and instantiate a new one.
@see Camera.ErrorCallback

"
      end

      operation 6584453 "setErrorCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 1177477 // ErrorCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a callback to be invoked when an error occurs.
@param cb The callback to run
"
      end

      operation 6584581 "native_setParameters"
	private explicit_return_type "void"
	nparams 1
	  param in name "params" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6584709 "native_getParameters"
	private explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6584837 "setParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 1177861 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Changes the settings for this Camera service.

@param params the Parameters to use for this Camera service
@throws RuntimeException if any parameter is invalid or not supported.
@see #getParameters()
"
      end

      class 1177861 "Parameters"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4242949 "KEY_PREVIEW_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-size\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Parameter keys to communicate with the camera driver.
"
	end

	attribute 4243077 "KEY_PREVIEW_FORMAT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-format\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243205 "KEY_PREVIEW_FRAME_RATE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-frame-rate\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243333 "KEY_PREVIEW_FPS_RANGE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-fps-range\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243461 "KEY_PICTURE_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"picture-size\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243589 "KEY_PICTURE_FORMAT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"picture-format\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243717 "KEY_JPEG_THUMBNAIL_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-size\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243845 "KEY_JPEG_THUMBNAIL_WIDTH"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-width\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4243973 "KEY_JPEG_THUMBNAIL_HEIGHT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-height\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244101 "KEY_JPEG_THUMBNAIL_QUALITY"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-quality\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244229 "KEY_JPEG_QUALITY"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-quality\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244357 "KEY_ROTATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"rotation\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244485 "KEY_GPS_LATITUDE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-latitude\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244613 "KEY_GPS_LONGITUDE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-longitude\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244741 "KEY_GPS_ALTITUDE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-altitude\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244869 "KEY_GPS_TIMESTAMP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-timestamp\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4244997 "KEY_GPS_PROCESSING_METHOD"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-processing-method\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245125 "KEY_WHITE_BALANCE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"whitebalance\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245253 "KEY_EFFECT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"effect\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245381 "KEY_ANTIBANDING"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"antibanding\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245509 "KEY_SCENE_MODE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"scene-mode\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245637 "KEY_FLASH_MODE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"flash-mode\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245765 "KEY_FOCUS_MODE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focus-mode\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4245893 "KEY_FOCUS_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focus-areas\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246021 "KEY_MAX_NUM_FOCUS_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-focus-areas\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246149 "KEY_FOCAL_LENGTH"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focal-length\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246277 "KEY_HORIZONTAL_VIEW_ANGLE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"horizontal-view-angle\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246405 "KEY_VERTICAL_VIEW_ANGLE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"vertical-view-angle\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246533 "KEY_EXPOSURE_COMPENSATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"exposure-compensation\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246661 "KEY_MAX_EXPOSURE_COMPENSATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-exposure-compensation\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246789 "KEY_MIN_EXPOSURE_COMPENSATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"min-exposure-compensation\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4246917 "KEY_EXPOSURE_COMPENSATION_STEP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"exposure-compensation-step\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247045 "KEY_AUTO_EXPOSURE_LOCK"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-exposure-lock\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247173 "KEY_AUTO_EXPOSURE_LOCK_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-exposure-lock-supported\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247301 "KEY_AUTO_WHITEBALANCE_LOCK"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-whitebalance-lock\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247429 "KEY_AUTO_WHITEBALANCE_LOCK_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-whitebalance-lock-supported\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247557 "KEY_METERING_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"metering-areas\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247685 "KEY_MAX_NUM_METERING_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-metering-areas\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247813 "KEY_ZOOM"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"zoom\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4247941 "KEY_MAX_ZOOM"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-zoom\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248069 "KEY_ZOOM_RATIOS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"zoom-ratios\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248197 "KEY_ZOOM_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"zoom-supported\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248325 "KEY_SMOOTH_ZOOM_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"smooth-zoom-supported\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248453 "KEY_FOCUS_DISTANCES"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focus-distances\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248581 "KEY_VIDEO_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-size\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248709 "KEY_PREFERRED_PREVIEW_SIZE_FOR_VIDEO"
	  class_attribute const_attribute private explicit_type "String"
	  init_value "
                                            \"preferred-preview-size-for-video\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248837 "KEY_MAX_NUM_DETECTED_FACES_HW"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-detected-faces-hw\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4248965 "KEY_MAX_NUM_DETECTED_FACES_SW"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-detected-faces-sw\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249093 "KEY_RECORDING_HINT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"recording-hint\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249221 "KEY_VIDEO_SNAPSHOT_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-snapshot-supported\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249349 "KEY_VIDEO_STABILIZATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-stabilization\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249477 "KEY_VIDEO_STABILIZATION_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-stabilization-supported\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249605 "SUPPORTED_VALUES_SUFFIX"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"-values\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Parameter key suffix for supported values.
"
	end

	attribute 4249733 "TRUE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"true\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249861 "FALSE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"false\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4249989 "WHITE_BALANCE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Values for white balance settings.
"
	end

	attribute 4250117 "WHITE_BALANCE_INCANDESCENT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"incandescent\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4250245 "WHITE_BALANCE_FLUORESCENT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"fluorescent\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4250373 "WHITE_BALANCE_WARM_FLUORESCENT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"warm-fluorescent\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4250501 "WHITE_BALANCE_DAYLIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"daylight\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4250629 "WHITE_BALANCE_CLOUDY_DAYLIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"cloudy-daylight\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4250757 "WHITE_BALANCE_TWILIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"twilight\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4250885 "WHITE_BALANCE_SHADE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"shade\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251013 "EFFECT_NONE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"none\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Values for color effect settings.
"
	end

	attribute 4251141 "EFFECT_MONO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"mono\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251269 "EFFECT_NEGATIVE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"negative\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251397 "EFFECT_SOLARIZE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"solarize\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251525 "EFFECT_SEPIA"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"sepia\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251653 "EFFECT_POSTERIZE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"posterize\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251781 "EFFECT_WHITEBOARD"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"whiteboard\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4251909 "EFFECT_BLACKBOARD"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"blackboard\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4252037 "EFFECT_AQUA"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"aqua\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4252165 "ANTIBANDING_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Values for antibanding settings.
"
	end

	attribute 4252293 "ANTIBANDING_50HZ"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"50hz\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4252421 "ANTIBANDING_60HZ"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"60hz\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4252549 "ANTIBANDING_OFF"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"off\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4252677 "FLASH_MODE_OFF"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"off\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Values for flash mode settings.

Flash will not be fired.

"
	end

	attribute 4252805 "FLASH_MODE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Flash will be fired automatically when required. The flash may be fired
during preview, auto-focus, or snapshot depending on the driver.

"
	end

	attribute 4252933 "FLASH_MODE_ON"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"on\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Flash will always be fired during snapshot. The flash may also be
fired during preview or auto-focus depending on the driver.

"
	end

	attribute 4253061 "FLASH_MODE_RED_EYE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"red-eye\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Flash will be fired in red-eye reduction mode.

"
	end

	attribute 4253189 "FLASH_MODE_TORCH"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"torch\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Constant emission of light during preview, auto-focus and snapshot.
This can also be used for video recording.

"
	end

	attribute 4253317 "SCENE_MODE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Scene mode is off.

"
	end

	attribute 4253445 "SCENE_MODE_ACTION"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"action\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take photos of fast moving objects. Same as {@link
#SCENE_MODE_SPORTS}.

"
	end

	attribute 4253573 "SCENE_MODE_PORTRAIT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"portrait\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take people pictures.

"
	end

	attribute 4253701 "SCENE_MODE_LANDSCAPE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"landscape\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take pictures on distant objects.

"
	end

	attribute 4253829 "SCENE_MODE_NIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"night\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take photos at night.

"
	end

	attribute 4253957 "SCENE_MODE_NIGHT_PORTRAIT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"night-portrait\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take people pictures at night.

"
	end

	attribute 4254085 "SCENE_MODE_THEATRE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"theatre\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take photos in a theater. Flash light is off.

"
	end

	attribute 4254213 "SCENE_MODE_BEACH"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"beach\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take pictures on the beach.

"
	end

	attribute 4254341 "SCENE_MODE_SNOW"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"snow\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take pictures on the snow.

"
	end

	attribute 4254469 "SCENE_MODE_SUNSET"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"sunset\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take sunset photos.

"
	end

	attribute 4254597 "SCENE_MODE_STEADYPHOTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"steadyphoto\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Avoid blurry pictures (for example, due to hand shake).

"
	end

	attribute 4254725 "SCENE_MODE_FIREWORKS"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"fireworks\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "For shooting firework displays.

"
	end

	attribute 4254853 "SCENE_MODE_SPORTS"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"sports\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take photos of fast moving objects. Same as {@link
#SCENE_MODE_ACTION}.

"
	end

	attribute 4254981 "SCENE_MODE_PARTY"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"party\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Take indoor low-light shot.

"
	end

	attribute 4255109 "SCENE_MODE_CANDLELIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"candlelight\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Capture the naturally warm color of scenes lit by candles.

"
	end

	attribute 4255237 "SCENE_MODE_BARCODE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"barcode\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Applications are looking for a barcode. Camera driver will be
optimized for barcode reading.

"
	end

	attribute 4255365 "SCENE_MODE_HDR"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"hdr\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Capture a scene using high dynamic range imaging techniques. The
camera will return an image that has an extended dynamic range
compared to a regular capture. Capturing such an image may take
longer than a regular capture.

"
	end

	attribute 4255493 "FOCUS_MODE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Auto-focus mode. Applications should call {@link
#autoFocus(AutoFocusCallback)} to start the focus in this mode.

"
	end

	attribute 4255621 "FOCUS_MODE_INFINITY"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"infinity\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Focus is set at infinity. Applications should not call
{@link #autoFocus(AutoFocusCallback)} in this mode.

"
	end

	attribute 4255749 "FOCUS_MODE_MACRO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"macro\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Macro (close-up) focus mode. Applications should call
{@link #autoFocus(AutoFocusCallback)} to start the focus in this
mode.

"
	end

	attribute 4255877 "FOCUS_MODE_FIXED"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"fixed\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Focus is fixed. The camera is always in this mode if the focus is not
adjustable. If the camera has auto-focus, this mode can fix the
focus, which is usually at hyperfocal distance. Applications should
not call {@link #autoFocus(AutoFocusCallback)} in this mode.

"
	end

	attribute 4256005 "FOCUS_MODE_EDOF"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"edof\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Extended depth of field (EDOF). Focusing is done digitally and
continuously. Applications should not call {@link
#autoFocus(AutoFocusCallback)} in this mode.

"
	end

	attribute 4256133 "FOCUS_MODE_CONTINUOUS_VIDEO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"continuous-video\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Continuous auto focus mode intended for video recording. The camera
continuously tries to focus. This is the best choice for video
recording because the focus changes smoothly . Applications still can
call {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)} in this mode but the
subject may not be in focus. Auto focus starts when the parameter is
set.

<p>Since API level 14, applications can call {@link
#autoFocus(AutoFocusCallback)} in this mode. The focus callback will
immediately return with a boolean that indicates whether the focus is
sharp or not. The focus position is locked after autoFocus call. If
applications want to resume the continuous focus, cancelAutoFocus
must be called. Restarting the preview will not resume the continuous
autofocus. To stop continuous focus, applications should change the
focus mode to other modes.

@see #FOCUS_MODE_CONTINUOUS_PICTURE

"
	end

	attribute 4256261 "FOCUS_MODE_CONTINUOUS_PICTURE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"continuous-picture\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Continuous auto focus mode intended for taking pictures. The camera
continuously tries to focus. The speed of focus change is more
aggressive than {@link #FOCUS_MODE_CONTINUOUS_VIDEO}. Auto focus
starts when the parameter is set.

<p>Applications can call {@link #autoFocus(AutoFocusCallback)} in
this mode. If the autofocus is in the middle of scanning, the focus
callback will return when it completes. If the autofocus is not
scanning, the focus callback will immediately return with a boolean
that indicates whether the focus is sharp or not. The apps can then
decide if they want to take a picture immediately or to change the
focus mode to auto, and run a full autofocus cycle. The focus
position is locked after autoFocus call. If applications want to
resume the continuous focus, cancelAutoFocus must be called.
Restarting the preview will not resume the continuous autofocus. To
stop continuous focus, applications should change the focus mode to
other modes.

@see #FOCUS_MODE_CONTINUOUS_VIDEO

"
	end

	attribute 4256389 "FOCUS_DISTANCE_NEAR_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Indices for focus distance array.

The array index of near focus distance for use with
{@link #getFocusDistances(float[])}.

"
	end

	attribute 4256517 "FOCUS_DISTANCE_OPTIMAL_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The array index of optimal focus distance for use with
{@link #getFocusDistances(float[])}.

"
	end

	attribute 4256645 "FOCUS_DISTANCE_FAR_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The array index of far focus distance for use with
{@link #getFocusDistances(float[])}.

"
	end

	attribute 4256773 "PREVIEW_FPS_MIN_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The array index of minimum preview fps for use with {@link
#getPreviewFpsRange(int[])} or {@link
#getSupportedPreviewFpsRange()}.

"
	end

	attribute 4256901 "PREVIEW_FPS_MAX_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "The array index of maximum preview fps for use with {@link
#getPreviewFpsRange(int[])} or {@link
#getSupportedPreviewFpsRange()}.

"
	end

	attribute 4257029 "PIXEL_FORMAT_YUV422SP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv422sp\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Formats for setPreviewFormat and setPictureFormat.
"
	end

	attribute 4257157 "PIXEL_FORMAT_YUV420SP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv420sp\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4257285 "PIXEL_FORMAT_YUV422I"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv422i-yuyv\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4257413 "PIXEL_FORMAT_YUV420P"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv420p\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4257541 "PIXEL_FORMAT_RGB565"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"rgb565\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4257669 "PIXEL_FORMAT_JPEG"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4257797 "PIXEL_FORMAT_BAYER_RGGB"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"bayer-rggb\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4257925 "mMap"
	  const_attribute private explicit_type "String, String"
	  stereotype "LinkedHashMap"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Order matters: Keys that are {@link #set(String, String) set} later
will take precedence over keys that are set earlier (if the two keys
conflict with each other).

<p>One example is {@link #setPreviewFpsRange(int, int)} , since it
conflicts with {@link #setPreviewFrameRate(int)} whichever key is set later
is the one that will take precedence.
</p>

"
	end

	operation 6585989 "Parameters"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6586117 "copyFrom"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "other" type class_ref 1177861 // Parameters
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Overwrite existing parameters with a copy of the ones from {@code other}.

<b>For use by the legacy shim only.</b>

@hide
"
	end

	operation 6586245 "getOuter"
	  private return_type class_ref 1176325 // Camera
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6586373 "same"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "other" type class_ref 1177861 // Parameters
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Value equality check.

@hide
"
	end

	operation 6586501 "dump"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Writes the current Parameters to the log.
@hide
@deprecated
"
	end

	operation 6586629 "flatten"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Creates a single string with all the parameters set in
this Parameters object.
<p>The {@link #unflatten(String)} method does the reverse.</p>

@return a String with all values from this Parameters object, in
        semi-colon delimited key-value pairs
"
	end

	operation 6586757 "unflatten"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "flattened" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Takes a flattened string of parameters and adds each one to
this Parameters object.
<p>The {@link #flatten()} method does the reverse.</p>

@param flattened a String of parameters (key-value paired) that
                 are semi-colon delimited
"
	end

	operation 6586885 "remove"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6587013 "set"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets a String parameter.

@param key   the key name for the parameter
@param value the String value of the parameter
"
	end

	operation 6587141 "set"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets an integer parameter.

@param key   the key name for the parameter
@param value the int value of the parameter
"
	end

	operation 6587269 "put"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6587397 "set"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "areas" explicit_type "List<Area>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6587525 "get"
	  public explicit_return_type "String"
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the value of a String parameter.

@param key the key name for the parameter
@return the String value of the parameter
"
	end

	operation 6587653 "getInt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the value of an integer parameter.

@param key the key name for the parameter
@return the int value of the parameter
"
	end

	operation 6587781 "setPreviewSize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the dimensions for preview pictures. If the preview has already
started, applications should stop the preview first before changing
preview size.

The sides of width and height are based on camera orientation. That
is, the preview size is the size before it is rotated by display
orientation. So applications need to consider the display orientation
while setting preview size. For example, suppose the camera supports
both 480x320 and 320x480 preview sizes. The application wants a 3:2
preview ratio. If the display orientation is set to 0 or 180, preview
size should be set to 480x320. If the display orientation is set to
90 or 270, preview size should be set to 320x480. The display
orientation should also be considered while setting picture size and
thumbnail size.

@param width  the width of the pictures, in pixels
@param height the height of the pictures, in pixels
@see #setDisplayOrientation(int)
@see #getCameraInfo(int, CameraInfo)
@see #setPictureSize(int, int)
@see #setJpegThumbnailSize(int, int)
"
	end

	operation 6587909 "getPreviewSize"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the dimensions setting for preview pictures.

@return a Size object with the width and height setting
         for the preview picture
"
	end

	operation 6588037 "getSupportedPreviewSizes"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported preview sizes.

@return a list of Size object. This method will always return a list
        with at least one element.
"
	end

	operation 6588165 "getSupportedVideoSizes"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Gets the supported video frame sizes that can be used by
MediaRecorder.</p>

<p>If the returned list is not null, the returned list will contain at
least one Size and one of the sizes in the returned list must be
passed to MediaRecorder.setVideoSize() for camcorder application if
camera is used as the video source. In this case, the size of the
preview can be different from the resolution of the recorded video
during video recording.</p>

@return a list of Size object if camera has separate preview and
        video output; otherwise, null is returned.
@see #getPreferredPreviewSizeForVideo()
"
	end

	operation 6588293 "getPreferredPreviewSizeForVideo"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the preferred or recommended preview size (width and height)
in pixels for video recording. Camcorder applications should
set the preview size to a value that is not larger than the
preferred preview size. In other words, the product of the width
and height of the preview size should not be larger than that of
the preferred preview size. In addition, we recommend to choose a
preview size that has the same aspect ratio as the resolution of
video to be recorded.

@return the preferred preview size (width and height) in pixels for
        video recording if getSupportedVideoSizes() does not return
        null; otherwise, null is returned.
@see #getSupportedVideoSizes()
"
	end

	operation 6588421 "setJpegThumbnailSize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Sets the dimensions for EXIF thumbnail in Jpeg picture. If
applications set both width and height to 0, EXIF will not contain
thumbnail.</p>

<p>Applications need to consider the display orientation. See {@link
#setPreviewSize(int,int)} for reference.</p>

@param width  the width of the thumbnail, in pixels
@param height the height of the thumbnail, in pixels
@see #setPreviewSize(int,int)
"
	end

	operation 6588549 "getJpegThumbnailSize"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the dimensions for EXIF thumbnail in Jpeg picture.

@return a Size object with the height and width setting for the EXIF
        thumbnails
"
	end

	operation 6588677 "getSupportedJpegThumbnailSizes"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported jpeg thumbnail sizes.

@return a list of Size object. This method will always return a list
        with at least two elements. Size 0,0 (no thumbnail) is always
        supported.
"
	end

	operation 6588805 "setJpegThumbnailQuality"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "quality" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the quality of the EXIF thumbnail in Jpeg picture.

@param quality the JPEG quality of the EXIF thumbnail. The range is 1
               to 100, with 100 being the best.
"
	end

	operation 6588933 "getJpegThumbnailQuality"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the quality setting for the EXIF thumbnail in Jpeg picture.

@return the JPEG quality setting of the EXIF thumbnail.
"
	end

	operation 6589061 "setJpegQuality"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "quality" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets Jpeg quality of captured picture.

@param quality the JPEG quality of captured picture. The range is 1
               to 100, with 100 being the best.
"
	end

	operation 6589189 "getJpegQuality"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the quality setting for the JPEG picture.

@return the JPEG picture quality setting.
"
	end

	operation 6589317 "setPreviewFrameRate"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "fps" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the rate at which preview frames are received. This is the
target frame rate. The actual frame rate depends on the driver.

@param fps the frame rate (frames per second)
@deprecated replaced by {@link #setPreviewFpsRange(int,int)}
"
	end

	operation 6589445 "getPreviewFrameRate"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the setting for the rate at which preview frames are
received. This is the target frame rate. The actual frame rate
depends on the driver.

@return the frame rate setting (frames per second)
@deprecated replaced by {@link #getPreviewFpsRange(int[])}
"
	end

	operation 6589573 "getSupportedPreviewFrameRates"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported preview frame rates.

@return a list of supported preview frame rates. null if preview
        frame rate setting is not supported.
@deprecated replaced by {@link #getSupportedPreviewFpsRange()}
"
	end

	operation 6589701 "setPreviewFpsRange"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "min" explicit_type "int"
	    param in name "max" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the minimum and maximum preview fps. This controls the rate of
preview frames received in {@link PreviewCallback}. The minimum and
maximum preview fps must be one of the elements from {@link
#getSupportedPreviewFpsRange}.

@param min the minimum preview fps (scaled by 1000).
@param max the maximum preview fps (scaled by 1000).
@throws RuntimeException if fps range is invalid.
@see #setPreviewCallbackWithBuffer(Camera.PreviewCallback)
@see #getSupportedPreviewFpsRange()
"
	end

	operation 6589829 "getPreviewFpsRange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "range" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the current minimum and maximum preview fps. The values are
one of the elements returned by {@link #getSupportedPreviewFpsRange}.

@return range the minimum and maximum preview fps (scaled by 1000).
@see #PREVIEW_FPS_MIN_INDEX
@see #PREVIEW_FPS_MAX_INDEX
@see #getSupportedPreviewFpsRange()
"
	end

	operation 6589957 "getSupportedPreviewFpsRange"
	  public explicit_return_type "List<int[]>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported preview fps (frame-per-second) ranges. Each range
contains a minimum fps and maximum fps. If minimum fps equals to
maximum fps, the camera outputs frames in fixed frame rate. If not,
the camera outputs frames in auto frame rate. The actual frame rate
fluctuates between the minimum and the maximum. The values are
multiplied by 1000 and represented in integers. For example, if frame
rate is 26.623 frames per second, the value is 26623.

@return a list of supported preview fps ranges. This method returns a
        list with at least one element. Every element is an int array
        of two values - minimum fps and maximum fps. The list is
        sorted from small to large (first by maximum fps and then
        minimum fps).
@see #PREVIEW_FPS_MIN_INDEX
@see #PREVIEW_FPS_MAX_INDEX
"
	end

	operation 6590085 "setPreviewFormat"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "pixel_format" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the image format for preview pictures.
<p>If this is never called, the default format will be
{@link android.graphics.ImageFormat#NV21}, which
uses the NV21 encoding format.</p>

<p>Use {@link Parameters#getSupportedPreviewFormats} to get a list of
the available preview formats.

<p>It is strongly recommended that either
{@link android.graphics.ImageFormat#NV21} or
{@link android.graphics.ImageFormat#YV12} is used, since
they are supported by all camera devices.</p>

<p>For YV12, the image buffer that is received is not necessarily
tightly packed, as there may be padding at the end of each row of
pixel data, as described in
{@link android.graphics.ImageFormat#YV12}. For camera callback data,
it can be assumed that the stride of the Y and UV data is the
smallest possible that meets the alignment requirements. That is, if
the preview size is <var>width x height</var>, then the following
equations describe the buffer index for the beginning of row
<var>y</var> for the Y plane and row <var>c</var> for the U and V
planes:

<pre>{@code
yStride   = (int) ceil(width / 16.0) * 16;
uvStride  = (int) ceil( (yStride / 2) / 16.0) * 16;
ySize     = yStride * height;
uvSize    = uvStride * height / 2;
yRowIndex = yStride * y;
uRowIndex = ySize + uvSize + uvStride * c;
vRowIndex = ySize + uvStride * c;
size      = ySize + uvSize * 2;
}
</pre>

@param pixel_format the desired preview picture format, defined by
  one of the {@link android.graphics.ImageFormat} constants.  (E.g.,
  <var>ImageFormat.NV21</var> (default), or
  <var>ImageFormat.YV12</var>)

@see android.graphics.ImageFormat
@see android.hardware.Camera.Parameters#getSupportedPreviewFormats
"
	end

	operation 6590213 "getPreviewFormat"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the image format for preview frames got from
{@link PreviewCallback}.

@return the preview format.
@see android.graphics.ImageFormat
@see #setPreviewFormat
"
	end

	operation 6590341 "getSupportedPreviewFormats"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported preview formats. {@link android.graphics.ImageFormat#NV21}
is always supported. {@link android.graphics.ImageFormat#YV12}
is always supported since API level 12.

@return a list of supported preview formats. This method will always
        return a list with at least one element.
@see android.graphics.ImageFormat
@see #setPreviewFormat
"
	end

	operation 6590469 "setPictureSize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Sets the dimensions for pictures.</p>

<p>Applications need to consider the display orientation. See {@link
#setPreviewSize(int,int)} for reference.</p>

@param width  the width for pictures, in pixels
@param height the height for pictures, in pixels
@see #setPreviewSize(int,int)

"
	end

	operation 6590597 "getPictureSize"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the dimension setting for pictures.

@return a Size object with the height and width setting
         for pictures
"
	end

	operation 6590725 "getSupportedPictureSizes"
	  public return_type class_ref 1177989 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported picture sizes.

@return a list of supported picture sizes. This method will always
        return a list with at least one element.
"
	end

	operation 6590853 "setPictureFormat"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "pixel_format" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the image format for pictures.

@param pixel_format the desired picture format
                    (<var>ImageFormat.NV21</var>,
                     <var>ImageFormat.RGB_565</var>, or
                     <var>ImageFormat.JPEG</var>)
@see android.graphics.ImageFormat
"
	end

	operation 6590981 "getPictureFormat"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns the image format for pictures.

@return the picture format
@see android.graphics.ImageFormat
"
	end

	operation 6591109 "getSupportedPictureFormats"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported picture formats.

@return supported picture formats. This method will always return a
        list with at least one element.
@see android.graphics.ImageFormat
"
	end

	operation 6591237 "cameraFormatForPixelFormat"
	  private explicit_return_type "String"
	  nparams 1
	    param in name "pixel_format" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6591365 "pixelFormatForCameraFormat"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "format" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6591493 "setRotation"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "rotation" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the clockwise rotation angle in degrees relative to the
orientation of the camera. This affects the pictures returned from
JPEG {@link PictureCallback}. The camera driver may set orientation
in the EXIF header without rotating the picture. Or the driver may
rotate the picture and the EXIF thumbnail. If the Jpeg picture is
rotated, the orientation in the EXIF header will be missing or 1 (row
#0 is top and column #0 is left side).

<p>
If applications want to rotate the picture to match the orientation
of what users see, apps should use
{@link android.view.OrientationEventListener} and
{@link android.hardware.Camera.CameraInfo}. The value from
OrientationEventListener is relative to the natural orientation of
the device. CameraInfo.orientation is the angle between camera
orientation and natural device orientation. The sum of the two is the
rotation angle for back-facing camera. The difference of the two is
the rotation angle for front-facing camera. Note that the JPEG
pictures of front-facing cameras are not mirrored as in preview
display.

<p>
For example, suppose the natural orientation of the device is
portrait. The device is rotated 270 degrees clockwise, so the device
orientation is 270. Suppose a back-facing camera sensor is mounted in
landscape and the top side of the camera sensor is aligned with the
right edge of the display in natural orientation. So the camera
orientation is 90. The rotation should be set to 0 (270 + 90).

<p>The reference code is as follows.

<pre>
public void onOrientationChanged(int orientation) {
    if (orientation == ORIENTATION_UNKNOWN) return;
    android.hardware.Camera.CameraInfo info =
           new android.hardware.Camera.CameraInfo();
    android.hardware.Camera.getCameraInfo(cameraId, info);
    orientation = (orientation + 45) / 90 * 90;
    int rotation = 0;
    if (info.facing == CameraInfo.CAMERA_FACING_FRONT) {
        rotation = (info.orientation - orientation + 360) % 360;
    } else {  // back-facing camera
        rotation = (info.orientation + orientation) % 360;
    }
    mParameters.setRotation(rotation);
}
</pre>

@param rotation The rotation angle in degrees relative to the
                orientation of the camera. Rotation can only be 0,
                90, 180 or 270.
@throws IllegalArgumentException if rotation value is invalid.
@see android.view.OrientationEventListener
@see #getCameraInfo(int, CameraInfo)
"
	end

	operation 6591621 "setGpsLatitude"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "latitude" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets GPS latitude coordinate. This will be stored in JPEG EXIF
header.

@param latitude GPS latitude coordinate.
"
	end

	operation 6591749 "setGpsLongitude"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "longitude" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets GPS longitude coordinate. This will be stored in JPEG EXIF
header.

@param longitude GPS longitude coordinate.
"
	end

	operation 6591877 "setGpsAltitude"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "altitude" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets GPS altitude. This will be stored in JPEG EXIF header.

@param altitude GPS altitude in meters.
"
	end

	operation 6592005 "setGpsTimestamp"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets GPS timestamp. This will be stored in JPEG EXIF header.

@param timestamp GPS timestamp (UTC in seconds since January 1,
                 1970).
"
	end

	operation 6592133 "setGpsProcessingMethod"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "processing_method" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets GPS processing method. The method will be stored in a UTF-8 string up to 31 bytes
long, in the JPEG EXIF header.

@param processing_method The processing method to get this location.
"
	end

	operation 6592261 "removeGpsData"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Removes GPS latitude, longitude, altitude, and timestamp from the
parameters.
"
	end

	operation 6592389 "getWhiteBalance"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current white balance setting.

@return current white balance. null if white balance setting is not
        supported.
@see #WHITE_BALANCE_AUTO
@see #WHITE_BALANCE_INCANDESCENT
@see #WHITE_BALANCE_FLUORESCENT
@see #WHITE_BALANCE_WARM_FLUORESCENT
@see #WHITE_BALANCE_DAYLIGHT
@see #WHITE_BALANCE_CLOUDY_DAYLIGHT
@see #WHITE_BALANCE_TWILIGHT
@see #WHITE_BALANCE_SHADE

"
	end

	operation 6592517 "setWhiteBalance"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the white balance. Changing the setting will release the
auto-white balance lock. It is recommended not to change white
balance and AWB lock at the same time.

@param value new white balance.
@see #getWhiteBalance()
@see #setAutoWhiteBalanceLock(boolean)
"
	end

	operation 6592645 "getSupportedWhiteBalance"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported white balance.

@return a list of supported white balance. null if white balance
        setting is not supported.
@see #getWhiteBalance()
"
	end

	operation 6592773 "getColorEffect"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current color effect setting.

@return current color effect. null if color effect
        setting is not supported.
@see #EFFECT_NONE
@see #EFFECT_MONO
@see #EFFECT_NEGATIVE
@see #EFFECT_SOLARIZE
@see #EFFECT_SEPIA
@see #EFFECT_POSTERIZE
@see #EFFECT_WHITEBOARD
@see #EFFECT_BLACKBOARD
@see #EFFECT_AQUA
"
	end

	operation 6592901 "setColorEffect"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the current color effect setting.

@param value new color effect.
@see #getColorEffect()
"
	end

	operation 6593029 "getSupportedColorEffects"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported color effects.

@return a list of supported color effects. null if color effect
        setting is not supported.
@see #getColorEffect()
"
	end

	operation 6593157 "getAntibanding"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current antibanding setting.

@return current antibanding. null if antibanding setting is not
        supported.
@see #ANTIBANDING_AUTO
@see #ANTIBANDING_50HZ
@see #ANTIBANDING_60HZ
@see #ANTIBANDING_OFF
"
	end

	operation 6593285 "setAntibanding"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "antibanding" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the antibanding.

@param antibanding new antibanding value.
@see #getAntibanding()
"
	end

	operation 6593413 "getSupportedAntibanding"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported antibanding values.

@return a list of supported antibanding values. null if antibanding
        setting is not supported.
@see #getAntibanding()
"
	end

	operation 6593541 "getSceneMode"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current scene mode setting.

@return one of SCENE_MODE_XXX string constant. null if scene mode
        setting is not supported.
@see #SCENE_MODE_AUTO
@see #SCENE_MODE_ACTION
@see #SCENE_MODE_PORTRAIT
@see #SCENE_MODE_LANDSCAPE
@see #SCENE_MODE_NIGHT
@see #SCENE_MODE_NIGHT_PORTRAIT
@see #SCENE_MODE_THEATRE
@see #SCENE_MODE_BEACH
@see #SCENE_MODE_SNOW
@see #SCENE_MODE_SUNSET
@see #SCENE_MODE_STEADYPHOTO
@see #SCENE_MODE_FIREWORKS
@see #SCENE_MODE_SPORTS
@see #SCENE_MODE_PARTY
@see #SCENE_MODE_CANDLELIGHT
@see #SCENE_MODE_BARCODE
"
	end

	operation 6593669 "setSceneMode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the scene mode. Changing scene mode may override other
parameters (such as flash mode, focus mode, white balance). For
example, suppose originally flash mode is on and supported flash
modes are on/off. In night scene mode, both flash mode and supported
flash mode may be changed to off. After setting scene mode,
applications should call getParameters to know if some parameters are
changed.

@param value scene mode.
@see #getSceneMode()
"
	end

	operation 6593797 "getSupportedSceneModes"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported scene modes.

@return a list of supported scene modes. null if scene mode setting
        is not supported.
@see #getSceneMode()
"
	end

	operation 6593925 "getFlashMode"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current flash mode setting.

@return current flash mode. null if flash mode setting is not
        supported.
@see #FLASH_MODE_OFF
@see #FLASH_MODE_AUTO
@see #FLASH_MODE_ON
@see #FLASH_MODE_RED_EYE
@see #FLASH_MODE_TORCH
"
	end

	operation 6594053 "setFlashMode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the flash mode.

@param value flash mode.
@see #getFlashMode()
"
	end

	operation 6594181 "getSupportedFlashModes"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported flash modes.

@return a list of supported flash modes. null if flash mode setting
        is not supported.
@see #getFlashMode()
"
	end

	operation 6594309 "getFocusMode"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current focus mode setting.

@return current focus mode. This method will always return a non-null
        value. Applications should call {@link
        #autoFocus(AutoFocusCallback)} to start the focus if focus
        mode is FOCUS_MODE_AUTO or FOCUS_MODE_MACRO.
@see #FOCUS_MODE_AUTO
@see #FOCUS_MODE_INFINITY
@see #FOCUS_MODE_MACRO
@see #FOCUS_MODE_FIXED
@see #FOCUS_MODE_EDOF
@see #FOCUS_MODE_CONTINUOUS_VIDEO
"
	end

	operation 6594437 "setFocusMode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the focus mode.

@param value focus mode.
@see #getFocusMode()
"
	end

	operation 6594565 "getSupportedFocusModes"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the supported focus modes.

@return a list of supported focus modes. This method will always
        return a list with at least one element.
@see #getFocusMode()
"
	end

	operation 6594693 "getFocalLength"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the focal length (in millimeter) of the camera.

@return the focal length. This method will always return a valid
        value.
"
	end

	operation 6594821 "getHorizontalViewAngle"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the horizontal angle of view in degrees.

@return horizontal angle of view. This method will always return a
        valid value.
"
	end

	operation 6594949 "getVerticalViewAngle"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the vertical angle of view in degrees.

@return vertical angle of view. This method will always return a
        valid value.
"
	end

	operation 6595077 "getExposureCompensation"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the current exposure compensation index.

@return current exposure compensation index. The range is {@link
        #getMinExposureCompensation} to {@link
        #getMaxExposureCompensation}. 0 means exposure is not
        adjusted.
"
	end

	operation 6595205 "setExposureCompensation"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the exposure compensation index.

@param value exposure compensation index. The valid value range is
       from {@link #getMinExposureCompensation} (inclusive) to {@link
       #getMaxExposureCompensation} (inclusive). 0 means exposure is
       not adjusted. Application should call
       getMinExposureCompensation and getMaxExposureCompensation to
       know if exposure compensation is supported.
"
	end

	operation 6595333 "getMaxExposureCompensation"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the maximum exposure compensation index.

@return maximum exposure compensation index (>=0). If both this
        method and {@link #getMinExposureCompensation} return 0,
        exposure compensation is not supported.
"
	end

	operation 6595461 "getMinExposureCompensation"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the minimum exposure compensation index.

@return minimum exposure compensation index (<=0). If both this
        method and {@link #getMaxExposureCompensation} return 0,
        exposure compensation is not supported.
"
	end

	operation 6595589 "getExposureCompensationStep"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the exposure compensation step.

@return exposure compensation step. Applications can get EV by
        multiplying the exposure compensation index and step. Ex: if
        exposure compensation index is -6 and step is 0.333333333, EV
        is -2.
"
	end

	operation 6595717 "setAutoExposureLock"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "toggle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Sets the auto-exposure lock state. Applications should check
{@link #isAutoExposureLockSupported} before using this method.</p>

<p>If set to true, the camera auto-exposure routine will immediately
pause until the lock is set to false. Exposure compensation settings
changes will still take effect while auto-exposure is locked.</p>

<p>If auto-exposure is already locked, setting this to true again has
no effect (the driver will not recalculate exposure values).</p>

<p>Stopping preview with {@link #stopPreview()}, or triggering still
image capture with {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)}, will not change the
lock.</p>

<p>Exposure compensation, auto-exposure lock, and auto-white balance
lock can be used to capture an exposure-bracketed burst of images,
for example.</p>

<p>Auto-exposure state, including the lock state, will not be
maintained after camera {@link #release()} is called.  Locking
auto-exposure after {@link #open()} but before the first call to
{@link #startPreview()} will not allow the auto-exposure routine to
run at all, and may result in severely over- or under-exposed
images.</p>

@param toggle new state of the auto-exposure lock. True means that
       auto-exposure is locked, false means that the auto-exposure
       routine is free to run normally.

@see #getAutoExposureLock()
"
	end

	operation 6595845 "getAutoExposureLock"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the state of the auto-exposure lock. Applications should check
{@link #isAutoExposureLockSupported} before using this method. See
{@link #setAutoExposureLock} for details about the lock.

@return State of the auto-exposure lock. Returns true if
        auto-exposure is currently locked, and false otherwise.

@see #setAutoExposureLock(boolean)

"
	end

	operation 6595973 "isAutoExposureLockSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns true if auto-exposure locking is supported. Applications
should call this before trying to lock auto-exposure. See
{@link #setAutoExposureLock} for details about the lock.

@return true if auto-exposure lock is supported.
@see #setAutoExposureLock(boolean)

"
	end

	operation 6596101 "setAutoWhiteBalanceLock"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "toggle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Sets the auto-white balance lock state. Applications should check
{@link #isAutoWhiteBalanceLockSupported} before using this
method.</p>

<p>If set to true, the camera auto-white balance routine will
immediately pause until the lock is set to false.</p>

<p>If auto-white balance is already locked, setting this to true
again has no effect (the driver will not recalculate white balance
values).</p>

<p>Stopping preview with {@link #stopPreview()}, or triggering still
image capture with {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)}, will not change the
the lock.</p>

<p> Changing the white balance mode with {@link #setWhiteBalance}
will release the auto-white balance lock if it is set.</p>

<p>Exposure compensation, AE lock, and AWB lock can be used to
capture an exposure-bracketed burst of images, for example.
Auto-white balance state, including the lock state, will not be
maintained after camera {@link #release()} is called.  Locking
auto-white balance after {@link #open()} but before the first call to
{@link #startPreview()} will not allow the auto-white balance routine
to run at all, and may result in severely incorrect color in captured
images.</p>

@param toggle new state of the auto-white balance lock. True means
       that auto-white balance is locked, false means that the
       auto-white balance routine is free to run normally.

@see #getAutoWhiteBalanceLock()
@see #setWhiteBalance(String)
"
	end

	operation 6596229 "getAutoWhiteBalanceLock"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the state of the auto-white balance lock. Applications should
check {@link #isAutoWhiteBalanceLockSupported} before using this
method. See {@link #setAutoWhiteBalanceLock} for details about the
lock.

@return State of the auto-white balance lock. Returns true if
        auto-white balance is currently locked, and false
        otherwise.

@see #setAutoWhiteBalanceLock(boolean)

"
	end

	operation 6596357 "isAutoWhiteBalanceLockSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns true if auto-white balance locking is supported. Applications
should call this before trying to lock auto-white balance. See
{@link #setAutoWhiteBalanceLock} for details about the lock.

@return true if auto-white balance lock is supported.
@see #setAutoWhiteBalanceLock(boolean)

"
	end

	operation 6596485 "getZoom"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets current zoom value. This also works when smooth zoom is in
progress. Applications should check {@link #isZoomSupported} before
using this method.

@return the current zoom value. The range is 0 to {@link
        #getMaxZoom}. 0 means the camera is not zoomed.
"
	end

	operation 6596613 "setZoom"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets current zoom value. If the camera is zoomed (value > 0), the
actual picture size may be smaller than picture size setting.
Applications can check the actual picture size after picture is
returned from {@link PictureCallback}. The preview size remains the
same in zoom. Applications should check {@link #isZoomSupported}
before using this method.

@param value zoom value. The valid range is 0 to {@link #getMaxZoom}.
"
	end

	operation 6596741 "isZoomSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns true if zoom is supported. Applications should call this
before using other zoom methods.

@return true if zoom is supported.
"
	end

	operation 6596869 "getMaxZoom"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the maximum zoom value allowed for snapshot. This is the maximum
value that applications can set to {@link #setZoom(int)}.
Applications should call {@link #isZoomSupported} before using this
method. This value may change in different preview size. Applications
should call this again after setting preview size.

@return the maximum zoom value supported by the camera.
"
	end

	operation 6596997 "getZoomRatios"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the zoom ratios of all zoom values. Applications should check
{@link #isZoomSupported} before using this method.

@return the zoom ratios in 1/100 increments. Ex: a zoom of 3.2x is
        returned as 320. The number of elements is {@link
        #getMaxZoom} + 1. The list is sorted from small to large. The
        first element is always 100. The last element is the zoom
        ratio of the maximum zoom value.
"
	end

	operation 6597125 "isSmoothZoomSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns true if smooth zoom is supported. Applications should call
this before using other smooth zoom methods.

@return true if smooth zoom is supported.
"
	end

	operation 6597253 "getFocusDistances"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "output" explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Gets the distances from the camera to where an object appears to be
in focus. The object is sharpest at the optimal focus distance. The
depth of field is the far focus distance minus near focus distance.</p>

<p>Focus distances may change after calling {@link
#autoFocus(AutoFocusCallback)}, {@link #cancelAutoFocus}, or {@link
#startPreview()}. Applications can call {@link #getParameters()}
and this method anytime to get the latest focus distances. If the
focus mode is FOCUS_MODE_CONTINUOUS_VIDEO, focus distances may change
from time to time.</p>

<p>This method is intended to estimate the distance between the camera
and the subject. After autofocus, the subject distance may be within
near and far focus distance. However, the precision depends on the
camera hardware, autofocus algorithm, the focus area, and the scene.
The error can be large and it should be only used as a reference.</p>

<p>Far focus distance >= optimal focus distance >= near focus distance.
If the focus distance is infinity, the value will be
{@code Float.POSITIVE_INFINITY}.</p>

@param output focus distances in meters. output must be a float
       array with three elements. Near focus distance, optimal focus
       distance, and far focus distance will be filled in the array.
@see #FOCUS_DISTANCE_NEAR_INDEX
@see #FOCUS_DISTANCE_OPTIMAL_INDEX
@see #FOCUS_DISTANCE_FAR_INDEX
"
	end

	operation 6597381 "getMaxNumFocusAreas"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the maximum number of focus areas supported. This is the maximum
length of the list in {@link #setFocusAreas(List)} and
{@link #getFocusAreas()}.

@return the maximum number of focus areas supported by the camera.
@see #getFocusAreas()
"
	end

	operation 6597509 "getFocusAreas"
	  public return_type class_ref 1178117 // Area
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Gets the current focus areas. Camera driver uses the areas to decide
focus.</p>

<p>Before using this API or {@link #setFocusAreas(List)}, apps should
call {@link #getMaxNumFocusAreas()} to know the maximum number of
focus areas first. If the value is 0, focus area is not supported.</p>

<p>Each focus area is a rectangle with specified weight. The direction
is relative to the sensor orientation, that is, what the sensor sees.
The direction is not affected by the rotation or mirroring of
{@link #setDisplayOrientation(int)}. Coordinates of the rectangle
range from -1000 to 1000. (-1000, -1000) is the upper left point.
(1000, 1000) is the lower right point. The width and height of focus
areas cannot be 0 or negative.</p>

<p>The weight must range from 1 to 1000. The weight should be
interpreted as a per-pixel weight - all pixels in the area have the
specified weight. This means a small area with the same weight as a
larger area will have less influence on the focusing than the larger
area. Focus areas can partially overlap and the driver will add the
weights in the overlap region.</p>

<p>A special case of a {@code null} focus area list means the driver is
free to select focus targets as it wants. For example, the driver may
use more signals to select focus areas and change them
dynamically. Apps can set the focus area list to {@code null} if they
want the driver to completely control focusing.</p>

<p>Focus areas are relative to the current field of view
({@link #getZoom()}). No matter what the zoom level is, (-1000,-1000)
represents the top of the currently visible camera frame. The focus
area cannot be set to be outside the current field of view, even
when using zoom.</p>

<p>Focus area only has effect if the current focus mode is
{@link #FOCUS_MODE_AUTO}, {@link #FOCUS_MODE_MACRO},
{@link #FOCUS_MODE_CONTINUOUS_VIDEO}, or
{@link #FOCUS_MODE_CONTINUOUS_PICTURE}.</p>

@return a list of current focus areas
"
	end

	operation 6597637 "setFocusAreas"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "focusAreas" explicit_type "List<Area>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets focus areas. See {@link #getFocusAreas()} for documentation.

@param focusAreas the focus areas
@see #getFocusAreas()
"
	end

	operation 6597765 "getMaxNumMeteringAreas"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the maximum number of metering areas supported. This is the
maximum length of the list in {@link #setMeteringAreas(List)} and
{@link #getMeteringAreas()}.

@return the maximum number of metering areas supported by the camera.
@see #getMeteringAreas()
"
	end

	operation 6597893 "getMeteringAreas"
	  public return_type class_ref 1178117 // Area
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Gets the current metering areas. Camera driver uses these areas to
decide exposure.</p>

<p>Before using this API or {@link #setMeteringAreas(List)}, apps should
call {@link #getMaxNumMeteringAreas()} to know the maximum number of
metering areas first. If the value is 0, metering area is not
supported.</p>

<p>Each metering area is a rectangle with specified weight. The
direction is relative to the sensor orientation, that is, what the
sensor sees. The direction is not affected by the rotation or
mirroring of {@link #setDisplayOrientation(int)}. Coordinates of the
rectangle range from -1000 to 1000. (-1000, -1000) is the upper left
point. (1000, 1000) is the lower right point. The width and height of
metering areas cannot be 0 or negative.</p>

<p>The weight must range from 1 to 1000, and represents a weight for
every pixel in the area. This means that a large metering area with
the same weight as a smaller area will have more effect in the
metering result.  Metering areas can partially overlap and the driver
will add the weights in the overlap region.</p>

<p>A special case of a {@code null} metering area list means the driver
is free to meter as it chooses. For example, the driver may use more
signals to select metering areas and change them dynamically. Apps
can set the metering area list to {@code null} if they want the
driver to completely control metering.</p>

<p>Metering areas are relative to the current field of view
({@link #getZoom()}). No matter what the zoom level is, (-1000,-1000)
represents the top of the currently visible camera frame. The
metering area cannot be set to be outside the current field of view,
even when using zoom.</p>

<p>No matter what metering areas are, the final exposure are compensated
by {@link #setExposureCompensation(int)}.</p>

@return a list of current metering areas
"
	end

	operation 6598021 "setMeteringAreas"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "meteringAreas" explicit_type "List<Area>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets metering areas. See {@link #getMeteringAreas()} for
documentation.

@param meteringAreas the metering areas
@see #getMeteringAreas()
"
	end

	operation 6598149 "getMaxNumDetectedFaces"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Gets the maximum number of detected faces supported. This is the
maximum length of the list returned from {@link FaceDetectionListener}.
If the return value is 0, face detection of the specified type is not
supported.

@return the maximum number of detected face supported by the camera.
@see #startFaceDetection()
"
	end

	operation 6598277 "setRecordingHint"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "hint" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets recording mode hint. This tells the camera that the intent of
the application is to record videos {@link
android.media.MediaRecorder#start()}, not to take still pictures
{@link #takePicture(Camera.ShutterCallback, Camera.PictureCallback,
Camera.PictureCallback, Camera.PictureCallback)}. Using this hint can
allow MediaRecorder.start() to start faster or with fewer glitches on
output. This should be called before starting preview for the best
result, but can be changed while the preview is active. The default
value is false.

The app can still call takePicture() when the hint is true or call
MediaRecorder.start() when the hint is false. But the performance may
be worse.

@param hint true if the apps intend to record videos using
            {@link android.media.MediaRecorder}.
"
	end

	operation 6598405 "isVideoSnapshotSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Returns true if video snapshot is supported. That is, applications
can call {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback,
Camera.PictureCallback)} during recording. Applications do not need
to call {@link #startPreview()} after taking a picture. The preview
will be still active. Other than that, taking a picture during
recording is identical to taking a picture normally. All settings and
methods related to takePicture work identically. Ex:
{@link #getPictureSize()}, {@link #getSupportedPictureSizes()},
{@link #setJpegQuality(int)}, {@link #setRotation(int)}, and etc. The
picture will have an EXIF header. {@link #FLASH_MODE_AUTO} and
{@link #FLASH_MODE_ON} also still work, but the video will record the
flash.</p>

<p>Applications can set shutter callback as null to avoid the shutter
sound. It is also recommended to set raw picture and post view
callbacks to null to avoid the interrupt of preview display.</p>

<p>Field-of-view of the recorded video may be different from that of the
captured pictures. The maximum size of a video snapshot may be
smaller than that for regular still captures. If the current picture
size is set higher than can be supported by video snapshot, the
picture will be captured at the maximum supported size instead.</p>

@return true if video snapshot is supported.
"
	end

	operation 6598533 "setVideoStabilization"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "toggle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "<p>Enables and disables video stabilization. Use
{@link #isVideoStabilizationSupported} to determine if calling this
method is valid.</p>

<p>Video stabilization reduces the shaking due to the motion of the
camera in both the preview stream and in recorded videos, including
data received from the preview callback. It does not reduce motion
blur in images captured with
{@link Camera#takePicture takePicture}.</p>

<p>Video stabilization can be enabled and disabled while preview or
recording is active, but toggling it may cause a jump in the video
stream that may be undesirable in a recorded video.</p>

@param toggle Set to true to enable video stabilization, and false to
disable video stabilization.
@see #isVideoStabilizationSupported()
@see #getVideoStabilization()
"
	end

	operation 6598661 "getVideoStabilization"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Get the current state of video stabilization. See
{@link #setVideoStabilization} for details of video stabilization.

@return true if video stabilization is enabled
@see #isVideoStabilizationSupported()
@see #setVideoStabilization(boolean)
"
	end

	operation 6598789 "isVideoStabilizationSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Returns true if video stabilization is supported. See
{@link #setVideoStabilization} for details of video stabilization.

@return true if video stabilization is supported
@see #setVideoStabilization(boolean)
@see #getVideoStabilization()
"
	end

	operation 6598917 "split"
	  private explicit_return_type "ArrayList<String>"
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Splits a comma delimited string to an ArrayList of String.
 Return null if the passing string is null or the size is 0."
	end

	operation 6599045 "splitInt"
	  private explicit_return_type "ArrayList<Integer>"
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Splits a comma delimited string to an ArrayList of Integer.
 Return null if the passing string is null or the size is 0."
	end

	operation 6599173 "splitInt"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "str" explicit_type "String"
	    param inout name "output" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6599301 "splitFloat"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "str" explicit_type "String"
	    param inout name "output" explicit_type "float"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Splits a comma delimited string to an ArrayList of Float."
	end

	operation 6599429 "getFloat"
	  private explicit_return_type "float"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "defaultValue" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Returns the value of a float parameter."
	end

	operation 6599557 "getInt"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "defaultValue" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Returns the value of a integer parameter."
	end

	operation 6599685 "splitSize"
	  private return_type class_ref 1177989 // Size
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Splits a comma delimited string to an ArrayList of Size.
 Return null if the passing string is null or the size is 0."
	end

	operation 6599813 "strToSize"
	  private return_type class_ref 1177989 // Size
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Parses a string (ex: \"480x320\") to Size object.
 Return null if the passing string is null."
	end

	operation 6599941 "splitRange"
	  private explicit_return_type "ArrayList<int[]>"
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Splits a comma delimited string to an ArrayList of int array.
 Example string: \"(10000,26623),(10000,30000)\". Return null if the
 passing string is null or the size is 0."
	end

	operation 6600069 "splitArea"
	  private return_type class_ref 1178117 // Area
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Splits a comma delimited string to an ArrayList of Area objects.
 Example string: \"(-10,-10,0,0,300),(0,0,10,10,700)\". Return null if
 the passing string is null or the size is 0 or (0,0,0,0,0)."
	end

	operation 6600197 "same"
	  private explicit_return_type "boolean"
	  nparams 2
	    param in name "s1" explicit_type "String"
	    param in name "s2" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      operation 6584965 "getParameters"
	public return_type class_ref 1177861 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the current settings for this Camera service.
If modifications are made to the returned Parameters, they must be passed
to {@link #setParameters(Camera.Parameters)} to take effect.

@see #setParameters(Camera.Parameters)
"
      end

      operation 6585093 "getEmptyParameters"
	class_operation public return_type class_ref 1177861 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns an empty {@link Parameters} for testing purpose.

@return a Parameter object.

@hide
"
      end

      operation 6585221 "getParametersCopy"
	class_operation public return_type class_ref 1177861 // Parameters
	nparams 1
	  param inout name "parameters" type class_ref 1177861 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns a copied {@link Parameters}; for shim use only.

@param parameters a non-{@code null} parameters
@return a Parameter object, with all the parameters copied from {@code parameters}.

@throws NullPointerException if {@code parameters} was {@code null}
@hide
"
      end

      class 1177989 "Size"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6585349 "Size"
	  public explicit_return_type ""
	  nparams 2
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment "Sets the dimensions for pictures.

@param w the photo width (pixels)
@param h the photo height (pixels)
"
	end

	operation 6585477 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Compares {@code obj} to this size.

@param obj the object to compare this size with.
@return {@code true} if the width and height of {@code obj} is the
        same as those of this size. {@code false} otherwise.
"
	end

	operation 6585605 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	attribute 4242437 "width"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " width of the picture 
"
	end

	attribute 4242565 "height"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " height of the picture 
"
	end
      end

      class 1178117 "Area"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6585733 "Area"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "rect" explicit_type "Rect"
	    param in name "weight" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment "Create an area with specified rectangle and weight.

@param rect the bounds of the area.
@param weight the weight of the area.
"
	end

	operation 6585861 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Compares {@code obj} to this area.

@param obj the object to compare this area with.
@return {@code true} if the rectangle and weight of {@code obj} is
        the same as those of this area. {@code false} otherwise.
"
	end

	attribute 4242693 "rect"
	  public explicit_type "Rect"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Bounds of the area. (-1000, -1000) represents the top-left of the
camera field of view, and (1000, 1000) represents the bottom-right of
the field of view. Setting bounds outside that range is not
allowed. Bounds with zero or negative width or height are not
allowed.

@see Parameters#getFocusAreas()
@see Parameters#getMeteringAreas()

"
	end

	attribute 4242821 "weight"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment "Weight of the area. The weight must range from 1 to 1000, and
represents a weight for every pixel in the area. This means that a
large metering area with the same weight as a smaller area will have
more effect in the metering result.  Metering areas can overlap and
the driver will add the weights in the overlap region.

@see Parameters#getFocusAreas()
@see Parameters#getMeteringAreas()

"
	end
      end
    end

    class 1178245 "CameraInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Information about a camera

@hide
"
      classrelation 1762437 // <realization>
	relation 1762437 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1762437 // <realization>
	  b parent class_ref 966917 // Parcelable
      end

      classrelation 1762565 // info (<unidirectional association>)
	relation 1762565 --->
	  a role_name "info" init_value " new Camera.CameraInfo()" public
	    comment " Can't parcel nested classes, so make this a top level class that composes
 CameraInfo.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1762565 // info (<unidirectional association>)
	  b parent class_ref 1177605 // CameraInfo
      end

      operation 6600325 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6600453 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 967301 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6600581 "readFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 967301 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      classrelation 1762693 // CREATOR (<unidirectional association>)
	relation 1762693 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<CameraInfo>() {
        @Override
        public CameraInfo createFromParcel(Parcel in) {
            CameraInfo info = new CameraInfo();
            info.readFromParcel(in);

            return info;
        }

        @Override
        public CameraInfo[] newArray(int size) {
            return new CameraInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CameraInfo> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1762693 // CREATOR (<unidirectional association>)
	  b parent class_ref 967429 // Creator
      end
    end

    class 1178373 "CameraStatus"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Status information about a camera.

Contains the name of the camera device, and its current status, one of the
ICameraServiceListener.STATUS_ values.

@hide
"
      classrelation 1762821 // <realization>
	relation 1762821 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1762821 // <realization>
	  b parent class_ref 966917 // Parcelable
      end

      attribute 4258053 "cameraId"
	public explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4258181 "status"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 6600709 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6600837 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 967301 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6600965 "readFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 967301 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      classrelation 1762949 // CREATOR (<unidirectional association>)
	relation 1762949 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<CameraStatus>() {
        @Override
        public CameraStatus createFromParcel(Parcel in) {
            CameraStatus status = new CameraStatus();
            status.readFromParcel(in);

            return status;
        }

        @Override
        public CameraStatus[] newArray(int size) {
            return new CameraStatus[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CameraStatus> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1762949 // CREATOR (<unidirectional association>)
	  b parent class_ref 967429 // Creator
      end
    end

    class 1178501 "ConsumerIrManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemService(Context.CONSUMER_IR_SERVICE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class that operates consumer infrared on the device.
"
      attribute 4258309 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ConsumerIr\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4258437 "mPackageName"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4258565 "mService"
	const_attribute private explicit_type "IConsumerIrService"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 6601093 "ConsumerIrManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 956933 // Context
	nexceptions 1
	  exception class_ref 1078405 // ServiceNotFoundException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide to prevent subclassing from outside of the framework
"
      end

      operation 6601221 "hasIrEmitter"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Check whether the device has an infrared emitter.

@return true if the device has an infrared emitter, else false.
"
      end

      operation 6601349 "transmit"
	public explicit_return_type "void"
	nparams 2
	  param in name "carrierFrequency" explicit_type "int"
	  param inout name "pattern" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Transmit an infrared pattern
<p>
This method is synchronous; when it returns the pattern has
been transmitted. Only patterns shorter than 2 seconds will
be transmitted.
</p>

@param carrierFrequency The IR carrier frequency in Hertz.
@param pattern The alternating on/off pattern in microseconds to transmit.
"
      end

      class 1178629 "CarrierFrequencyRange"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4258693 "mMinFrequency"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4258821 "mMaxFrequency"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6601477 "CarrierFrequencyRange"
	  public explicit_return_type ""
	  nparams 2
	    param in name "min" explicit_type "int"
	    param in name "max" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment "Create a segment of a carrier frequency range.

@param min The minimum transmittable frequency in this range segment.
@param max The maximum transmittable frequency in this range segment.
"
	end

	operation 6601605 "getMinFrequency"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Get the minimum (inclusive) frequency in this range segment.
"
	end

	operation 6601733 "getMaxFrequency"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Get the maximum (inclusive) frequency in this range segment.
"
	end
      end

      operation 6601861 "getCarrierFrequencies"
	public return_type class_ref 1178629 // CarrierFrequencyRange
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Query the infrared transmitter's supported carrier frequencies

@return an array of
{@link android.hardware.ConsumerIrManager.CarrierFrequencyRange}
objects representing the ranges that the transmitter can support, or
null if there was an error communicating with the Consumer IR Service.
"
      end
    end

    class 1178757 "GeomagneticField"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Estimates magnetic field at a given point on
Earth, and in particular, to compute the magnetic declination from true
north.

<p>This uses the World Magnetic Model produced by the United States National
Geospatial-Intelligence Agency.  More details about the model can be found at
<a href=\"http://www.ngdc.noaa.gov/geomag/WMM/DoDWMM.shtml\">http://www.ngdc.noaa.gov/geomag/WMM/DoDWMM.shtml</a>.
This class currently uses WMM-2010 which is valid until 2015, but should
produce acceptable results for several years after that. Future versions of
Android may use a newer version of the model.
"
      attribute 4258949 "mX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " The magnetic field at a given point, in nonoteslas in geodetic
 coordinates.
"
      end

      attribute 4259077 "mY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4259205 "mZ"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4259333 "mGcLatitudeRad"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Geocentric coordinates -- set by computeGeocentricCoordinates.
"
      end

      attribute 4259461 "mGcLongitudeRad"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4259589 "mGcRadiusKm"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4259717 "EARTH_SEMI_MAJOR_AXIS_KM"
	class_attribute const_attribute private explicit_type "float"
	init_value " 6378.137f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Constants from WGS84 (the coordinate system used by GPS)
"
      end

      attribute 4259845 "EARTH_SEMI_MINOR_AXIS_KM"
	class_attribute const_attribute private explicit_type "float"
	init_value " 6356.7523142f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4259973 "EARTH_REFERENCE_RADIUS_KM"
	class_attribute const_attribute private explicit_type "float"
	init_value " 6371.2f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4260101 "G_COEFF"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { -29496.6f, -1586.3f },
        { -2396.6f, 3026.1f, 1668.6f },
        { 1340.1f, -2326.2f, 1231.9f, 634.0f },
        { 912.6f, 808.9f, 166.7f, -357.1f, 89.4f },
        { -230.9f, 357.2f, 200.3f, -141.1f, -163.0f, -7.8f },
        { 72.8f, 68.6f, 76.0f, -141.4f, -22.8f, 13.2f, -77.9f },
        { 80.5f, -75.1f, -4.7f, 45.3f, 13.9f, 10.4f, 1.7f, 4.9f },
        { 24.4f, 8.1f, -14.5f, -5.6f, -19.3f, 11.5f, 10.9f, -14.1f, -3.7f },
        { 5.4f, 9.4f, 3.4f, -5.2f, 3.1f, -12.4f, -0.7f, 8.4f, -8.5f, -10.1f },
        { -2.0f, -6.3f, 0.9f, -1.1f, -0.2f, 2.5f, -0.3f, 2.2f, 3.1f, -1.0f, -2.8f },
        { 3.0f, -1.5f, -2.1f, 1.7f, -0.5f, 0.5f, -0.8f, 0.4f, 1.8f, 0.1f, 0.7f, 3.8f },
        { -2.2f, -0.2f, 0.3f, 1.0f, -0.6f, 0.9f, -0.1f, 0.5f, -0.4f, -0.4f, 0.2f, -0.8f, 0.0f } }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " These coefficients and the formulae used below are from:
 NOAA Technical Report: The US/UK World Magnetic Model for 2010-2015
"
      end

      attribute 4260229 "H_COEFF"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { 0.0f, 4944.4f },
        { 0.0f, -2707.7f, -576.1f },
        { 0.0f, -160.2f, 251.9f, -536.6f },
        { 0.0f, 286.4f, -211.2f, 164.3f, -309.1f },
        { 0.0f, 44.6f, 188.9f, -118.2f, 0.0f, 100.9f },
        { 0.0f, -20.8f, 44.1f, 61.5f, -66.3f, 3.1f, 55.0f },
        { 0.0f, -57.9f, -21.1f, 6.5f, 24.9f, 7.0f, -27.7f, -3.3f },
        { 0.0f, 11.0f, -20.0f, 11.9f, -17.4f, 16.7f, 7.0f, -10.8f, 1.7f },
        { 0.0f, -20.5f, 11.5f, 12.8f, -7.2f, -7.4f, 8.0f, 2.1f, -6.1f, 7.0f },
        { 0.0f, 2.8f, -0.1f, 4.7f, 4.4f, -7.2f, -1.0f, -3.9f, -2.0f, -2.0f, -8.3f },
        { 0.0f, 0.2f, 1.7f, -0.6f, -1.8f, 0.9f, -0.4f, -2.5f, -1.3f, -2.1f, -1.9f, -1.8f },
        { 0.0f, -0.9f, 0.3f, 2.1f, -2.5f, 0.5f, 0.6f, 0.0f, 0.1f, 0.3f, -0.9f, -0.2f, 0.9f } }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4260357 "DELTA_G"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { 11.6f, 16.5f },
        { -12.1f, -4.4f, 1.9f },
        { 0.4f, -4.1f, -2.9f, -7.7f },
        { -1.8f, 2.3f, -8.7f, 4.6f, -2.1f },
        { -1.0f, 0.6f, -1.8f, -1.0f, 0.9f, 1.0f },
        { -0.2f, -0.2f, -0.1f, 2.0f, -1.7f, -0.3f, 1.7f },
        { 0.1f, -0.1f, -0.6f, 1.3f, 0.4f, 0.3f, -0.7f, 0.6f },
        { -0.1f, 0.1f, -0.6f, 0.2f, -0.2f, 0.3f, 0.3f, -0.6f, 0.2f },
        { 0.0f, -0.1f, 0.0f, 0.3f, -0.4f, -0.3f, 0.1f, -0.1f, -0.4f, -0.2f },
        { 0.0f, 0.0f, -0.1f, 0.2f, 0.0f, -0.1f, -0.2f, 0.0f, -0.1f, -0.2f, -0.2f },
        { 0.0f, 0.0f, 0.0f, 0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -0.1f, 0.0f },
        { 0.0f, 0.0f, 0.1f, 0.1f, -0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -0.1f, 0.1f } }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4260485 "DELTA_H"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { 0.0f, -25.9f },
        { 0.0f, -22.5f, -11.8f },
        { 0.0f, 7.3f, -3.9f, -2.6f },
        { 0.0f, 1.1f, 2.7f, 3.9f, -0.8f },
        { 0.0f, 0.4f, 1.8f, 1.2f, 4.0f, -0.6f },
        { 0.0f, -0.2f, -2.1f, -0.4f, -0.6f, 0.5f, 0.9f },
        { 0.0f, 0.7f, 0.3f, -0.1f, -0.1f, -0.8f, -0.3f, 0.3f },
        { 0.0f, -0.1f, 0.2f, 0.4f, 0.4f, 0.1f, -0.1f, 0.4f, 0.3f },
        { 0.0f, 0.0f, -0.2f, 0.0f, -0.1f, 0.1f, 0.0f, -0.2f, 0.3f, 0.2f },
        { 0.0f, 0.1f, -0.1f, 0.0f, -0.1f, -0.1f, 0.0f, -0.1f, -0.2f, 0.0f, -0.1f },
        { 0.0f, 0.0f, 0.1f, 0.0f, 0.1f, 0.0f, 0.1f, 0.0f, -0.1f, -0.1f, 0.0f, -0.1f },
        { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f } }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4260613 "BASE_TIME"
	class_attribute const_attribute private explicit_type "long"
	init_value "
        new GregorianCalendar(2010, 1, 1).getTimeInMillis()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4260741 "SCHMIDT_QUASI_NORM_FACTORS"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value "
        computeSchmidtQuasiNormFactors(G_COEFF.length)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " The ratio between the Gauss-normalized associated Legendre functions and
 the Schmid quasi-normalized ones. Compute these once staticly since they
 don't depend on input variables at all.
"
      end

      operation 6601989 "GeomagneticField"
	public explicit_return_type ""
	nparams 4
	  param in name "gdLatitudeDeg" explicit_type "float"
	  param in name "gdLongitudeDeg" explicit_type "float"
	  param in name "altitudeMeters" explicit_type "float"
	  param in name "timeMillis" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Estimate the magnetic field at a given point and time.

@param gdLatitudeDeg
           Latitude in WGS84 geodetic coordinates -- positive is east.
@param gdLongitudeDeg
           Longitude in WGS84 geodetic coordinates -- positive is north.
@param altitudeMeters
           Altitude in WGS84 geodetic coordinates, in meters.
@param timeMillis
           Time at which to evaluate the declination, in milliseconds
           since January 1, 1970. (approximate is fine -- the declination
           changes very slowly).
"
      end

      operation 6602117 "getX"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The X (northward) component of the magnetic field in nanoteslas.
"
      end

      operation 6602245 "getY"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The Y (eastward) component of the magnetic field in nanoteslas.
"
      end

      operation 6602373 "getZ"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The Z (downward) component of the magnetic field in nanoteslas.
"
      end

      operation 6602501 "getDeclination"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The declination of the horizontal component of the magnetic
        field from true north, in degrees (i.e. positive means the
        magnetic field is rotated east that much from true north).
"
      end

      operation 6602629 "getInclination"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The inclination of the magnetic field in degrees -- positive
        means the magnetic field is rotated downwards.
"
      end

      operation 6602757 "getHorizontalStrength"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return  Horizontal component of the field strength in nonoteslas.
"
      end

      operation 6602885 "getFieldStrength"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return  Total field strength in nanoteslas.
"
      end

      operation 6603013 "computeGeocentricCoordinates"
	private explicit_return_type "void"
	nparams 3
	  param in name "gdLatitudeDeg" explicit_type "float"
	  param in name "gdLongitudeDeg" explicit_type "float"
	  param in name "altitudeMeters" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@param gdLatitudeDeg
           Latitude in WGS84 geodetic coordinates.
@param gdLongitudeDeg
           Longitude in WGS84 geodetic coordinates.
@param altitudeMeters
           Altitude above sea level in WGS84 geodetic coordinates.
@return Geocentric latitude (i.e. angle between closest point on the
        equator and this point, at the center of the earth.
"
      end

      class 1178885 "LegendreTable"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4260869 "mP"
	  const_attribute public explicit_type "float"
	  multiplicity "[][]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " These are the Gauss-normalized associated Legendre functions -- that
 is, they are normal Legendre functions multiplied by
 (n-m)!/(2n-1)!! (where (2n-1)!! = 1*3*5*...*2n-1)
"
	end

	attribute 4260997 "mPDeriv"
	  const_attribute public explicit_type "float"
	  multiplicity "[][]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	  comment " Derivative of mP, with respect to theta.
"
	end

	operation 6603141 "LegendreTable"
	  public explicit_return_type ""
	  nparams 2
	    param in name "maxN" explicit_type "int"
	    param in name "thetaRad" explicit_type "float"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment "@param maxN
           The maximum n- and m-values to support
@param thetaRad
           Returned functions will be Gauss-normalized
           P_n^m(cos(thetaRad)), with thetaRad in radians.
"
	end
      end

      operation 6603269 "computeSchmidtQuasiNormFactors"
	class_operation private explicit_return_type "float"
	nparams 1
	  param in name "maxN" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Compute the ration between the Gauss-normalized associated Legendre
functions and the Schmidt quasi-normalized version. This is equivalent to
sqrt((m==0?1:2)*(n-m)!/(n+m!))*(2n-1)!!/(n-m)!
"
      end
    end

    class 1179013 "HardwareBuffer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "HardwareBuffer wraps a native <code>AHardwareBuffer</code> object, which is a low-level object
representing a memory buffer accessible by various hardware units. HardwareBuffer allows sharing
buffers across different application processes. In particular, HardwareBuffers may be mappable
to memory accessibly to various hardware systems, such as the GPU, a sensor or context hub, or
other auxiliary processing units.

For more information, see the NDK documentation for <code>AHardwareBuffer</code>.
"
      classrelation 1763077 // <realization>
	relation 1763077 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1763077 // <realization>
	  b parent class_ref 966917 // Parcelable
      end

      classrelation 1763205 // <realization>
	relation 1763205 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1763205 // <realization>
	  b parent class_ref 1117317 // AutoCloseable
      end

      class 1179141 "Format"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef({RGBA_8888, RGBA_FP16, RGBA_1010102, RGBX_8888, RGB_888, RGB_565, BLOB})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 4261125 "RGBA_8888"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: 8 bits each red, green, blue, alpha 
"
      end

      attribute 4261253 "RGBX_8888"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: 8 bits each red, green, blue, alpha, alpha is always 0xFF 
"
      end

      attribute 4261381 "RGB_888"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: 8 bits each red, green, blue, no alpha 
"
      end

      attribute 4261509 "RGB_565"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: 5 bits each red and blue, 6 bits green, no alpha 
"
      end

      attribute 4261637 "RGBA_FP16"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x16"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: 16 bits each red, green, blue, alpha 
"
      end

      attribute 4261765 "RGBA_1010102"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2b"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: 10 bits each red, green, blue, 2 bits alpha 
"
      end

      attribute 4261893 "BLOB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x21"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Format: opaque format used for raw data transfer; must have a height of 1 
"
      end

      attribute 4262021 "mNativeObject"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Note: do not rename, this field is used by native code
"
      end

      attribute 4262149 "mCleaner"
	private explicit_type "Runnable"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Invoked on destruction
"
      end

      attribute 4262277 "mCloseGuard"
	const_attribute private explicit_type "CloseGuard"
	init_value " CloseGuard.get()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1179269 "Usage"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag = true, value = {USAGE_CPU_READ_RARELY, USAGE_CPU_READ_OFTEN,
            USAGE_CPU_WRITE_RARELY, USAGE_CPU_WRITE_OFTEN, USAGE_GPU_SAMPLED_IMAGE,
            USAGE_GPU_COLOR_OUTPUT, USAGE_PROTECTED_CONTENT, USAGE_VIDEO_ENCODE,
            USAGE_GPU_DATA_BUFFER, USAGE_SENSOR_DIRECT_DATA})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 4262405 "USAGE_CPU_READ_RARELY"
	class_attribute const_attribute public explicit_type "long"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will sometimes be read by the CPU 
"
      end

      attribute 4262533 "USAGE_CPU_READ_OFTEN"
	class_attribute const_attribute public explicit_type "long"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will often be read by the CPU 
"
      end

      attribute 4262661 "USAGE_CPU_WRITE_RARELY"
	class_attribute const_attribute public explicit_type "long"
	init_value " 2 << 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will sometimes be written to by the CPU 
"
      end

      attribute 4262789 "USAGE_CPU_WRITE_OFTEN"
	class_attribute const_attribute public explicit_type "long"
	init_value " 3 << 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will often be written to by the CPU 
"
      end

      attribute 4262917 "USAGE_GPU_SAMPLED_IMAGE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1 << 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will be read from by the GPU 
"
      end

      attribute 4263045 "USAGE_GPU_COLOR_OUTPUT"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1 << 9"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will be written to by the GPU 
"
      end

      attribute 4263173 "USAGE_PROTECTED_CONTENT"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1 << 14"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer must not be used outside of a protected hardware path 
"
      end

      attribute 4263301 "USAGE_VIDEO_ENCODE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1 << 16"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will be read by a hardware video encoder 
"
      end

      attribute 4263429 "USAGE_SENSOR_DIRECT_DATA"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1 << 23"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will be used for sensor direct data 
"
      end

      attribute 4263557 "USAGE_GPU_DATA_BUFFER"
	class_attribute const_attribute public explicit_type "long"
	init_value " 1 << 24"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Usage: The buffer will be used as a shader storage or uniform buffer object 
"
      end

      attribute 4263685 "NATIVE_HARDWARE_BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "long"
	init_value " 232"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " The approximate size of a native AHardwareBuffer object.
"
      end

      operation 6603397 "create"
	class_operation public return_type class_ref 1179013 // HardwareBuffer
	nparams 5
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "layers" explicit_type "int"
	  param in name "usage" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, @Format ${t2} ${p2}, ${t3} ${p3}, @Usage ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@NonNull
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Creates a new <code>HardwareBuffer</code> instance.

<p>Calling this method will throw an <code>IllegalStateException</code> if
format is not a supported Format type.</p>

@param width The width in pixels of the buffer
@param height The height in pixels of the buffer
@param format The format of each pixel, one of {@link #RGBA_8888}, {@link #RGBA_FP16},
{@link #RGBX_8888}, {@link #RGB_565}, {@link #RGB_888}, {@link #RGBA_1010102}, {@link #BLOB}
@param layers The number of layers in the buffer
@param usage Flags describing how the buffer will be used, one of
    {@link #USAGE_CPU_READ_RARELY}, {@link #USAGE_CPU_READ_OFTEN},
    {@link #USAGE_CPU_WRITE_RARELY}, {@link #USAGE_CPU_WRITE_OFTEN},
    {@link #USAGE_GPU_SAMPLED_IMAGE}, {@link #USAGE_GPU_COLOR_OUTPUT},
    {@link #USAGE_GPU_DATA_BUFFER}, {@link #USAGE_PROTECTED_CONTENT},
    {@link #USAGE_SENSOR_DIRECT_DATA}, {@link #USAGE_VIDEO_ENCODE}
@return A <code>HardwareBuffer</code> instance if successful, or throws an
    IllegalArgumentException if the dimensions passed are invalid (either zero, negative, or
    too large to allocate), if the format is not supported, if the requested number of layers
    is less than one or not supported, or if the passed usage flags are not a supported set.
"
      end

      operation 6603525 "HardwareBuffer"
	private explicit_return_type ""
	nparams 1
	  param in name "nativeObject" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "Private use only. See {@link #create(int, int, int, int, long)}. May also be
called from JNI using an already allocated native <code>HardwareBuffer</code>.
"
      end

      operation 6603653 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6603781 "getWidth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the width of this buffer in pixels.
"
      end

      operation 6603909 "getHeight"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the height of this buffer in pixels.
"
      end

      operation 6604037 "getFormat"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Format
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the format of this buffer, one of {@link #RGBA_8888}, {@link #RGBA_FP16},
{@link #RGBX_8888}, {@link #RGB_565}, {@link #RGB_888}, {@link #RGBA_1010102}, {@link #BLOB}.
"
      end

      operation 6604165 "getLayers"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the number of layers in this buffer.
"
      end

      operation 6604293 "getUsage"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the usage flags of the usage hints set on this buffer.
"
      end

      operation 6604421 "destroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @removed replaced by {@link #close()} "
      end

      operation 6604549 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @removed replaced by {@link #isClosed()} "
      end

      operation 6604677 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Destroys this buffer immediately. Calling this method frees up any
underlying native resources. After calling this method, this buffer
must not be used in any way.

@see #isClosed()
"
      end

      operation 6604805 "isClosed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Indicates whether this buffer has been closed. A closed buffer cannot
be used in any way: the buffer cannot be written to a parcel, etc.

@return True if this <code>HardwareBuffer</code> is in a closed state,
        false otherwise.

@see #close()
"
      end

      operation 6604933 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6605061 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 967301 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Flatten this object in to a Parcel.

<p>Calling this method will throw an <code>IllegalStateException</code> if
{@link #close()} has been previously called.</p>

@param dest The Parcel in which the object should be written.
@param flags Additional flags about how the object should be written.
             May be 0 or {@link #PARCELABLE_WRITE_RETURN_VALUE}.
"
      end

      classrelation 1763333 // CREATOR (<unidirectional association>)
	relation 1763333 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<HardwareBuffer>() {
        public HardwareBuffer createFromParcel(Parcel in) {
            long nativeObject = nReadHardwareBufferFromParcel(in);
            if (nativeObject != 0) {
                return new HardwareBuffer(nativeObject);
            }
            return null;
        }

        public HardwareBuffer[] newArray(int size) {
            return new HardwareBuffer[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<HardwareBuffer> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1763333 // CREATOR (<unidirectional association>)
	  b parent class_ref 967429 // Creator
      end

      operation 6605189 "isSupportedFormat"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@Format ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Validates whether a particular format is supported by HardwareBuffer.

@param format The format to validate.

@return True if <code>format</code> is a supported format. false otherwise.
See {@link #create(int, int, int, int, long)}.
"
      end

      operation 6605317 "nCreateHardwareBuffer"
	class_operation private explicit_return_type "long"
	nparams 5
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "layers" explicit_type "int"
	  param in name "usage" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6605445 "nGetNativeFinalizer"
	class_operation private explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6605573 "nWriteHardwareBufferToParcel"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativeObject" explicit_type "long"
	  param inout name "dest" type class_ref 967301 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6605701 "nReadHardwareBufferFromParcel"
	class_operation private explicit_return_type "long"
	nparams 1
	  param inout name "in" type class_ref 967301 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6605829 "nGetWidth"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativeObject" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	java_annotation "@FastNative
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6605957 "nGetHeight"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativeObject" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	java_annotation "@FastNative
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606085 "nGetFormat"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativeObject" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	java_annotation "@FastNative
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606213 "nGetLayers"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "nativeObject" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	java_annotation "@FastNative
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606341 "nGetUsage"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "nativeObject" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	java_annotation "@FastNative
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1179397 "LegacySensorManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"deprecation\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Helper class for implementing the legacy sensor manager API.
@hide
"
      attribute 4263813 "sInitialized"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4263941 "sWindowManager"
	class_attribute private explicit_type "IWindowManager"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4264069 "sRotation"
	class_attribute private explicit_type "int"
	init_value " Surface.ROTATION_0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1763461 // mSensorManager (<unidirectional association>)
	relation 1763461 --->
	  a role_name "mSensorManager" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1763461 // mSensorManager (<unidirectional association>)
	  b parent class_ref 1179525 // SensorManager
      end

      classrelation 1763589 // mLegacyListenersMap (<unidirectional association>)
	relation 1763589 --->
	  stereotype "HashMap"
	  a role_name "mLegacyListenersMap" init_value "
            new HashMap<SensorListener, LegacyListener>()" const_relation private
	    comment " List of legacy listeners.  Guarded by mLegacyListenersMap.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, LegacyListener> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1763589 // mLegacyListenersMap (<unidirectional association>)
	  b parent class_ref 1179653 // SensorListener
      end

      operation 6606469 "LegacySensorManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "sensorManager" type class_ref 1179525 // SensorManager
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606597 "getSensors"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606725 "registerListener"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606853 "registerLegacyListener"
	private explicit_return_type "boolean"
	nparams 5
	  param in name "legacyType" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6606981 "unregisterListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6607109 "unregisterLegacyListener"
	private explicit_return_type "void"
	nparams 4
	  param in name "legacyType" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6607237 "onRotationChanged"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "rotation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6607365 "getRotation"
	class_operation package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      class 1179781 "LegacyListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1763717 // <realization>
	  relation 1763717 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 1763717 // <realization>
	    b parent class_ref 1179909 // SensorEventListener
	end

	attribute 4264197 "mValues"
	  private explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[6]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1763845 // mTarget (<unidirectional association>)
	  relation 1763845 --->
	    a role_name "mTarget" private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1763845 // mTarget (<unidirectional association>)
	    b parent class_ref 1179653 // SensorListener
	end

	attribute 4264325 "mSensors"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1763973 // mYawfilter (<unidirectional association>)
	  relation 1763973 --->
	    a role_name "mYawfilter" init_value " new LmsFilter()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1763973 // mYawfilter (<unidirectional association>)
	    b parent class_ref 1180293 // LmsFilter
	end

	operation 6607749 "LegacyListener"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "target" type class_ref 1179653 // SensorListener
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6607877 "registerSensor"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "legacyType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6608005 "unregisterSensor"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "legacyType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6608133 "hasSensors"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6608261 "hasOrientationSensor"
	  class_operation private explicit_return_type "boolean"
	  nparams 1
	    param in name "sensors" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6608389 "onAccuracyChanged"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "sensor" type class_ref 1180165 // Sensor
	    param in name "accuracy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6608517 "onSensorChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 1180037 // SensorEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6608645 "mapSensorDataToWindow"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "sensor" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "orientation" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Helper function to convert the specified sensor's data to the windows's
coordinate space from the device's coordinate space.

output: 3,4,5: values in the old API format
        0,1,2: transformed values in the old API format

"
	end

	operation 6608773 "getLegacySensorType"
	  class_operation private explicit_return_type "int"
	  nparams 1
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 1180293 "LmsFilter"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 4264453 "SENSORS_RATE_MS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4264581 "COUNT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 12"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4264709 "PREDICTION_RATIO"
	  class_attribute const_attribute private explicit_type "float"
	  init_value " 1.0f/3.0f"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4264837 "PREDICTION_TIME"
	  class_attribute const_attribute private explicit_type "float"
	  init_value " (SENSORS_RATE_MS*COUNT/1000.0f)*PREDICTION_RATIO"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4264965 "mV"
	  private explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[COUNT*2]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4265093 "mT"
	  private explicit_type "long"
	  multiplicity "[]"
	  init_value " new long[COUNT*2]"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4265221 "mIndex"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6608901 "LmsFilter"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6609029 "filter"
	  public explicit_return_type "float"
	  nparams 2
	    param in name "time" explicit_type "long"
	    param in name "in" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end
    end

    class 1179525 "SensorManager"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemService(Context.SENSOR_SERVICE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "<p>
SensorManager lets you access the device's {@link android.hardware.Sensor
sensors}.
</p>
<p>
Always make sure to disable sensors you don't need, especially when your
activity is paused. Failing to do so can drain the battery in just a few
hours. Note that the system will <i>not</i> disable sensors automatically when
the screen turns off.
</p>
<p class=\"note\">
Note: Don't use this mechanism with a Trigger Sensor, have a look
at {@link TriggerEventListener}. {@link Sensor#TYPE_SIGNIFICANT_MOTION}
is an example of a trigger sensor.
</p>
<pre class=\"prettyprint\">
public class SensorActivity extends Activity implements SensorEventListener {
    private final SensorManager mSensorManager;
    private final Sensor mAccelerometer;

    public SensorActivity() {
        mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
    }

    protected void onResume() {
        super.onResume();
        mSensorManager.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_NORMAL);
    }

    protected void onPause() {
        super.onPause();
        mSensorManager.unregisterListener(this);
    }

    public void onAccuracyChanged(Sensor sensor, int accuracy) {
    }

    public void onSensorChanged(SensorEvent event) {
    }
}
</pre>

@see SensorEventListener
@see SensorEvent
@see Sensor

"
      attribute 4282501 "TAG"
	class_attribute const_attribute protected explicit_type "String"
	init_value " \"SensorManager\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " @hide 
"
      end

      attribute 4282629 "mTempMatrix"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " new float[16]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1764869 // mSensorListByType (<unidirectional association>)
	relation 1764869 --->
	  a role_name "mSensorListByType" init_value "
            new SparseArray<List<Sensor>>()" const_relation private
	    comment " Cached lists of sensors by type.  Guarded by mSensorListByType.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<List<Sensor>> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1764869 // mSensorListByType (<unidirectional association>)
	  b parent class_ref 964101 // SparseArray
      end

      classrelation 1764997 // mLegacySensorManager (<unidirectional association>)
	relation 1764997 --->
	  a role_name "mLegacySensorManager" private
	    comment " Legacy sensor manager implementation.  Guarded by mSensorListByType during initialization.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1764997 // mLegacySensorManager (<unidirectional association>)
	  b parent class_ref 1179397 // LegacySensorManager
      end

      attribute 4282757 "SENSOR_ORIENTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " NOTE: sensor IDs must be a power of 2 

A constant describing an orientation sensor. See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4282885 "SENSOR_ACCELEROMETER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an accelerometer. See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283013 "SENSOR_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a temperature sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283141 "SENSOR_MAGNETIC_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a magnetic sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283269 "SENSOR_LIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an ambient light sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283397 "SENSOR_PROXIMITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a proximity sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283525 "SENSOR_TRICORDER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a Tricorder See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283653 "SENSOR_ORIENTATION_RAW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an orientation sensor. See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283781 "SENSOR_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7F"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant that includes all sensors

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4283909 "SENSOR_MIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " SENSOR_ORIENTATION"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Smallest sensor ID

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284037 "SENSOR_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " ((SENSOR_ALL + 1)>>1)"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Largest sensor ID

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284165 "DATA_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Index of the X value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284293 "DATA_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Index of the Y value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284421 "DATA_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Index of the Z value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284549 "RAW_DATA_INDEX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Offset to the untransformed values in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284677 "RAW_DATA_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Index of the untransformed X value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284805 "RAW_DATA_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Index of the untransformed Y value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4284933 "RAW_DATA_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Index of the untransformed Z value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.

"
      end

      attribute 4285061 "STANDARD_GRAVITY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 9.80665f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Standard gravity (g) on Earth. This value is equivalent to 1G 
"
      end

      attribute 4285189 "GRAVITY_SUN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 275.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Sun's gravity in SI units (m/s^2) 
"
      end

      attribute 4285317 "GRAVITY_MERCURY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 3.70f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Mercury's gravity in SI units (m/s^2) 
"
      end

      attribute 4285445 "GRAVITY_VENUS"
	class_attribute const_attribute public explicit_type "float"
	init_value " 8.87f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Venus' gravity in SI units (m/s^2) 
"
      end

      attribute 4285573 "GRAVITY_EARTH"
	class_attribute const_attribute public explicit_type "float"
	init_value " 9.80665f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Earth's gravity in SI units (m/s^2) 
"
      end

      attribute 4285701 "GRAVITY_MOON"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.6f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " The Moon's gravity in SI units (m/s^2) 
"
      end

      attribute 4285829 "GRAVITY_MARS"
	class_attribute const_attribute public explicit_type "float"
	init_value " 3.71f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Mars' gravity in SI units (m/s^2) 
"
      end

      attribute 4285957 "GRAVITY_JUPITER"
	class_attribute const_attribute public explicit_type "float"
	init_value " 23.12f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Jupiter's gravity in SI units (m/s^2) 
"
      end

      attribute 4286085 "GRAVITY_SATURN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 8.96f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Saturn's gravity in SI units (m/s^2) 
"
      end

      attribute 4286213 "GRAVITY_URANUS"
	class_attribute const_attribute public explicit_type "float"
	init_value " 8.69f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Uranus' gravity in SI units (m/s^2) 
"
      end

      attribute 4286341 "GRAVITY_NEPTUNE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 11.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Neptune's gravity in SI units (m/s^2) 
"
      end

      attribute 4286469 "GRAVITY_PLUTO"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.6f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Pluto's gravity in SI units (m/s^2) 
"
      end

      attribute 4286597 "GRAVITY_DEATH_STAR_I"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.000000353036145f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Gravity (estimate) on the first Death Star in Empire units (m/s^2) 
"
      end

      attribute 4286725 "GRAVITY_THE_ISLAND"
	class_attribute const_attribute public explicit_type "float"
	init_value " 4.815162342f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Gravity on the island 
"
      end

      attribute 4286853 "MAGNETIC_FIELD_EARTH_MAX"
	class_attribute const_attribute public explicit_type "float"
	init_value " 60.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Maximum magnetic field on Earth's surface 
"
      end

      attribute 4286981 "MAGNETIC_FIELD_EARTH_MIN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 30.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Minimum magnetic field on Earth's surface 
"
      end

      attribute 4287109 "PRESSURE_STANDARD_ATMOSPHERE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1013.25f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Standard atmosphere, or average sea-level pressure in hPa (millibar) 
"
      end

      attribute 4287237 "LIGHT_SUNLIGHT_MAX"
	class_attribute const_attribute public explicit_type "float"
	init_value " 120000.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Maximum luminance of sunlight in lux 
"
      end

      attribute 4287365 "LIGHT_SUNLIGHT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 110000.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance of sunlight in lux 
"
      end

      attribute 4287493 "LIGHT_SHADE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 20000.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance in shade in lux 
"
      end

      attribute 4287621 "LIGHT_OVERCAST"
	class_attribute const_attribute public explicit_type "float"
	init_value " 10000.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance under an overcast sky in lux 
"
      end

      attribute 4287749 "LIGHT_SUNRISE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 400.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance at sunrise in lux 
"
      end

      attribute 4287877 "LIGHT_CLOUDY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 100.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance under a cloudy sky in lux 
"
      end

      attribute 4288005 "LIGHT_FULLMOON"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.25f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance at night with full moon in lux 
"
      end

      attribute 4288133 "LIGHT_NO_MOON"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.001f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " luminance at night with no moon in lux
"
      end

      attribute 4288261 "SENSOR_DELAY_FASTEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " get sensor data as fast as possible 
"
      end

      attribute 4288389 "SENSOR_DELAY_GAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " rate suitable for games 
"
      end

      attribute 4288517 "SENSOR_DELAY_UI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " rate suitable for the user interface  
"
      end

      attribute 4288645 "SENSOR_DELAY_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " rate (default) suitable for screen orientation changes 
"
      end

      attribute 4288773 "SENSOR_STATUS_NO_CONTACT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The values returned by this sensor cannot be trusted because the sensor
had no contact with what it was measuring (for example, the heart rate
monitor is not in contact with the user).

"
      end

      attribute 4288901 "SENSOR_STATUS_UNRELIABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The values returned by this sensor cannot be trusted, calibration is
needed or the environment doesn't allow readings

"
      end

      attribute 4289029 "SENSOR_STATUS_ACCURACY_LOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "This sensor is reporting data with low accuracy, calibration with the
environment is needed

"
      end

      attribute 4289157 "SENSOR_STATUS_ACCURACY_MEDIUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "This sensor is reporting data with an average level of accuracy,
calibration with the environment may improve the readings

"
      end

      attribute 4289285 "SENSOR_STATUS_ACCURACY_HIGH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " This sensor is reporting data with maximum accuracy 
"
      end

      attribute 4289413 "AXIS_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " see {@link #remapCoordinateSystem} 
"
      end

      attribute 4289541 "AXIS_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " see {@link #remapCoordinateSystem} 
"
      end

      attribute 4289669 "AXIS_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " see {@link #remapCoordinateSystem} 
"
      end

      attribute 4289797 "AXIS_MINUS_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " AXIS_X | 0x80"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " see {@link #remapCoordinateSystem} 
"
      end

      attribute 4289925 "AXIS_MINUS_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " AXIS_Y | 0x80"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " see {@link #remapCoordinateSystem} 
"
      end

      attribute 4290053 "AXIS_MINUS_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " AXIS_Z | 0x80"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " see {@link #remapCoordinateSystem} 
"
      end

      operation 6615173 "SensorManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "{@hide}
"
      end

      operation 6615301 "getFullSensorList"
	abstract protected return_type class_ref 1180165 // Sensor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Gets the full list of sensors that are available.
@hide
"
      end

      operation 6615429 "getFullDynamicSensorList"
	abstract protected return_type class_ref 1180165 // Sensor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Gets the full list of dynamic sensors that are available.
@hide
"
      end

      operation 6615557 "getSensors"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return available sensors.
@deprecated This method is deprecated, use
            {@link SensorManager#getSensorList(int)} instead
"
      end

      operation 6615685 "getSensorList"
	public return_type class_ref 1180165 // Sensor
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Use this method to get the list of available sensors of a certain type.
Make multiple calls to get sensors of different types or use
{@link android.hardware.Sensor#TYPE_ALL Sensor.TYPE_ALL} to get all the
sensors.

<p class=\"note\">
NOTE: Both wake-up and non wake-up sensors matching the given type are
returned. Check {@link Sensor#isWakeUpSensor()} to know the wake-up properties
of the returned {@link Sensor}.
</p>

@param type
       of sensors requested

@return a list of sensors matching the asked type.

@see #getDefaultSensor(int)
@see Sensor
"
      end

      operation 6615813 "getDynamicSensorList"
	public return_type class_ref 1180165 // Sensor
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Use this method to get a list of available dynamic sensors of a certain type.
Make multiple calls to get sensors of different types or use
{@link android.hardware.Sensor#TYPE_ALL Sensor.TYPE_ALL} to get all dynamic sensors.

<p class=\"note\">
NOTE: Both wake-up and non wake-up sensors matching the given type are
returned. Check {@link Sensor#isWakeUpSensor()} to know the wake-up properties
of the returned {@link Sensor}.
</p>

@param type of sensors requested

@return a list of dynamic sensors matching the requested type.

@see Sensor
"
      end

      operation 6615941 "getDefaultSensor"
	public return_type class_ref 1180165 // Sensor
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Use this method to get the default sensor for a given type. Note that the
returned sensor could be a composite sensor, and its data could be
averaged or filtered. If you need to access the raw sensors use
{@link SensorManager#getSensorList(int) getSensorList}.

@param type
        of sensors requested

@return the default sensor matching the requested type if one exists and the application
        has the necessary permissions, or null otherwise.

@see #getSensorList(int)
@see Sensor
"
      end

      operation 6616069 "getDefaultSensor"
	public return_type class_ref 1180165 // Sensor
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "wakeUp" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Return a Sensor with the given type and wakeUp properties. If multiple sensors of this
type exist, any one of them may be returned.
<p>
For example,
<ul>
    <li>getDefaultSensor({@link Sensor#TYPE_ACCELEROMETER}, true) returns a wake-up accelerometer
    sensor if it exists. </li>
    <li>getDefaultSensor({@link Sensor#TYPE_PROXIMITY}, false) returns a non wake-up proximity
    sensor if it exists. </li>
    <li>getDefaultSensor({@link Sensor#TYPE_PROXIMITY}, true) returns a wake-up proximity sensor
    which is the same as the Sensor returned by {@link #getDefaultSensor(int)}. </li>
</ul>
</p>
<p class=\"note\">
Note: Sensors like {@link Sensor#TYPE_PROXIMITY} and {@link Sensor#TYPE_SIGNIFICANT_MOTION}
are declared as wake-up sensors by default.
</p>
@param type
       type of sensor requested
@param wakeUp
       flag to indicate whether the Sensor is a wake-up or non wake-up sensor.
@return the default sensor matching the requested type and wakeUp properties if one exists
        and the application has the necessary permissions, or null otherwise.
@see Sensor#isWakeUpSensor()
"
      end

      operation 6616197 "registerListener"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a listener for given sensors.

@deprecated This method is deprecated, use
            {@link SensorManager#registerListener(SensorEventListener, Sensor, int)}
            instead.

@param listener
       sensor listener object

@param sensors
       a bit masks of the sensors to register to

@return <code>true</code> if the sensor is supported and successfully
        enabled
"
      end

      operation 6616325 "registerListener"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a SensorListener for given sensors.

@deprecated This method is deprecated, use
            {@link SensorManager#registerListener(SensorEventListener, Sensor, int)}
            instead.

@param listener
       sensor listener object

@param sensors
       a bit masks of the sensors to register to

@param rate
       rate of events. This is only a hint to the system. events may be
       received faster or slower than the specified rate. Usually events
       are received faster. The value must be one of
       {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
       {@link #SENSOR_DELAY_GAME}, or {@link #SENSOR_DELAY_FASTEST}.

@return <code>true</code> if the sensor is supported and successfully
        enabled
"
      end

      operation 6616453 "unregisterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1179653 // SensorListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Unregisters a listener for all sensors.

@deprecated This method is deprecated, use
            {@link SensorManager#unregisterListener(SensorEventListener)}
            instead.

@param listener
       a SensorListener object
"
      end

      operation 6616581 "unregisterListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 1179653 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Unregisters a listener for the sensors with which it is registered.

@deprecated This method is deprecated, use
            {@link SensorManager#unregisterListener(SensorEventListener, Sensor)}
            instead.

@param listener
       a SensorListener object

@param sensors
       a bit masks of the sensors to unregister from
"
      end

      operation 6616709 "unregisterListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Unregisters a listener for the sensors with which it is registered.

<p class=\"note\"></p>
Note: Don't use this method with a one shot trigger sensor such as
{@link Sensor#TYPE_SIGNIFICANT_MOTION}.
Use {@link #cancelTriggerSensor(TriggerEventListener, Sensor)} instead.
</p>

@param listener
       a SensorEventListener object

@param sensor
       the sensor to unregister from

@see #unregisterListener(SensorEventListener)
@see #registerListener(SensorEventListener, Sensor, int)
"
      end

      operation 6616837 "unregisterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Unregisters a listener for all sensors.

@param listener
       a SensorListener object

@see #unregisterListener(SensorEventListener, Sensor)
@see #registerListener(SensorEventListener, Sensor, int)

"
      end

      operation 6616965 "unregisterListenerImpl"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6617093 "registerListener"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "samplingPeriodUs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a {@link android.hardware.SensorEventListener SensorEventListener} for the given
sensor at the given sampling frequency.
<p>
The events will be delivered to the provided {@code SensorEventListener} as soon as they are
available. To reduce the power consumption, applications can use
{@link #registerListener(SensorEventListener, Sensor, int, int)} instead and specify a
positive non-zero maximum reporting latency.
</p>
<p>
In the case of non-wake-up sensors, the events are only delivered while the Application
Processor (AP) is not in suspend mode. See {@link Sensor#isWakeUpSensor()} for more details.
To ensure delivery of events from non-wake-up sensors even when the screen is OFF, the
application registering to the sensor must hold a partial wake-lock to keep the AP awake,
otherwise some events might be lost while the AP is asleep. Note that although events might
be lost while the AP is asleep, the sensor will still consume power if it is not explicitly
deactivated by the application. Applications must unregister their {@code
SensorEventListener}s in their activity's {@code onPause()} method to avoid consuming power
while the device is inactive.  See {@link #registerListener(SensorEventListener, Sensor, int,
int)} for more details on hardware FIFO (queueing) capabilities and when some sensor events
might be lost.
</p>
<p>
In the case of wake-up sensors, each event generated by the sensor will cause the AP to
wake-up, ensuring that each event can be delivered. Because of this, registering to a wake-up
sensor has very significant power implications. Call {@link Sensor#isWakeUpSensor()} to check
whether a sensor is a wake-up sensor. See
{@link #registerListener(SensorEventListener, Sensor, int, int)} for information on how to
reduce the power impact of registering to wake-up sensors.
</p>
<p class=\"note\">
Note: Don't use this method with one-shot trigger sensors such as
{@link Sensor#TYPE_SIGNIFICANT_MOTION}. Use
{@link #requestTriggerSensor(TriggerEventListener, Sensor)} instead. Use
{@link Sensor#getReportingMode()} to obtain the reporting mode of a given sensor.
</p>

@param listener A {@link android.hardware.SensorEventListener SensorEventListener} object.
@param sensor The {@link android.hardware.Sensor Sensor} to register to.
@param samplingPeriodUs The rate {@link android.hardware.SensorEvent sensor events} are
           delivered at. This is only a hint to the system. Events may be received faster or
           slower than the specified rate. Usually events are received faster. The value must
           be one of {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
           {@link #SENSOR_DELAY_GAME}, or {@link #SENSOR_DELAY_FASTEST} or, the desired delay
           between events in microseconds. Specifying the delay in microseconds only works
           from Android 2.3 (API level 9) onwards. For earlier releases, you must use one of
           the {@code SENSOR_DELAY_*} constants.
@return <code>true</code> if the sensor is supported and successfully enabled.
@see #registerListener(SensorEventListener, Sensor, int, Handler)
@see #unregisterListener(SensorEventListener)
@see #unregisterListener(SensorEventListener, Sensor)
"
      end

      operation 6617221 "registerListener"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "samplingPeriodUs" explicit_type "int"
	  param in name "maxReportLatencyUs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a {@link android.hardware.SensorEventListener SensorEventListener} for the given
sensor at the given sampling frequency and the given maximum reporting latency.
<p>
This function is similar to {@link #registerListener(SensorEventListener, Sensor, int)} but
it allows events to stay temporarily in the hardware FIFO (queue) before being delivered. The
events can be stored in the hardware FIFO up to {@code maxReportLatencyUs} microseconds. Once
one of the events in the FIFO needs to be reported, all of the events in the FIFO are
reported sequentially. This means that some events will be reported before the maximum
reporting latency has elapsed.
</p><p>
When {@code maxReportLatencyUs} is 0, the call is equivalent to a call to
{@link #registerListener(SensorEventListener, Sensor, int)}, as it requires the events to be
delivered as soon as possible.
</p><p>
When {@code sensor.maxFifoEventCount()} is 0, the sensor does not use a FIFO, so the call
will also be equivalent to {@link #registerListener(SensorEventListener, Sensor, int)}.
</p><p>
Setting {@code maxReportLatencyUs} to a positive value allows to reduce the number of
interrupts the AP (Application Processor) receives, hence reducing power consumption, as the
AP can switch to a lower power state while the sensor is capturing the data. This is
especially important when registering to wake-up sensors, for which each interrupt causes the
AP to wake up if it was in suspend mode. See {@link Sensor#isWakeUpSensor()} for more
information on wake-up sensors.
</p>
<p class=\"note\">
</p>
Note: Don't use this method with one-shot trigger sensors such as
{@link Sensor#TYPE_SIGNIFICANT_MOTION}. Use
{@link #requestTriggerSensor(TriggerEventListener, Sensor)} instead. </p>

@param listener A {@link android.hardware.SensorEventListener SensorEventListener} object
           that will receive the sensor events. If the application is interested in receiving
           flush complete notifications, it should register with
           {@link android.hardware.SensorEventListener SensorEventListener2} instead.
@param sensor The {@link android.hardware.Sensor Sensor} to register to.
@param samplingPeriodUs The desired delay between two consecutive events in microseconds.
           This is only a hint to the system. Events may be received faster or slower than
           the specified rate. Usually events are received faster. Can be one of
           {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
           {@link #SENSOR_DELAY_GAME}, {@link #SENSOR_DELAY_FASTEST} or the delay in
           microseconds.
@param maxReportLatencyUs Maximum time in microseconds that events can be delayed before
           being reported to the application. A large value allows reducing the power
           consumption associated with the sensor. If maxReportLatencyUs is set to zero,
           events are delivered as soon as they are available, which is equivalent to calling
           {@link #registerListener(SensorEventListener, Sensor, int)}.
@return <code>true</code> if the sensor is supported and successfully enabled.
@see #registerListener(SensorEventListener, Sensor, int)
@see #unregisterListener(SensorEventListener)
@see #flush(SensorEventListener)
"
      end

      operation 6617349 "registerListener"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "samplingPeriodUs" explicit_type "int"
	  param inout name "handler" type class_ref 956421 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a {@link android.hardware.SensorEventListener SensorEventListener} for the given
sensor. Events are delivered in continuous mode as soon as they are available. To reduce the
power consumption, applications can use
{@link #registerListener(SensorEventListener, Sensor, int, int)} instead and specify a
positive non-zero maximum reporting latency.
<p class=\"note\">
</p>
Note: Don't use this method with a one shot trigger sensor such as
{@link Sensor#TYPE_SIGNIFICANT_MOTION}. Use
{@link #requestTriggerSensor(TriggerEventListener, Sensor)} instead. </p>

@param listener A {@link android.hardware.SensorEventListener SensorEventListener} object.
@param sensor The {@link android.hardware.Sensor Sensor} to register to.
@param samplingPeriodUs The rate {@link android.hardware.SensorEvent sensor events} are
           delivered at. This is only a hint to the system. Events may be received faster or
           slower than the specified rate. Usually events are received faster. The value must
           be one of {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
           {@link #SENSOR_DELAY_GAME}, or {@link #SENSOR_DELAY_FASTEST} or, the desired
           delay between events in microseconds. Specifying the delay in microseconds only
           works from Android 2.3 (API level 9) onwards. For earlier releases, you must use
           one of the {@code SENSOR_DELAY_*} constants.
@param handler The {@link android.os.Handler Handler} the {@link android.hardware.SensorEvent
           sensor events} will be delivered to.
@return <code>true</code> if the sensor is supported and successfully enabled.
@see #registerListener(SensorEventListener, Sensor, int)
@see #unregisterListener(SensorEventListener)
@see #unregisterListener(SensorEventListener, Sensor)
"
      end

      operation 6617477 "registerListener"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "samplingPeriodUs" explicit_type "int"
	  param in name "maxReportLatencyUs" explicit_type "int"
	  param inout name "handler" type class_ref 956421 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Registers a {@link android.hardware.SensorEventListener SensorEventListener} for the given
sensor at the given sampling frequency and the given maximum reporting latency.

@param listener A {@link android.hardware.SensorEventListener SensorEventListener} object
           that will receive the sensor events. If the application is interested in receiving
           flush complete notifications, it should register with
           {@link android.hardware.SensorEventListener SensorEventListener2} instead.
@param sensor The {@link android.hardware.Sensor Sensor} to register to.
@param samplingPeriodUs The desired delay between two consecutive events in microseconds.
           This is only a hint to the system. Events may be received faster or slower than
           the specified rate. Usually events are received faster. Can be one of
           {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
           {@link #SENSOR_DELAY_GAME}, {@link #SENSOR_DELAY_FASTEST} or the delay in
           microseconds.
@param maxReportLatencyUs Maximum time in microseconds that events can be delayed before
           being reported to the application. A large value allows reducing the power
           consumption associated with the sensor. If maxReportLatencyUs is set to zero,
           events are delivered as soon as they are available, which is equivalent to calling
           {@link #registerListener(SensorEventListener, Sensor, int)}.
@param handler The {@link android.os.Handler Handler} the {@link android.hardware.SensorEvent
           sensor events} will be delivered to.
@return <code>true</code> if the sensor is supported and successfully enabled.
@see #registerListener(SensorEventListener, Sensor, int, int)
"
      end

      operation 6617605 "registerListenerImpl"
	abstract protected explicit_return_type "boolean"
	nparams 6
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "delayUs" explicit_type "int"
	  param inout name "handler" type class_ref 956421 // Handler
	  param in name "maxReportLatencyUs" explicit_type "int"
	  param in name "reservedFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6617733 "flush"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Flushes the FIFO of all the sensors registered for this listener. If there are events
in the FIFO of the sensor, they are returned as if the maxReportLantecy of the FIFO has
expired. Events are returned in the usual way through the SensorEventListener.
This call doesn't affect the maxReportLantecy for this sensor. This call is asynchronous and
returns immediately.
{@link android.hardware.SensorEventListener2#onFlushCompleted onFlushCompleted} is called
after all the events in the batch at the time of calling this method have been delivered
successfully. If the hardware doesn't support flush, it still returns true and a trivial
flush complete event is sent after the current event for all the clients registered for this
sensor.

@param listener A {@link android.hardware.SensorEventListener SensorEventListener} object
       which was previously used in a registerListener call.
@return <code>true</code> if the flush is initiated successfully on all the sensors
        registered for this listener, false if no sensor is previously registered for this
        listener or flush on one of the sensors fails.
@see #registerListener(SensorEventListener, Sensor, int, int)
@throws IllegalArgumentException when listener is null.
"
      end

      operation 6617861 "flushImpl"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6617989 "createDirectChannel"
	public return_type class_ref 1180677 // SensorDirectChannel
	nparams 1
	  param inout name "mem" type class_ref 1181189 // MemoryFile
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Create a sensor direct channel backed by shared memory wrapped in MemoryFile object.

The resulting channel can be used for delivering sensor events to native code, other
processes, GPU/DSP or other co-processors without CPU intervention. This is the recommanded
for high performance sensor applications that use high sensor rates (e.g. greater than 200Hz)
and cares about sensor event latency.

Use the returned {@link android.hardware.SensorDirectChannel} object to configure direct
report of sensor events. After use, call {@link android.hardware.SensorDirectChannel#close()}
to free up resource in sensor system associated with the direct channel.

@param mem A {@link android.os.MemoryFile} shared memory object.
@return A {@link android.hardware.SensorDirectChannel} object if successful, null otherwise.
@throws NullPointerException when mem is null.
@see SensorDirectChannel#close()
@see #configureDirectChannel(SensorDirectChannel, Sensor, int)
"
      end

      operation 6618117 "createDirectChannel"
	public return_type class_ref 1180677 // SensorDirectChannel
	nparams 1
	  param inout name "mem" type class_ref 1179013 // HardwareBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Create a sensor direct channel backed by shared memory wrapped in HardwareBuffer object.

The resulting channel can be used for delivering sensor events to native code, other
processes, GPU/DSP or other co-processors without CPU intervention. This is the recommanded
for high performance sensor applications that use high sensor rates (e.g. greater than 200Hz)
and cares about sensor event latency.

Use the returned {@link android.hardware.SensorDirectChannel} object to configure direct
report of sensor events. After use, call {@link android.hardware.SensorDirectChannel#close()}
to free up resource in sensor system associated with the direct channel.

@param mem A {@link android.hardware.HardwareBuffer} shared memory object.
@return A {@link android.hardware.SensorDirectChannel} object if successful,
        null otherwise.
@throws NullPointerException when mem is null.
@see SensorDirectChannel#close()
@see #configureDirectChannel(SensorDirectChannel, Sensor, int)
"
      end

      operation 6618245 "createDirectChannelImpl"
	abstract protected return_type class_ref 1180677 // SensorDirectChannel
	nparams 2
	  param inout name "memoryFile" type class_ref 1181189 // MemoryFile
	  param inout name "hardwareBuffer" type class_ref 1179013 // HardwareBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6618373 "destroyDirectChannel"
	package explicit_return_type "void"
	nparams 1
	  param inout name "channel" type class_ref 1180677 // SensorDirectChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6618501 "destroyDirectChannelImpl"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "channel" type class_ref 1180677 // SensorDirectChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6618629 "configureDirectChannel"
	public explicit_return_type "int"
	nparams 3
	  param inout name "channel" type class_ref 1180677 // SensorDirectChannel
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "rateLevel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @removed "
      end

      operation 6618757 "configureDirectChannelImpl"
	abstract protected explicit_return_type "int"
	nparams 3
	  param inout name "channel" type class_ref 1180677 // SensorDirectChannel
	  param inout name "s" type class_ref 1180165 // Sensor
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      class 1181573 "DynamicSensorCallback"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6618885 "onDynamicSensorConnected"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called when there is a dynamic sensor being connected to the system.

@param sensor the newly connected sensor. See {@link android.hardware.Sensor Sensor}.
"
	end

	operation 6619013 "onDynamicSensorDisconnected"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Called when there is a dynamic sensor being disconnected from the system.

@param sensor the disconnected sensor. See {@link android.hardware.Sensor Sensor}.
"
	end
      end

      operation 6619141 "registerDynamicSensorCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Add a {@link android.hardware.SensorManager.DynamicSensorCallback
DynamicSensorCallback} to receive dynamic sensor connection callbacks. Repeat
registration with the already registered callback object will have no additional effect.

@param callback An object that implements the
       {@link android.hardware.SensorManager.DynamicSensorCallback
       DynamicSensorCallback}
       interface for receiving callbacks.
@see #addDynamicSensorCallback(DynamicSensorCallback, Handler)

@throws IllegalArgumentException when callback is null.
"
      end

      operation 6619269 "registerDynamicSensorCallback"
	public explicit_return_type "void"
	nparams 2
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	  param inout name "handler" type class_ref 956421 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Add a {@link android.hardware.SensorManager.DynamicSensorCallback
DynamicSensorCallback} to receive dynamic sensor connection callbacks. Repeat
registration with the already registered callback object will have no additional effect.

@param callback An object that implements the
       {@link android.hardware.SensorManager.DynamicSensorCallback
       DynamicSensorCallback} interface for receiving callbacks.
@param handler The {@link android.os.Handler Handler} the {@link
       android.hardware.SensorManager.DynamicSensorCallback
       sensor connection events} will be delivered to.

@throws IllegalArgumentException when callback is null.
"
      end

      operation 6619397 "unregisterDynamicSensorCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Remove a {@link android.hardware.SensorManager.DynamicSensorCallback
DynamicSensorCallback} to stop sending dynamic sensor connection events to that
callback.

@param callback An object that implements the
       {@link android.hardware.SensorManager.DynamicSensorCallback
       DynamicSensorCallback}
       interface for receiving callbacks.
"
      end

      operation 6619525 "isDynamicSensorDiscoverySupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Tell if dynamic sensor discovery feature is supported by system.

@return <code>true</code> if dynamic sensor discovery is supported, <code>false</code>
otherwise.
"
      end

      operation 6619653 "registerDynamicSensorCallbackImpl"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	  param inout name "handler" type class_ref 956421 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6619781 "unregisterDynamicSensorCallbackImpl"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6619909 "getRotationMatrix"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "R" explicit_type "float"
	multiplicity "[]"
	  param inout name "I" explicit_type "float"
	multiplicity "[]"
	  param inout name "gravity" explicit_type "float"
	multiplicity "[]"
	  param inout name "geomagnetic" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>
Computes the inclination matrix <b>I</b> as well as the rotation matrix
<b>R</b> transforming a vector from the device coordinate system to the
world's coordinate system which is defined as a direct orthonormal basis,
where:
</p>

<ul>
<li>X is defined as the vector product <b>Y.Z</b> (It is tangential to
the ground at the device's current location and roughly points East).</li>
<li>Y is tangential to the ground at the device's current location and
points towards the magnetic North Pole.</li>
<li>Z points towards the sky and is perpendicular to the ground.</li>
</ul>

<p>
<center><img src=\"../../../images/axis_globe.png\"
alt=\"World coordinate-system diagram.\" border=\"0\" /></center>
</p>

<p>
<hr>
<p>
By definition:
<p>
[0 0 g] = <b>R</b> * <b>gravity</b> (g = magnitude of gravity)
<p>
[0 m 0] = <b>I</b> * <b>R</b> * <b>geomagnetic</b> (m = magnitude of
geomagnetic field)
<p>
<b>R</b> is the identity matrix when the device is aligned with the
world's coordinate system, that is, when the device's X axis points
toward East, the Y axis points to the North Pole and the device is facing
the sky.

<p>
<b>I</b> is a rotation matrix transforming the geomagnetic vector into
the same coordinate space as gravity (the world's coordinate space).
<b>I</b> is a simple rotation around the X axis. The inclination angle in
radians can be computed with {@link #getInclination}.
<hr>

<p>
Each matrix is returned either as a 3x3 or 4x4 row-major matrix depending
on the length of the passed array:
<p>
<u>If the array length is 16:</u>

<pre>
  /  M[ 0]   M[ 1]   M[ 2]   M[ 3]  \\
  |  M[ 4]   M[ 5]   M[ 6]   M[ 7]  |
  |  M[ 8]   M[ 9]   M[10]   M[11]  |
  \\  M[12]   M[13]   M[14]   M[15]  /
</pre>

This matrix is ready to be used by OpenGL ES's
{@link javax.microedition.khronos.opengles.GL10#glLoadMatrixf(float[], int)
glLoadMatrixf(float[], int)}.
<p>
Note that because OpenGL matrices are column-major matrices you must
transpose the matrix before using it. However, since the matrix is a
rotation matrix, its transpose is also its inverse, conveniently, it is
often the inverse of the rotation that is needed for rendering; it can
therefore be used with OpenGL ES directly.
<p>
Also note that the returned matrices always have this form:

<pre>
  /  M[ 0]   M[ 1]   M[ 2]   0  \\
  |  M[ 4]   M[ 5]   M[ 6]   0  |
  |  M[ 8]   M[ 9]   M[10]   0  |
  \\      0       0       0   1  /
</pre>

<p>
<u>If the array length is 9:</u>

<pre>
  /  M[ 0]   M[ 1]   M[ 2]  \\
  |  M[ 3]   M[ 4]   M[ 5]  |
  \\  M[ 6]   M[ 7]   M[ 8]  /
</pre>

<hr>
<p>
The inverse of each matrix can be computed easily by taking its
transpose.

<p>
The matrices returned by this function are meaningful only when the
device is not free-falling and it is not close to the magnetic north. If
the device is accelerating, or placed into a strong magnetic field, the
returned matrices may be inaccurate.

@param R
       is an array of 9 floats holding the rotation matrix <b>R</b> when
       this function returns. R can be null.
       <p>

@param I
       is an array of 9 floats holding the rotation matrix <b>I</b> when
       this function returns. I can be null.
       <p>

@param gravity
       is an array of 3 floats containing the gravity vector expressed in
       the device's coordinate. You can simply use the
       {@link android.hardware.SensorEvent#values values} returned by a
       {@link android.hardware.SensorEvent SensorEvent} of a
       {@link android.hardware.Sensor Sensor} of type
       {@link android.hardware.Sensor#TYPE_ACCELEROMETER
       TYPE_ACCELEROMETER}.
       <p>

@param geomagnetic
       is an array of 3 floats containing the geomagnetic vector
       expressed in the device's coordinate. You can simply use the
       {@link android.hardware.SensorEvent#values values} returned by a
       {@link android.hardware.SensorEvent SensorEvent} of a
       {@link android.hardware.Sensor Sensor} of type
       {@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD
       TYPE_MAGNETIC_FIELD}.

@return <code>true</code> on success, <code>false</code> on failure (for
        instance, if the device is in free fall). Free fall is defined as
        condition when the magnitude of the gravity is less than 1/10 of
        the nominal value. On failure the output matrices are not modified.

@see #getInclination(float[])
@see #getOrientation(float[], float[])
@see #remapCoordinateSystem(float[], int, int, float[])
"
      end

      operation 6620037 "getInclination"
	class_operation public explicit_return_type "float"
	nparams 1
	  param inout name "I" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Computes the geomagnetic inclination angle in radians from the
inclination matrix <b>I</b> returned by {@link #getRotationMatrix}.

@param I
       inclination matrix see {@link #getRotationMatrix}.

@return The geomagnetic inclination angle in radians.

@see #getRotationMatrix(float[], float[], float[], float[])
@see #getOrientation(float[], float[])
@see GeomagneticField

"
      end

      operation 6620165 "remapCoordinateSystem"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "inR" explicit_type "float"
	multiplicity "[]"
	  param in name "X" explicit_type "int"
	  param in name "Y" explicit_type "int"
	  param inout name "outR" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>
Rotates the supplied rotation matrix so it is expressed in a different
coordinate system. This is typically used when an application needs to
compute the three orientation angles of the device (see
{@link #getOrientation}) in a different coordinate system.
</p>

<p>
When the rotation matrix is used for drawing (for instance with OpenGL
ES), it usually <b>doesn't need</b> to be transformed by this function,
unless the screen is physically rotated, in which case you can use
{@link android.view.Display#getRotation() Display.getRotation()} to
retrieve the current rotation of the screen. Note that because the user
is generally free to rotate their screen, you often should consider the
rotation in deciding the parameters to use here.
</p>

<p>
<u>Examples:</u>
<p>

<ul>
<li>Using the camera (Y axis along the camera's axis) for an augmented
reality application where the rotation angles are needed:</li>

<p>
<ul>
<code>remapCoordinateSystem(inR, AXIS_X, AXIS_Z, outR);</code>
</ul>
</p>

<li>Using the device as a mechanical compass when rotation is
{@link android.view.Surface#ROTATION_90 Surface.ROTATION_90}:</li>

<p>
<ul>
<code>remapCoordinateSystem(inR, AXIS_Y, AXIS_MINUS_X, outR);</code>
</ul>
</p>

Beware of the above example. This call is needed only to account for a
rotation from its natural orientation when calculating the rotation
angles (see {@link #getOrientation}). If the rotation matrix is also used
for rendering, it may not need to be transformed, for instance if your
{@link android.app.Activity Activity} is running in landscape mode.
</ul>

<p>
Since the resulting coordinate system is orthonormal, only two axes need
to be specified.

@param inR
       the rotation matrix to be transformed. Usually it is the matrix
       returned by {@link #getRotationMatrix}.

@param X
       defines the axis of the new cooridinate system that coincide with the X axis of the
       original coordinate system.

@param Y
       defines the axis of the new cooridinate system that coincide with the Y axis of the
       original coordinate system.

@param outR
       the transformed rotation matrix. inR and outR should not be the same
       array.

@return <code>true</code> on success. <code>false</code> if the input
        parameters are incorrect, for instance if X and Y define the same
        axis. Or if inR and outR don't have the same length.

@see #getRotationMatrix(float[], float[], float[], float[])
"
      end

      operation 6620293 "remapCoordinateSystemImpl"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "inR" explicit_type "float"
	multiplicity "[]"
	  param in name "X" explicit_type "int"
	  param in name "Y" explicit_type "int"
	  param inout name "outR" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6620421 "getOrientation"
	class_operation public explicit_return_type "float"
	nparams 2
	  param inout name "R" explicit_type "float"
	multiplicity "[]"
	  param inout name "values" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Computes the device's orientation based on the rotation matrix.
<p>
When it returns, the array values are as follows:
<ul>
<li>values[0]: <i>Azimuth</i>, angle of rotation about the -z axis.
               This value represents the angle between the device's y
               axis and the magnetic north pole. When facing north, this
               angle is 0, when facing south, this angle is &pi;.
               Likewise, when facing east, this angle is &pi;/2, and
               when facing west, this angle is -&pi;/2. The range of
               values is -&pi; to &pi;.</li>
<li>values[1]: <i>Pitch</i>, angle of rotation about the x axis.
               This value represents the angle between a plane parallel
               to the device's screen and a plane parallel to the ground.
               Assuming that the bottom edge of the device faces the
               user and that the screen is face-up, tilting the top edge
               of the device toward the ground creates a positive pitch
               angle. The range of values is -&pi; to &pi;.</li>
<li>values[2]: <i>Roll</i>, angle of rotation about the y axis. This
               value represents the angle between a plane perpendicular
               to the device's screen and a plane perpendicular to the
               ground. Assuming that the bottom edge of the device faces
               the user and that the screen is face-up, tilting the left
               edge of the device toward the ground creates a positive
               roll angle. The range of values is -&pi;/2 to &pi;/2.</li>
</ul>
<p>
Applying these three rotations in the azimuth, pitch, roll order
transforms an identity matrix to the rotation matrix passed into this
method. Also, note that all three orientation angles are expressed in
<b>radians</b>.

@param R
       rotation matrix see {@link #getRotationMatrix}.

@param values
       an array of 3 floats to hold the result.

@return The array values passed as argument.

@see #getRotationMatrix(float[], float[], float[], float[])
@see GeomagneticField
"
      end

      operation 6620549 "getAltitude"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "p0" explicit_type "float"
	  param in name "p" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Computes the Altitude in meters from the atmospheric pressure and the
pressure at sea level.
<p>
Typically the atmospheric pressure is read from a
{@link Sensor#TYPE_PRESSURE} sensor. The pressure at sea level must be
known, usually it can be retrieved from airport databases in the
vicinity. If unknown, you can use {@link #PRESSURE_STANDARD_ATMOSPHERE}
as an approximation, but absolute altitudes won't be accurate.
</p>
<p>
To calculate altitude differences, you must calculate the difference
between the altitudes at both points. If you don't know the altitude
as sea level, you can use {@link #PRESSURE_STANDARD_ATMOSPHERE} instead,
which will give good results considering the range of pressure typically
involved.
</p>
<p>
<code><ul>
 float altitude_difference =
     getAltitude(SensorManager.PRESSURE_STANDARD_ATMOSPHERE, pressure_at_point2)
     - getAltitude(SensorManager.PRESSURE_STANDARD_ATMOSPHERE, pressure_at_point1);
</ul></code>
</p>

@param p0 pressure at sea level
@param p atmospheric pressure
@return Altitude in meters
"
      end

      operation 6620677 "getAngleChange"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "angleChange" explicit_type "float"
	multiplicity "[]"
	  param inout name "R" explicit_type "float"
	multiplicity "[]"
	  param inout name "prevR" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Helper function to compute the angle change between two rotation matrices.
 Given a current rotation matrix (R) and a previous rotation matrix
 (prevR) computes the intrinsic rotation around the z, x, and y axes which
 transforms prevR to R.
 outputs a 3 element vector containing the z, x, and y angle
 change at indexes 0, 1, and 2 respectively.
<p> Each input matrix is either as a 3x3 or 4x4 row-major matrix
depending on the length of the passed array:
<p>If the array length is 9, then the array elements represent this matrix
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   \\
  |  R[ 3]   R[ 4]   R[ 5]   |
  \\  R[ 6]   R[ 7]   R[ 8]   /
</pre>
<p>If the array length is 16, then the array elements represent this matrix
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   R[ 3]  \\
  |  R[ 4]   R[ 5]   R[ 6]   R[ 7]  |
  |  R[ 8]   R[ 9]   R[10]   R[11]  |
  \\  R[12]   R[13]   R[14]   R[15]  /
</pre>

See {@link #getOrientation} for more detailed definition of the output.

@param R current rotation matrix
@param prevR previous rotation matrix
@param angleChange an an array of floats (z, x, and y) in which the angle change
       (in radians) is stored
"
      end

      operation 6620805 "getRotationMatrixFromVector"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "R" explicit_type "float"
	multiplicity "[]"
	  param inout name "rotationVector" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Helper function to convert a rotation vector to a rotation matrix.
 Given a rotation vector (presumably from a ROTATION_VECTOR sensor), returns a
 9  or 16 element rotation matrix in the array R.  R must have length 9 or 16.
 If R.length == 9, the following matrix is returned:
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   \\
  |  R[ 3]   R[ 4]   R[ 5]   |
  \\  R[ 6]   R[ 7]   R[ 8]   /
</pre>
If R.length == 16, the following matrix is returned:
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   0  \\
  |  R[ 4]   R[ 5]   R[ 6]   0  |
  |  R[ 8]   R[ 9]   R[10]   0  |
  \\  0       0       0       1  /
</pre>
 @param rotationVector the rotation vector to convert
 @param R an array of floats in which to store the rotation matrix
"
      end

      operation 6620933 "getQuaternionFromVector"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "Q" explicit_type "float"
	multiplicity "[]"
	  param inout name "rv" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Helper function to convert a rotation vector to a normalized quaternion.
 Given a rotation vector (presumably from a ROTATION_VECTOR sensor), returns a normalized
 quaternion in the array Q.  The quaternion is stored as [w, x, y, z]
 @param rv the rotation vector to convert
 @param Q an array of floats in which to store the computed quaternion
"
      end

      operation 6621061 "requestTriggerSensor"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "listener" type class_ref 1181701 // TriggerEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Requests receiving trigger events for a trigger sensor.

<p>
When the sensor detects a trigger event condition, such as significant motion in
the case of the {@link Sensor#TYPE_SIGNIFICANT_MOTION}, the provided trigger listener
will be invoked once and then its request to receive trigger events will be canceled.
To continue receiving trigger events, the application must request to receive trigger
events again.
</p>

@param listener The listener on which the
       {@link TriggerEventListener#onTrigger(TriggerEvent)} will be delivered.
@param sensor The sensor to be enabled.

@return true if the sensor was successfully enabled.

@throws IllegalArgumentException when sensor is null or not a trigger sensor.
"
      end

      operation 6621189 "requestTriggerSensorImpl"
	abstract protected explicit_return_type "boolean"
	nparams 2
	  param inout name "listener" type class_ref 1181701 // TriggerEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6621317 "cancelTriggerSensor"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "listener" type class_ref 1181701 // TriggerEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Cancels receiving trigger events for a trigger sensor.

<p>
Note that a Trigger sensor will be auto disabled if
{@link TriggerEventListener#onTrigger(TriggerEvent)} has triggered.
This method is provided in case the user wants to explicitly cancel the request
to receive trigger events.
</p>

@param listener The listener on which the
       {@link TriggerEventListener#onTrigger(TriggerEvent)}
       is delivered.It should be the same as the one used
       in {@link #requestTriggerSensor(TriggerEventListener, Sensor)}
@param sensor The sensor for which the trigger request should be canceled.
       If null, it cancels receiving trigger for all sensors associated
       with the listener.

@return true if successfully canceled.

@throws IllegalArgumentException when sensor is a trigger sensor.
"
      end

      operation 6621445 "cancelTriggerSensorImpl"
	abstract protected explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 1181701 // TriggerEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param inout name "disable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6621573 "initDataInjection"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "For testing purposes only. Not for third party applications.

Initialize data injection mode and create a client for data injection. SensorService should
already be operating in DATA_INJECTION mode for this call succeed. To set SensorService into
DATA_INJECTION mode \"adb shell dumpsys sensorservice data_injection\" needs to be called
through adb. Typically this is done using a host side test.  This mode is expected to be used
only for testing purposes. If the HAL is set to data injection mode, it will ignore the input
from physical sensors and read sensor data that is injected from the test application. This
mode is used for testing vendor implementations for various algorithms like Rotation Vector,
Significant Motion, Step Counter etc. Not all HALs support DATA_INJECTION. This method will
fail in those cases. Once this method succeeds, the test can call
{@link injectSensorData(Sensor, float[], int, long)} to inject sensor data into the HAL.

@param enable True to initialize a client in DATA_INJECTION mode.
              False to clean up the native resources.

@return true if the HAL supports data injection and false
        otherwise.
@hide
"
      end

      operation 6621701 "initDataInjectionImpl"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6621829 "injectSensorData"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param inout name "values" explicit_type "float"
	multiplicity "[]"
	  param in name "accuracy" explicit_type "int"
	  param in name "timestamp" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "For testing purposes only. Not for third party applications.

This method is used to inject raw sensor data into the HAL.  Call {@link
initDataInjection(boolean)} before this method to set the HAL in data injection mode. This
method should be called only if a previous call to initDataInjection has been successful and
the HAL and SensorService are already opreating in data injection mode.

@param sensor The sensor to inject.
@param values Sensor values to inject. The length of this
              array must be exactly equal to the number of
              values reported by the sensor type.
@param accuracy Accuracy of the sensor.
@param timestamp Sensor timestamp associated with the event.

@return boolean True if the data injection succeeds, false
        otherwise.
@throws IllegalArgumentException when the sensor is null,
        data injection is not supported by the sensor, values
        are null, incorrect number of values for the sensor,
        sensor accuracy is incorrect or timestamps are
        invalid.
@hide
"
      end

      operation 6621957 "injectSensorDataImpl"
	abstract protected explicit_return_type "boolean"
	nparams 4
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param inout name "values" explicit_type "float"
	multiplicity "[]"
	  param in name "accuracy" explicit_type "int"
	  param in name "timestamp" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
"
      end

      operation 6622085 "getLegacySensorManager"
	private return_type class_ref 1179397 // LegacySensorManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6622213 "getDelay"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6622341 "setOperationParameter"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "parameter" type class_ref 1180421 // SensorAdditionalInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6622469 "setOperationParameterImpl"
	abstract protected explicit_return_type "boolean"
	nparams 1
	  param inout name "parameter" type class_ref 1180421 // SensorAdditionalInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end
    end

    class 1179653 "SensorListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used for receiving notifications from the SensorManager when
sensor values have changed.

@deprecated Use 
{@link android.hardware.SensorEventListener SensorEventListener} instead.
"
      operation 6614917 "onSensorChanged"
	public explicit_return_type "void"
	nparams 2
	  param in name "sensor" explicit_type "int"
	  param inout name "values" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "<p>Called when sensor values have changed.
The length and contents of the values array vary
depending on which sensor is being monitored.
See {@link android.hardware.SensorManager SensorManager}
for details on possible sensor types.

<p><u>Definition of the coordinate system used below.</u><p>
<p>The X axis refers to the screen's horizontal axis
(the small edge in portrait mode, the long edge in landscape mode) and
points to the right. 
<p>The Y axis refers to the screen's vertical axis and points towards
the top of the screen (the origin is in the lower-left corner).
<p>The Z axis points toward the sky when the device is lying on its back
on a table.
<p> <b>IMPORTANT NOTE:</b> The axis <b><u>are swapped</u></b> when the
device's screen orientation changes. To access the unswapped values,
use indices 3, 4 and 5 in values[].

<p>{@link android.hardware.SensorManager#SENSOR_ORIENTATION SENSOR_ORIENTATION},
{@link android.hardware.SensorManager#SENSOR_ORIENTATION_RAW SENSOR_ORIENTATION_RAW}:<p>
 All values are angles in degrees.

<p>values[0]: Azimuth, rotation around the Z axis (0<=azimuth<360).
0 = North, 90 = East, 180 = South, 270 = West

<p>values[1]: Pitch, rotation around X axis (-180<=pitch<=180), with positive
values when the z-axis moves toward the y-axis.

<p>values[2]: Roll, rotation around Y axis (-90<=roll<=90), with positive values 
when the z-axis moves toward the x-axis.

<p>Note that this definition of yaw, pitch and roll is different from the
traditional definition used in aviation where the X axis is along the long
side of the plane (tail to nose).

<p>{@link android.hardware.SensorManager#SENSOR_ACCELEROMETER SENSOR_ACCELEROMETER}:<p>
 All values are in SI units (m/s^2) and measure contact forces.
 
 <p>values[0]: force applied by the device on the x-axis 
 <p>values[1]: force applied by the device on the y-axis 
 <p>values[2]: force applied by the device on the z-axis
 
 <p><u>Examples</u>:
   <li>When the device is pushed on its left side toward the right, the
   x acceleration value is negative (the device applies a reaction force
   to the push toward the left)</li>
   
   <li>When the device lies flat on a table, the acceleration value is 
   {@link android.hardware.SensorManager#STANDARD_GRAVITY -STANDARD_GRAVITY},
   which correspond to the force the device applies on the table in reaction
   to gravity.</li>

<p>{@link android.hardware.SensorManager#SENSOR_MAGNETIC_FIELD SENSOR_MAGNETIC_FIELD}:<p>
 All values are in micro-Tesla (uT) and measure the ambient magnetic
 field in the X, Y and -Z axis.
 <p><b><u>Note:</u></b> the magnetic field's Z axis is inverted.
 
@param sensor The ID of the sensor being monitored
@param values The new values for the sensor.
"
      end

      operation 6615045 "onAccuracyChanged"
	public explicit_return_type "void"
	nparams 2
	  param in name "sensor" explicit_type "int"
	  param in name "accuracy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called when the accuracy of a sensor has changed.
See {@link android.hardware.SensorManager SensorManager}
for details.

@param sensor The ID of the sensor being monitored
@param accuracy The new accuracy of this sensor.
"
      end
    end

    class 1179909 "SensorEventListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used for receiving notifications from the SensorManager when
there is new sensor data.
"
      operation 6607493 "onSensorChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1180037 // SensorEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called when there is a new sensor event.  Note that \"on changed\"
is somewhat of a misnomer, as this will also be called if we have a
new reading from a sensor with the exact same sensor values (but a
newer timestamp).

<p>See {@link android.hardware.SensorManager SensorManager}
for details on possible sensor types.
<p>See also {@link android.hardware.SensorEvent SensorEvent}.

<p><b>NOTE:</b> The application doesn't own the
{@link android.hardware.SensorEvent event}
object passed as a parameter and therefore cannot hold on to it.
The object may be part of an internal pool and may be reused by
the framework.

@param event the {@link android.hardware.SensorEvent SensorEvent}.
"
      end

      operation 6607621 "onAccuracyChanged"
	public explicit_return_type "void"
	nparams 2
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "accuracy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called when the accuracy of the registered sensor has changed.  Unlike
onSensorChanged(), this is only called when this accuracy value changes.

<p>See the SENSOR_STATUS_* constants in
{@link android.hardware.SensorManager SensorManager} for details.

@param accuracy The new accuracy of this sensor, one of
        {@code SensorManager.SENSOR_STATUS_*}
"
      end
    end

    class 1180037 "SensorEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a {@link android.hardware.Sensor Sensor} event and
holds information such as the sensor's type, the time-stamp, accuracy and of
course the sensor's {@link SensorEvent#values data}.

<p>
<u>Definition of the coordinate system used by the SensorEvent API.</u>
</p>

<p>
The coordinate-system is defined relative to the screen of the phone in its
default orientation. The axes are not swapped when the device's screen
orientation changes.
</p>

<p>
The X axis is horizontal and points to the right, the Y axis is vertical and
points up and the Z axis points towards the outside of the front face of the
screen. In this system, coordinates behind the screen have negative Z values.
</p>

<p>
<center><img src=\"../../../images/axis_device.png\"
alt=\"Sensors coordinate-system diagram.\" border=\"0\" /></center>
</p>

<p>
<b>Note:</b> This coordinate system is different from the one used in the
Android 2D APIs where the origin is in the top-left corner.
</p>

@see SensorManager
@see SensorEvent
@see Sensor

"
      attribute 4282117 "values"
	const_attribute public explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "<p>
The length and contents of the {@link #values values} array depends on
which {@link android.hardware.Sensor sensor} type is being monitored (see
also {@link SensorEvent} for a definition of the coordinate system used).
</p>

<h4>{@link android.hardware.Sensor#TYPE_ACCELEROMETER
Sensor.TYPE_ACCELEROMETER}:</h4> All values are in SI units (m/s^2)

<ul>
<li> values[0]: Acceleration minus Gx on the x-axis </li>
<li> values[1]: Acceleration minus Gy on the y-axis </li>
<li> values[2]: Acceleration minus Gz on the z-axis </li>
</ul>

<p>
A sensor of this type measures the acceleration applied to the device
(<b>Ad</b>). Conceptually, it does so by measuring forces applied to the
sensor itself (<b>Fs</b>) using the relation:
</p>

<b><center>Ad = - &#8721;Fs / mass</center></b>

<p>
In particular, the force of gravity is always influencing the measured
acceleration:
</p>

<b><center>Ad = -g - &#8721;F / mass</center></b>

<p>
For this reason, when the device is sitting on a table (and obviously not
accelerating), the accelerometer reads a magnitude of <b>g</b> = 9.81
m/s^2
</p>

<p>
Similarly, when the device is in free-fall and therefore dangerously
accelerating towards to ground at 9.81 m/s^2, its accelerometer reads a
magnitude of 0 m/s^2.
</p>

<p>
It should be apparent that in order to measure the real acceleration of
the device, the contribution of the force of gravity must be eliminated.
This can be achieved by applying a <i>high-pass</i> filter. Conversely, a
<i>low-pass</i> filter can be used to isolate the force of gravity.
</p>

<pre class=\"prettyprint\">

    public void onSensorChanged(SensorEvent event)
    {
         // alpha is calculated as t / (t + dT)
         // with t, the low-pass filter's time-constant
         // and dT, the event delivery rate

         final float alpha = 0.8;

         gravity[0] = alpha * gravity[0] + (1 - alpha) * event.values[0];
         gravity[1] = alpha * gravity[1] + (1 - alpha) * event.values[1];
         gravity[2] = alpha * gravity[2] + (1 - alpha) * event.values[2];

         linear_acceleration[0] = event.values[0] - gravity[0];
         linear_acceleration[1] = event.values[1] - gravity[1];
         linear_acceleration[2] = event.values[2] - gravity[2];
    }
</pre>

<p>
<u>Examples</u>:
<ul>
<li>When the device lies flat on a table and is pushed on its left side
toward the right, the x acceleration value is positive.</li>

<li>When the device lies flat on a table, the acceleration value is
+9.81, which correspond to the acceleration of the device (0 m/s^2) minus
the force of gravity (-9.81 m/s^2).</li>

<li>When the device lies flat on a table and is pushed toward the sky
with an acceleration of A m/s^2, the acceleration value is equal to
A+9.81 which correspond to the acceleration of the device (+A m/s^2)
minus the force of gravity (-9.81 m/s^2).</li>
</ul>


<h4>{@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD
Sensor.TYPE_MAGNETIC_FIELD}:</h4>
All values are in micro-Tesla (uT) and measure the ambient magnetic field
in the X, Y and Z axis.

<h4>{@link android.hardware.Sensor#TYPE_GYROSCOPE Sensor.TYPE_GYROSCOPE}:
</h4> All values are in radians/second and measure the rate of rotation
around the device's local X, Y and Z axis. The coordinate system is the
same as is used for the acceleration sensor. Rotation is positive in the
counter-clockwise direction. That is, an observer looking from some
positive location on the x, y or z axis at a device positioned on the
origin would report positive rotation if the device appeared to be
rotating counter clockwise. Note that this is the standard mathematical
definition of positive rotation and does not agree with the definition of
roll given earlier.
<ul>
<li> values[0]: Angular speed around the x-axis </li>
<li> values[1]: Angular speed around the y-axis </li>
<li> values[2]: Angular speed around the z-axis </li>
</ul>
<p>
Typically the output of the gyroscope is integrated over time to
calculate a rotation describing the change of angles over the time step,
for example:
</p>

<pre class=\"prettyprint\">
    private static final float NS2S = 1.0f / 1000000000.0f;
    private final float[] deltaRotationVector = new float[4]();
    private float timestamp;

    public void onSensorChanged(SensorEvent event) {
         // This time step's delta rotation to be multiplied by the current rotation
         // after computing it from the gyro sample data.
         if (timestamp != 0) {
             final float dT = (event.timestamp - timestamp) * NS2S;
             // Axis of the rotation sample, not normalized yet.
             float axisX = event.values[0];
             float axisY = event.values[1];
             float axisZ = event.values[2];

             // Calculate the angular speed of the sample
             float omegaMagnitude = sqrt(axisX*axisX + axisY*axisY + axisZ*axisZ);

             // Normalize the rotation vector if it's big enough to get the axis
             if (omegaMagnitude > EPSILON) {
                 axisX /= omegaMagnitude;
                 axisY /= omegaMagnitude;
                 axisZ /= omegaMagnitude;
             }

             // Integrate around this axis with the angular speed by the time step
             // in order to get a delta rotation from this sample over the time step
             // We will convert this axis-angle representation of the delta rotation
             // into a quaternion before turning it into the rotation matrix.
             float thetaOverTwo = omegaMagnitude * dT / 2.0f;
             float sinThetaOverTwo = sin(thetaOverTwo);
             float cosThetaOverTwo = cos(thetaOverTwo);
             deltaRotationVector[0] = sinThetaOverTwo * axisX;
             deltaRotationVector[1] = sinThetaOverTwo * axisY;
             deltaRotationVector[2] = sinThetaOverTwo * axisZ;
             deltaRotationVector[3] = cosThetaOverTwo;
         }
         timestamp = event.timestamp;
         float[] deltaRotationMatrix = new float[9];
         SensorManager.getRotationMatrixFromVector(deltaRotationMatrix, deltaRotationVector);
         // User code should concatenate the delta rotation we computed with the current rotation
         // in order to get the updated rotation.
         // rotationCurrent = rotationCurrent * deltaRotationMatrix;
    }
</pre>
<p>
In practice, the gyroscope noise and offset will introduce some errors
which need to be compensated for. This is usually done using the
information from other sensors, but is beyond the scope of this document.
</p>
<h4>{@link android.hardware.Sensor#TYPE_LIGHT Sensor.TYPE_LIGHT}:</h4>
<ul>
<li>values[0]: Ambient light level in SI lux units </li>
</ul>

<h4>{@link android.hardware.Sensor#TYPE_PRESSURE Sensor.TYPE_PRESSURE}:</h4>
<ul>
<li>values[0]: Atmospheric pressure in hPa (millibar) </li>
</ul>

<h4>{@link android.hardware.Sensor#TYPE_PROXIMITY Sensor.TYPE_PROXIMITY}:
</h4>

<ul>
<li>values[0]: Proximity sensor distance measured in centimeters </li>
</ul>

<p>
<b>Note:</b> Some proximity sensors only support a binary <i>near</i> or
<i>far</i> measurement. In this case, the sensor should report its
{@link android.hardware.Sensor#getMaximumRange() maximum range} value in
the <i>far</i> state and a lesser value in the <i>near</i> state.
</p>

 <h4>{@link android.hardware.Sensor#TYPE_GRAVITY Sensor.TYPE_GRAVITY}:</h4>
 <p>A three dimensional vector indicating the direction and magnitude of gravity.  Units
 are m/s^2. The coordinate system is the same as is used by the acceleration sensor.</p>
 <p><b>Note:</b> When the device is at rest, the output of the gravity sensor should be identical
 to that of the accelerometer.</p>

 <h4>{@link android.hardware.Sensor#TYPE_LINEAR_ACCELERATION Sensor.TYPE_LINEAR_ACCELERATION}:</h4>
 A three dimensional vector indicating acceleration along each device axis, not including
 gravity.  All values have units of m/s^2.  The coordinate system is the same as is used by the
 acceleration sensor.
 <p>The output of the accelerometer, gravity and  linear-acceleration sensors must obey the
 following relation:</p>
  <p><ul>acceleration = gravity + linear-acceleration</ul></p>

 <h4>{@link android.hardware.Sensor#TYPE_ROTATION_VECTOR Sensor.TYPE_ROTATION_VECTOR}:</h4>
 <p>The rotation vector represents the orientation of the device as a combination of an <i>angle</i>
 and an <i>axis</i>, in which the device has rotated through an angle &#952 around an axis
 &lt;x, y, z>.</p>
 <p>The three elements of the rotation vector are
 &lt;x*sin(&#952/2), y*sin(&#952/2), z*sin(&#952/2)>, such that the magnitude of the rotation
 vector is equal to sin(&#952/2), and the direction of the rotation vector is equal to the
 direction of the axis of rotation.</p>
 </p>The three elements of the rotation vector are equal to
 the last three components of a <b>unit</b> quaternion
 &lt;cos(&#952/2), x*sin(&#952/2), y*sin(&#952/2), z*sin(&#952/2)>.</p>
 <p>Elements of the rotation vector are unitless.
 The x,y, and z axis are defined in the same way as the acceleration
 sensor.</p>
 The reference coordinate system is defined as a direct orthonormal basis,
 where:
</p>

<ul>
<li>X is defined as the vector product <b>Y.Z</b> (It is tangential to
the ground at the device's current location and roughly points East).</li>
<li>Y is tangential to the ground at the device's current location and
points towards magnetic north.</li>
<li>Z points towards the sky and is perpendicular to the ground.</li>
</ul>

<p>
<center><img src=\"../../../images/axis_globe.png\"
alt=\"World coordinate-system diagram.\" border=\"0\" /></center>
</p>

<ul>
<li> values[0]: x*sin(&#952/2) </li>
<li> values[1]: y*sin(&#952/2) </li>
<li> values[2]: z*sin(&#952/2) </li>
<li> values[3]: cos(&#952/2) </li>
<li> values[4]: estimated heading Accuracy (in radians) (-1 if unavailable)</li>
</ul>
<p> values[3], originally optional, will always be present from SDK Level 18 onwards.
values[4] is a new value that has been added in SDK Level 18.
</p>

<h4>{@link android.hardware.Sensor#TYPE_ORIENTATION
Sensor.TYPE_ORIENTATION}:</h4> All values are angles in degrees.

<ul>
<li> values[0]: Azimuth, angle between the magnetic north direction and the
y-axis, around the z-axis (0 to 359). 0=North, 90=East, 180=South,
270=West
</p>

<p>
values[1]: Pitch, rotation around x-axis (-180 to 180), with positive
values when the z-axis moves <b>toward</b> the y-axis.
</p>

<p>
values[2]: Roll, rotation around the y-axis (-90 to 90)
increasing as the device moves clockwise.
</p>
</ul>

<p>
<b>Note:</b> This definition is different from <b>yaw, pitch and roll</b>
used in aviation where the X axis is along the long side of the plane
(tail to nose).
</p>

<p>
<b>Note:</b> This sensor type exists for legacy reasons, please use
{@link android.hardware.Sensor#TYPE_ROTATION_VECTOR
rotation vector sensor type} and
{@link android.hardware.SensorManager#getRotationMatrix
getRotationMatrix()} in conjunction with
{@link android.hardware.SensorManager#remapCoordinateSystem
remapCoordinateSystem()} and
{@link android.hardware.SensorManager#getOrientation getOrientation()} to
compute these values instead.
</p>

<p>
<b>Important note:</b> For historical reasons the roll angle is positive
in the clockwise direction (mathematically speaking, it should be
positive in the counter-clockwise direction).
</p>

<h4>{@link android.hardware.Sensor#TYPE_RELATIVE_HUMIDITY
Sensor.TYPE_RELATIVE_HUMIDITY}:</h4>
<ul>
<li> values[0]: Relative ambient air humidity in percent </li>
</ul>
<p>
When relative ambient air humidity and ambient temperature are
measured, the dew point and absolute humidity can be calculated.
</p>
<u>Dew Point</u>
<p>
The dew point is the temperature to which a given parcel of air must be
cooled, at constant barometric pressure, for water vapor to condense
into water.
</p>
<center><pre>
                   ln(RH/100%) + m&#183;t/(T<sub>n</sub>+t)
t<sub>d</sub>(t,RH) = T<sub>n</sub> &#183; ------------------------------
                m - [ln(RH/100%) + m&#183;t/(T<sub>n</sub>+t)]
</pre></center>
<dl>
<dt>t<sub>d</sub></dt> <dd>dew point temperature in &deg;C</dd>
<dt>t</dt>             <dd>actual temperature in &deg;C</dd>
<dt>RH</dt>            <dd>actual relative humidity in %</dd>
<dt>m</dt>             <dd>17.62</dd>
<dt>T<sub>n</sub></dt> <dd>243.12 &deg;C</dd>
</dl>
<p>for example:</p>
<pre class=\"prettyprint\">
h = Math.log(rh / 100.0) + (17.62 * t) / (243.12 + t);
td = 243.12 * h / (17.62 - h);
</pre>
<u>Absolute Humidity</u>
<p>
The absolute humidity is the mass of water vapor in a particular volume
of dry air. The unit is g/m<sup>3</sup>.
</p>
<center><pre>
                   RH/100%&#183;A&#183;exp(m&#183;t/(T<sub>n</sub>+t))
d<sub>v</sub>(t,RH) = 216.7 &#183; -------------------------
                          273.15 + t
</pre></center>
<dl>
<dt>d<sub>v</sub></dt> <dd>absolute humidity in g/m<sup>3</sup></dd>
<dt>t</dt>             <dd>actual temperature in &deg;C</dd>
<dt>RH</dt>            <dd>actual relative humidity in %</dd>
<dt>m</dt>             <dd>17.62</dd>
<dt>T<sub>n</sub></dt> <dd>243.12 &deg;C</dd>
<dt>A</dt>             <dd>6.112 hPa</dd>
</dl>
<p>for example:</p>
<pre class=\"prettyprint\">
dv = 216.7 *
(rh / 100.0 * 6.112 * Math.exp(17.62 * t / (243.12 + t)) / (273.15 + t));
</pre>

<h4>{@link android.hardware.Sensor#TYPE_AMBIENT_TEMPERATURE Sensor.TYPE_AMBIENT_TEMPERATURE}:
</h4>

<ul>
<li> values[0]: ambient (room) temperature in degree Celsius.</li>
</ul>


<h4>{@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD_UNCALIBRATED
Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED}:</h4>
Similar to {@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD},
but the hard iron calibration is reported separately instead of being included
in the measurement. Factory calibration and temperature compensation will still
be applied to the \"uncalibrated\" measurement. Assumptions that the magnetic field
is due to the Earth's poles is avoided.
<p>
The values array is shown below:
<ul>
<li> values[0] = x_uncalib </li>
<li> values[1] = y_uncalib </li>
<li> values[2] = z_uncalib </li>
<li> values[3] = x_bias </li>
<li> values[4] = y_bias </li>
<li> values[5] = z_bias </li>
</ul>
</p>
<p>
x_uncalib, y_uncalib, z_uncalib are the measured magnetic field in X, Y, Z axes.
Soft iron and temperature calibrations are applied. But the hard iron
calibration is not applied. The values are in micro-Tesla (uT).
</p>
<p>
x_bias, y_bias, z_bias give the iron bias estimated in X, Y, Z axes.
Each field is a component of the estimated hard iron calibration.
The values are in micro-Tesla (uT).
</p>
<p> Hard iron - These distortions arise due to the magnetized iron, steel or permanent
magnets on the device.
Soft iron - These distortions arise due to the interaction with the earth's magnetic
field.
</p>
<h4> {@link android.hardware.Sensor#TYPE_GAME_ROTATION_VECTOR
Sensor.TYPE_GAME_ROTATION_VECTOR}:</h4>
Identical to {@link android.hardware.Sensor#TYPE_ROTATION_VECTOR} except that it
doesn't use the geomagnetic field. Therefore the Y axis doesn't
point north, but instead to some other reference, that reference is
allowed to drift by the same order of magnitude as the gyroscope
drift around the Z axis.
<p>
In the ideal case, a phone rotated and returning to the same real-world
orientation will report the same game rotation vector
(without using the earth's geomagnetic field). However, the orientation
may drift somewhat over time. See {@link android.hardware.Sensor#TYPE_ROTATION_VECTOR}
for a detailed description of the values. This sensor will not have
the estimated heading accuracy value.
</p>

<h4> {@link android.hardware.Sensor#TYPE_GYROSCOPE_UNCALIBRATED
Sensor.TYPE_GYROSCOPE_UNCALIBRATED}:</h4>
All values are in radians/second and measure the rate of rotation
around the X, Y and Z axis. An estimation of the drift on each axis is
reported as well.
<p>
No gyro-drift compensation is performed. Factory calibration and temperature
compensation is still applied to the rate of rotation (angular speeds).
</p>
<p>
The coordinate system is the same as is used for the
{@link android.hardware.Sensor#TYPE_ACCELEROMETER}
Rotation is positive in the counter-clockwise direction (right-hand rule).
That is, an observer looking from some positive location on the x, y or z axis
at a device positioned on the origin would report positive rotation if the device
appeared to be rotating counter clockwise.
The range would at least be 17.45 rad/s (ie: ~1000 deg/s).
<ul>
<li> values[0] : angular speed (w/o drift compensation) around the X axis in rad/s </li>
<li> values[1] : angular speed (w/o drift compensation) around the Y axis in rad/s </li>
<li> values[2] : angular speed (w/o drift compensation) around the Z axis in rad/s </li>
<li> values[3] : estimated drift around X axis in rad/s </li>
<li> values[4] : estimated drift around Y axis in rad/s </li>
<li> values[5] : estimated drift around Z axis in rad/s </li>
</ul>
</p>
<p><b>Pro Tip:</b> Always use the length of the values array while performing operations
on it. In earlier versions, this used to be always 3 which has changed now. </p>

  <h4>{@link android.hardware.Sensor#TYPE_POSE_6DOF
Sensor.TYPE_POSE_6DOF}:</h4>

A TYPE_POSE_6DOF event consists of a rotation expressed as a quaternion and a translation
expressed in SI units. The event also contains a delta rotation and translation that show
how the device?s pose has changed since the previous sequence numbered pose.
The event uses the cannonical Android Sensor axes.


<ul>
<li> values[0]: x*sin(&#952/2) </li>
<li> values[1]: y*sin(&#952/2) </li>
<li> values[2]: z*sin(&#952/2) </li>
<li> values[3]: cos(&#952/2)   </li>


<li> values[4]: Translation along x axis from an arbitrary origin. </li>
<li> values[5]: Translation along y axis from an arbitrary origin. </li>
<li> values[6]: Translation along z axis from an arbitrary origin. </li>

<li> values[7]:  Delta quaternion rotation x*sin(&#952/2) </li>
<li> values[8]:  Delta quaternion rotation y*sin(&#952/2) </li>
<li> values[9]:  Delta quaternion rotation z*sin(&#952/2) </li>
<li> values[10]: Delta quaternion rotation cos(&#952/2) </li>

<li> values[11]: Delta translation along x axis. </li>
<li> values[12]: Delta translation along y axis. </li>
<li> values[13]: Delta translation along z axis. </li>

<li> values[14]: Sequence number </li>

</ul>

  <h4>{@link android.hardware.Sensor#TYPE_STATIONARY_DETECT
Sensor.TYPE_STATIONARY_DETECT}:</h4>

A TYPE_STATIONARY_DETECT event is produced if the device has been
stationary for at least 5 seconds with a maximal latency of 5
additional seconds. ie: it may take up anywhere from 5 to 10 seconds
afte the device has been at rest to trigger this event.

The only allowed value is 1.0.

<ul>
 <li> values[0]: 1.0 </li>
</ul>

  <h4>{@link android.hardware.Sensor#TYPE_MOTION_DETECT
Sensor.TYPE_MOTION_DETECT}:</h4>

A TYPE_MOTION_DETECT event is produced if the device has been in
motion  for at least 5 seconds with a maximal latency of 5
additional seconds. ie: it may take up anywhere from 5 to 10 seconds
afte the device has been at rest to trigger this event.

The only allowed value is 1.0.

<ul>
 <li> values[0]: 1.0 </li>
</ul>

  <h4>{@link android.hardware.Sensor#TYPE_HEART_BEAT
Sensor.TYPE_HEART_BEAT}:</h4>

A sensor of this type returns an event everytime a hear beat peak is
detected.

Peak here ideally corresponds to the positive peak in the QRS complex of
an ECG signal.

<ul>
 <li> values[0]: confidence</li>
</ul>

<p>
A confidence value of 0.0 indicates complete uncertainty - that a peak
is as likely to be at the indicated timestamp as anywhere else.
A confidence value of 1.0 indicates complete certainly - that a peak is
completely unlikely to be anywhere else on the QRS complex.
</p>

<h4>{@link android.hardware.Sensor#TYPE_LOW_LATENCY_OFFBODY_DETECT
Sensor.TYPE_LOW_LATENCY_OFFBODY_DETECT}:</h4>

<p>
A sensor of this type returns an event every time the device transitions
from off-body to on-body and from on-body to off-body (e.g. a wearable
device being removed from the wrist would trigger an event indicating an
off-body transition). The event returned will contain a single value to
indicate off-body state:
</p>

<ul>
 <li> values[0]: off-body state</li>
</ul>

<p>
    Valid values for off-body state:
<ul>
 <li> 1.0 (device is on-body)</li>
 <li> 0.0 (device is off-body)</li>
</ul>
</p>

<p>
When a sensor of this type is activated, it must deliver the initial
on-body or off-body event representing the current device state within
5 seconds of activating the sensor.
</p>

<p>
This sensor must be able to detect and report an on-body to off-body
transition within 1 second of the device being removed from the body,
and must be able to detect and report an off-body to on-body transition
within 5 seconds of the device being put back onto the body.
</p>

<h4>{@link android.hardware.Sensor#TYPE_ACCELEROMETER_UNCALIBRATED
Sensor.TYPE_ACCELEROMETER_UNCALIBRATED}:</h4> All values are in SI
units (m/s^2)

Similar to {@link android.hardware.Sensor#TYPE_ACCELEROMETER},
Factory calibration and temperature compensation will still be applied
to the \"uncalibrated\" measurement.

<p>
The values array is shown below:
<ul>
<li> values[0] = x_uncalib without bias compensation </li>
<li> values[1] = y_uncalib without bias compensation </li>
<li> values[2] = z_uncalib without bias compensation </li>
<li> values[3] = estimated x_bias </li>
<li> values[4] = estimated y_bias </li>
<li> values[5] = estimated z_bias </li>
</ul>
</p>
<p>
x_uncalib, y_uncalib, z_uncalib are the measured acceleration in X, Y, Z
axes similar to the  {@link android.hardware.Sensor#TYPE_ACCELEROMETER},
without any bias correction (factory bias compensation and any
temperature compensation is allowed).
x_bias, y_bias, z_bias are the estimated biases.
</p>

@see GeomagneticField

"
      end

      classrelation 1764485 // sensor (<unidirectional association>)
	relation 1764485 --->
	  a role_name "sensor" public
	    comment "
The sensor that generated this event. See
{@link android.hardware.SensorManager SensorManager} for details.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1764485 // sensor (<unidirectional association>)
	  b parent class_ref 1180165 // Sensor
      end

      attribute 4282245 "accuracy"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The accuracy of this event. See {@link android.hardware.SensorManager
SensorManager} for details.

"
      end

      attribute 4282373 "timestamp"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The time in nanosecond at which the event happened

"
      end

      operation 6614149 "SensorEvent"
	package explicit_return_type ""
	nparams 1
	  param in name "valueSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1180165 "Sensor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class representing a sensor. Use {@link SensorManager#getSensorList} to get
the list of available Sensors.

@see SensorManager
@see SensorEventListener
@see SensorEvent

"
      attribute 4265349 "TYPE_ACCELEROMETER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an accelerometer sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4265477 "STRING_TYPE_ACCELEROMETER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.accelerometer\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an accelerometer sensor type.

@see #TYPE_ACCELEROMETER

"
      end

      attribute 4265605 "TYPE_MAGNETIC_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a magnetic field sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4265733 "STRING_TYPE_MAGNETIC_FIELD"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.magnetic_field\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a magnetic field sensor type.

@see #TYPE_MAGNETIC_FIELD

"
      end

      attribute 4265861 "TYPE_ORIENTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an orientation sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

@deprecated use {@link android.hardware.SensorManager#getOrientation
            SensorManager.getOrientation()} instead.

"
      end

      attribute 4265989 "STRING_TYPE_ORIENTATION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.orientation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an orientation sensor type.

@see #TYPE_ORIENTATION
@deprecated use {@link android.hardware.SensorManager#getOrientation
            SensorManager.getOrientation()} instead.

"
      end

      attribute 4266117 "TYPE_GYROSCOPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a gyroscope sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details. 
"
      end

      attribute 4266245 "STRING_TYPE_GYROSCOPE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.gyroscope\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a gyroscope sensor type.

@see #TYPE_GYROSCOPE

"
      end

      attribute 4266373 "TYPE_LIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a light sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4266501 "STRING_TYPE_LIGHT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.light\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a light sensor type.

@see #TYPE_LIGHT

"
      end

      attribute 4266629 "TYPE_PRESSURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a pressure sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4266757 "STRING_TYPE_PRESSURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.pressure\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a pressure sensor type.

@see #TYPE_PRESSURE

"
      end

      attribute 4266885 "TYPE_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a temperature sensor type

@deprecated use
            {@link android.hardware.Sensor#TYPE_AMBIENT_TEMPERATURE
            Sensor.TYPE_AMBIENT_TEMPERATURE} instead.

"
      end

      attribute 4267013 "STRING_TYPE_TEMPERATURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.temperature\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a temperature sensor type

@see #TYPE_TEMPERATURE
@deprecated use
            {@link android.hardware.Sensor#STRING_TYPE_AMBIENT_TEMPERATURE
            Sensor.STRING_TYPE_AMBIENT_TEMPERATURE} instead.

"
      end

      attribute 4267141 "TYPE_PROXIMITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a proximity sensor type. This is a wake up sensor.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.
@see #isWakeUpSensor()

"
      end

      attribute 4267269 "STRING_TYPE_PROXIMITY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.proximity\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a proximity sensor type.

@see #TYPE_PROXIMITY

"
      end

      attribute 4267397 "TYPE_GRAVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a gravity sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4267525 "STRING_TYPE_GRAVITY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.gravity\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a gravity sensor type.

@see #TYPE_GRAVITY

"
      end

      attribute 4267653 "TYPE_LINEAR_ACCELERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a linear acceleration sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4267781 "STRING_TYPE_LINEAR_ACCELERATION"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.linear_acceleration\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a linear acceleration sensor type.

@see #TYPE_LINEAR_ACCELERATION

"
      end

      attribute 4267909 "TYPE_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a rotation vector sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4268037 "STRING_TYPE_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.rotation_vector\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a rotation vector sensor type.

@see #TYPE_ROTATION_VECTOR

"
      end

      attribute 4268165 "TYPE_RELATIVE_HUMIDITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a relative humidity sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4268293 "STRING_TYPE_RELATIVE_HUMIDITY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.relative_humidity\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a relative humidity sensor type

@see #TYPE_RELATIVE_HUMIDITY

"
      end

      attribute 4268421 "TYPE_AMBIENT_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an ambient temperature sensor type.
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values}
for more details.

"
      end

      attribute 4268549 "STRING_TYPE_AMBIENT_TEMPERATURE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.ambient_temperature\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an ambient temperature sensor type.

@see #TYPE_AMBIENT_TEMPERATURE

"
      end

      attribute 4268677 "TYPE_MAGNETIC_FIELD_UNCALIBRATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an uncalibrated magnetic field sensor type.
<p>
Similar to {@link #TYPE_MAGNETIC_FIELD} but the hard iron calibration (device calibration
due to distortions that arise from magnetized iron, steel or permanent magnets on the
device) is not considered in the given sensor values. However, such hard iron bias values
are returned to you separately in the result {@link android.hardware.SensorEvent#values}
so you may use them for custom calibrations.
<p>Also, no periodic calibration is performed
(i.e. there are no discontinuities in the data stream while using this sensor) and
assumptions that the magnetic field is due to the Earth's poles is avoided, but
factory calibration and temperature compensation have been performed.
</p>
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.

"
      end

      attribute 4268805 "STRING_TYPE_MAGNETIC_FIELD_UNCALIBRATED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.magnetic_field_uncalibrated\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an uncalibrated magnetic field sensor type.

@see #TYPE_MAGNETIC_FIELD_UNCALIBRATED

"
      end

      attribute 4268933 "TYPE_GAME_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an uncalibrated rotation vector sensor type.
<p>Identical to {@link #TYPE_ROTATION_VECTOR} except that it doesn't
use the geomagnetic field. Therefore the Y axis doesn't
point north, but instead to some other reference, that reference is
allowed to drift by the same order of magnitude as the gyroscope
drift around the Z axis.
<p>
In the ideal case, a phone rotated and returning to the same real-world
orientation should report the same game rotation vector
(without using the earth's geomagnetic field). However, the orientation
may drift somewhat over time.
</p>
<p>See {@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.

"
      end

      attribute 4269061 "STRING_TYPE_GAME_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.game_rotation_vector\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an uncalibrated rotation vector sensor type.

@see #TYPE_GAME_ROTATION_VECTOR

"
      end

      attribute 4269189 "TYPE_GYROSCOPE_UNCALIBRATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an uncalibrated gyroscope sensor type.
<p>Similar to {@link #TYPE_GYROSCOPE} but no gyro-drift compensation has been performed
to adjust the given sensor values. However, such gyro-drift bias values
are returned to you separately in the result {@link android.hardware.SensorEvent#values}
so you may use them for custom calibrations.
<p>Factory calibration and temperature compensation is still applied
to the rate of rotation (angular speeds).
</p>
<p> See {@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.

"
      end

      attribute 4269317 "STRING_TYPE_GYROSCOPE_UNCALIBRATED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.gyroscope_uncalibrated\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an uncalibrated gyroscope sensor type.

@see #TYPE_GYROSCOPE_UNCALIBRATED

"
      end

      attribute 4269445 "TYPE_SIGNIFICANT_MOTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a significant motion trigger sensor.
<p>
It triggers when an event occurs and then automatically disables
itself. The sensor continues to operate while the device is asleep
and will automatically wake the device to notify when significant
motion is detected. The application does not need to hold any wake
locks for this sensor to trigger. This is a wake up sensor.
<p>See {@link TriggerEvent} for more details.

@see #isWakeUpSensor()

"
      end

      attribute 4269573 "STRING_TYPE_SIGNIFICANT_MOTION"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.significant_motion\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a significant motion trigger sensor.

@see #TYPE_SIGNIFICANT_MOTION

"
      end

      attribute 4269701 "TYPE_STEP_DETECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a step detector sensor.
<p>
A sensor of this type triggers an event each time a step is taken by the user. The only
allowed value to return is 1.0 and an event is generated for each step. Like with any other
event, the timestamp indicates when the event (here the step) occurred, this corresponds to
when the foot hit the ground, generating a high variation in acceleration. This sensor is
only for detecting every individual step as soon as it is taken, for example to perform dead
reckoning. If you only need aggregate number of steps taken over a period of time, register
for {@link #TYPE_STEP_COUNTER} instead. It is defined as a
{@link Sensor#REPORTING_MODE_SPECIAL_TRIGGER} sensor.
<p>
See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.

"
      end

      attribute 4269829 "STRING_TYPE_STEP_DETECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.step_detector\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a step detector sensor.

@see #TYPE_STEP_DETECTOR

"
      end

      attribute 4269957 "TYPE_STEP_COUNTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a step counter sensor.
<p>
A sensor of this type returns the number of steps taken by the user since the last reboot
while activated. The value is returned as a float (with the fractional part set to zero) and
is reset to zero only on a system reboot. The timestamp of the event is set to the time when
the last step for that event was taken. This sensor is implemented in hardware and is
expected to be low power. If you want to continuously track the number of steps over a long
period of time, do NOT unregister for this sensor, so that it keeps counting steps in the
background even when the AP is in suspend mode and report the aggregate count when the AP
is awake. Application needs to stay registered for this sensor because step counter does not
count steps if it is not activated. This sensor is ideal for fitness tracking applications.
It is defined as an {@link Sensor#REPORTING_MODE_ON_CHANGE} sensor.
<p>
See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.

"
      end

      attribute 4270085 "STRING_TYPE_STEP_COUNTER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.step_counter\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a step counter sensor.

@see #TYPE_STEP_COUNTER

"
      end

      attribute 4270213 "TYPE_GEOMAGNETIC_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a geo-magnetic rotation vector.
<p>
Similar to {@link #TYPE_ROTATION_VECTOR}, but using a magnetometer instead of using a
gyroscope. This sensor uses lower power than the other rotation vectors, because it doesn't
use the gyroscope. However, it is more noisy and will work best outdoors.
<p>
See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.

"
      end

      attribute 4270341 "STRING_TYPE_GEOMAGNETIC_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.geomagnetic_rotation_vector\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a geo-magnetic rotation vector.

@see #TYPE_GEOMAGNETIC_ROTATION_VECTOR

"
      end

      attribute 4270469 "TYPE_HEART_RATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a heart rate monitor.
<p>
The reported value is the heart rate in beats per minute.
<p>
The reported accuracy represents the status of the monitor during the reading. See the
{@code SENSOR_STATUS_*} constants in {@link android.hardware.SensorManager SensorManager}
for more details on accuracy/status values. In particular, when the accuracy is
{@code SENSOR_STATUS_UNRELIABLE} or {@code SENSOR_STATUS_NO_CONTACT}, the heart rate
value should be discarded.
<p>
This sensor requires permission {@code android.permission.BODY_SENSORS}.
It will not be returned by {@code SensorManager.getSensorsList} nor
{@code SensorManager.getDefaultSensor} if the application doesn't have this permission.

"
      end

      attribute 4270597 "STRING_TYPE_HEART_RATE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.heart_rate\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a heart rate monitor.

@see #TYPE_HEART_RATE

"
      end

      attribute 4270725 "TYPE_TILT_DETECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A sensor of this type generates an event each time a tilt event is detected. A tilt event
is generated if the direction of the 2-seconds window average gravity changed by at
least 35 degrees since the activation of the sensor. It is a wake up sensor.

@hide
@see #isWakeUpSensor()

"
      end

      attribute 4270853 "SENSOR_STRING_TYPE_TILT_DETECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.tilt_detector\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a wake up tilt detector sensor type.

@hide
@see #TYPE_TILT_DETECTOR

"
      end

      attribute 4270981 "TYPE_WAKE_GESTURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a wake gesture sensor.
<p>
Wake gesture sensors enable waking up the device based on a device specific motion.
<p>
When this sensor triggers, the device behaves as if the power button was pressed, turning the
screen on. This behavior (turning on the screen when this sensor triggers) might be
deactivated by the user in the device settings. Changes in settings do not impact the
behavior of the sensor: only whether the framework turns the screen on when it triggers.
<p>
The actual gesture to be detected is not specified, and can be chosen by the manufacturer of
the device. This sensor must be low power, as it is likely to be activated 24/7.
Values of events created by this sensors should not be used.

@see #isWakeUpSensor()
@hide This sensor is expected to only be used by the system ui

"
      end

      attribute 4271109 "STRING_TYPE_WAKE_GESTURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.wake_gesture\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a wake gesture sensor.

@hide This sensor is expected to only be used by the system ui
@see #TYPE_WAKE_GESTURE

"
      end

      attribute 4271237 "TYPE_GLANCE_GESTURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a wake gesture sensor.
<p>
A sensor enabling briefly turning the screen on to enable the user to
glance content on screen based on a specific motion.  The device should
turn the screen off after a few moments.
<p>
When this sensor triggers, the device turns the screen on momentarily
to allow the user to glance notifications or other content while the
device remains locked in a non-interactive state (dozing). This behavior
(briefly turning on the screen when this sensor triggers) might be deactivated
by the user in the device settings. Changes in settings do not impact the
behavior of the sensor: only whether the framework briefly turns the screen on
when it triggers.
<p>
The actual gesture to be detected is not specified, and can be chosen by the manufacturer of
the device. This sensor must be low power, as it is likely to be activated 24/7.
Values of events created by this sensors should not be used.

@see #isWakeUpSensor()
@hide This sensor is expected to only be used by the system ui

"
      end

      attribute 4271365 "STRING_TYPE_GLANCE_GESTURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.glance_gesture\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a wake gesture sensor.

@hide This sensor is expected to only be used by the system ui
@see #TYPE_GLANCE_GESTURE

"
      end

      attribute 4271493 "TYPE_PICK_UP_GESTURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a pick up sensor.

A sensor of this type triggers when the device is picked up regardless of wherever it was
before (desk, pocket, bag). The only allowed return value is 1.0. This sensor deactivates
itself immediately after it triggers.

@hide Expected to be used internally for always on display.

"
      end

      attribute 4271621 "STRING_TYPE_PICK_UP_GESTURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.pick_up_gesture\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a pick up sensor.

@hide This sensor is expected to be used internally for always on display.
@see #TYPE_PICK_UP_GESTURE

"
      end

      attribute 4271749 "TYPE_WRIST_TILT_GESTURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a wrist tilt gesture sensor.

A sensor of this type triggers when the device face is tilted towards the user.
The only allowed return value is 1.0.
This sensor remains active until disabled.

@hide This sensor is expected to only be used by the system ui

"
      end

      attribute 4271877 "STRING_TYPE_WRIST_TILT_GESTURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.wrist_tilt_gesture\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a wrist tilt gesture sensor.

@hide This sensor is expected to only be used by the system ui
@see #TYPE_WRIST_TILT_GESTURE

"
      end

      attribute 4272005 "TYPE_DEVICE_ORIENTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 27"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The current orientation of the device.
<p>
See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.

@hide Expected to be used internally for auto-rotate and speaker rotation.


"
      end

      attribute 4272133 "STRING_TYPE_DEVICE_ORIENTATION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.device_orientation\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a device orientation sensor type.

@hide
@see #TYPE_DEVICE_ORIENTATION

"
      end

      attribute 4272261 "TYPE_POSE_6DOF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 28"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a pose sensor with 6 degrees of freedom.

Similar to {@link #TYPE_ROTATION_VECTOR}, with additional delta
translation from an arbitrary reference point.

See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.

Can use camera, depth sensor etc to compute output value.

This is expected to be a high power sensor and expected only to be
used when the screen is on.

Expected to be more accurate than the rotation vector alone.


"
      end

      attribute 4272389 "STRING_TYPE_POSE_6DOF"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.pose_6dof\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a pose sensor with 6 degrees of freedom.

@see #TYPE_POSE_6DOF

"
      end

      attribute 4272517 "TYPE_STATIONARY_DETECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 29"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a stationary detect sensor.

See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.


"
      end

      attribute 4272645 "STRING_TYPE_STATIONARY_DETECT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.stationary_detect\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a stationary detection sensor.

@see #TYPE_STATIONARY_DETECT

"
      end

      attribute 4272773 "TYPE_MOTION_DETECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a motion detect sensor.

See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.


"
      end

      attribute 4272901 "STRING_TYPE_MOTION_DETECT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.motion_detect\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a motion detection sensor.

@see #TYPE_MOTION_DETECT

"
      end

      attribute 4273029 "TYPE_HEART_BEAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 31"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a motion detect sensor.

See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.


"
      end

      attribute 4273157 "STRING_TYPE_HEART_BEAT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.sensor.heart_beat\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a heart beat sensor.

@see #TYPE_HEART_BEAT

"
      end

      attribute 4273285 "TYPE_DYNAMIC_SENSOR_META"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing a dynamic sensor meta event sensor.

A sensor event of this type is received when a dynamic sensor is added to or removed from
the system. This sensor type should always use special trigger report mode ({@code
SensorManager.REPORTING_MODE_SPECIAL_TRIGGER}).

@hide This sensor is expected to be used only by system services.

"
      end

      attribute 4273413 "STRING_TYPE_DYNAMIC_SENSOR_META"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.dynamic_sensor_meta\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SystemApi
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a dynamic sensor meta event sensor.

@see #TYPE_DYNAMIC_SENSOR_META

@hide This sensor is expected to only be used by the system service

"
      end

      attribute 4273541 "TYPE_LOW_LATENCY_OFFBODY_DETECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 34"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " TYPE_ADDITIONAL_INFO - defined as type 33 in the HAL is not exposed to
applications. There are parts of the framework that require the sensors
to be in the same order as the HAL. Skipping this sensor


A constant describing a low latency off-body detect sensor.

See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.


"
      end

      attribute 4273669 "STRING_TYPE_LOW_LATENCY_OFFBODY_DETECT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.low_latency_offbody_detect\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing a low-latency offbody detector sensor.

@see #TYPE_LOW_LATENCY_OFFBODY_DETECT

"
      end

      attribute 4273797 "TYPE_ACCELEROMETER_UNCALIBRATED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 35"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing an uncalibrated accelerometer sensor.

See {@link android.hardware.SensorEvent#values SensorEvent.values} for more details.


"
      end

      attribute 4273925 "STRING_TYPE_ACCELEROMETER_UNCALIBRATED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.sensor.accelerometer_uncalibrated\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant string describing an uncalibrated accelerometer sensor.

@see #TYPE_ACCELEROMETER_UNCALIBRATED


"
      end

      attribute 4274053 "TYPE_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "A constant describing all sensor types.

"
      end

      attribute 4274181 "TYPE_DEVICE_PRIVATE_BASE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The lowest sensor type vendor defined sensors can use.

All vendor sensor types are greater than or equal to this constant.


"
      end

      attribute 4274309 "SENSOR_FLAG_WAKE_UP_SENSOR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " If this flag is set, the sensor defined as a wake up sensor. This field and REPORTING_MODE_*
 constants are defined as flags in sensors.h. Modify at both places if needed.
"
      end

      attribute 4274437 "REPORTING_MODE_CONTINUOUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Events are reported at a constant rate which is set by the rate parameter of
{@link SensorManager#registerListener(SensorEventListener, Sensor, int)}. Note: If other
applications are requesting a higher rate, the sensor data might be delivered at faster rates
than requested.

"
      end

      attribute 4274565 "REPORTING_MODE_ON_CHANGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Events are reported only when the value changes. Event delivery rate can be limited by
setting appropriate value for rate parameter of
{@link SensorManager#registerListener(SensorEventListener, Sensor, int)} Note: If other
applications are requesting a higher rate, the sensor data might be delivered at faster rates
than requested.

"
      end

      attribute 4274693 "REPORTING_MODE_ONE_SHOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Events are reported in one-shot mode. Upon detection of an event, the sensor deactivates
itself and then sends a single event. Sensors of this reporting mode must be registered to
using {@link SensorManager#requestTriggerSensor(TriggerEventListener, Sensor)}.

"
      end

      attribute 4274821 "REPORTING_MODE_SPECIAL_TRIGGER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Events are reported as described in the description of the sensor. The rate passed to
registerListener might not have an impact on the rate of event delivery. See the sensor
definition for more information on when and how frequently the events are reported. For
example, step detectors report events when a step is detected.

@see SensorManager#registerListener(SensorEventListener, Sensor, int, int)

"
      end

      attribute 4274949 "REPORTING_MODE_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0xE"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Mask for the LSB 2nd, 3rd and fourth bits.
"
      end

      attribute 4275077 "REPORTING_MODE_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4275205 "DATA_INJECTION_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " MASK for LSB fifth bit. Used to know whether the sensor supports data injection or not.
"
      end

      attribute 4275333 "DATA_INJECTION_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4275461 "DYNAMIC_SENSOR_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x20"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " MASK for dynamic sensor (sensor that added during runtime), bit 5.
"
      end

      attribute 4275589 "DYNAMIC_SENSOR_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4275717 "ADDITIONAL_INFO_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x40"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " MASK for indication bit of sensor additional information support, bit 6.
"
      end

      attribute 4275845 "ADDITIONAL_INFO_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4275973 "DIRECT_REPORT_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x380"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Mask for direct mode highest rate level, bit 7, 8, 9.
"
      end

      attribute 4276101 "DIRECT_REPORT_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4276229 "DIRECT_CHANNEL_MASK"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0xC00"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Mask for supported direct channel, bit 10, 11
"
      end

      attribute 4276357 "DIRECT_CHANNEL_SHIFT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4276485 "sSensorReportingModes"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " {
            0, // padding because sensor types start at 1
            3, // SENSOR_TYPE_ACCELEROMETER
            3, // SENSOR_TYPE_GEOMAGNETIC_FIELD
            3, // SENSOR_TYPE_ORIENTATION
            3, // SENSOR_TYPE_GYROSCOPE
            1, // SENSOR_TYPE_LIGHT
            1, // SENSOR_TYPE_PRESSURE
            1, // SENSOR_TYPE_TEMPERATURE
            1, // SENSOR_TYPE_PROXIMITY
            3, // SENSOR_TYPE_GRAVITY
            3, // SENSOR_TYPE_LINEAR_ACCELERATION
            5, // SENSOR_TYPE_ROTATION_VECTOR
            1, // SENSOR_TYPE_RELATIVE_HUMIDITY
            1, // SENSOR_TYPE_AMBIENT_TEMPERATURE
            6, // SENSOR_TYPE_MAGNETIC_FIELD_UNCALIBRATED
            4, // SENSOR_TYPE_GAME_ROTATION_VECTOR
            6, // SENSOR_TYPE_GYROSCOPE_UNCALIBRATED
            1, // SENSOR_TYPE_SIGNIFICANT_MOTION
            1, // SENSOR_TYPE_STEP_DETECTOR
            1, // SENSOR_TYPE_STEP_COUNTER
            5, // SENSOR_TYPE_GEOMAGNETIC_ROTATION_VECTOR
            1, // SENSOR_TYPE_HEART_RATE_MONITOR
            1, // SENSOR_TYPE_WAKE_UP_TILT_DETECTOR
            1, // SENSOR_TYPE_WAKE_GESTURE
            1, // SENSOR_TYPE_GLANCE_GESTURE
            1, // SENSOR_TYPE_PICK_UP_GESTURE
            1, // SENSOR_TYPE_WRIST_TILT_GESTURE
            1, // SENSOR_TYPE_DEVICE_ORIENTATION
            16,// SENSOR_TYPE_POSE_6DOF
            1, // SENSOR_TYPE_STATIONARY_DETECT
            1, // SENSOR_TYPE_MOTION_DETECT
            1, // SENSOR_TYPE_HEART_BEAT
            2, // SENSOR_TYPE_DYNAMIC_SENSOR_META
            16,// skip over additional sensor info type
            1, // SENSOR_TYPE_LOW_LATENCY_OFFBODY_DETECT
            6, // SENSOR_TYPE_ACCELEROMETER_UNCALIBRATED
    }"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " TODO(): The following arrays are fragile and error-prone. This needs to be refactored.
 Note: This needs to be updated, whenever a new sensor is added.
 Holds the reporting mode and maximum length of the values array
 associated with
 {@link SensorEvent} or {@link TriggerEvent} for the Sensor
"
      end

      operation 6609157 "getReportingMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Each sensor has exactly one reporting mode associated with it. This method returns the
reporting mode constant for this sensor type.

@return Reporting mode for the input sensor, one of REPORTING_MODE_* constants.
@see #REPORTING_MODE_CONTINUOUS
@see #REPORTING_MODE_ON_CHANGE
@see #REPORTING_MODE_ONE_SHOT
@see #REPORTING_MODE_SPECIAL_TRIGGER
"
      end

      operation 6609285 "getHighestDirectReportRateLevel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SensorDirectChannel.RateLevel
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Get the highest supported direct report mode rate level of the sensor.

@return Highest direct report rate level of this sensor. If the sensor does not support
direct report mode, this returns {@link SensorDirectChannel#RATE_STOP}.
@see SensorDirectChannel#RATE_STOP
@see SensorDirectChannel#RATE_NORMAL
@see SensorDirectChannel#RATE_FAST
@see SensorDirectChannel#RATE_VERY_FAST
"
      end

      operation 6609413 "isDirectChannelTypeSupported"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "sharedMemType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}@SensorDirectChannel.MemoryType ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Test if a sensor supports a specified direct channel type.

@param sharedMemType type of shared memory used by direct channel.
@return <code>true</code> if the specified shared memory type is supported.
@see SensorDirectChannel#TYPE_MEMORY_FILE
@see SensorDirectChannel#TYPE_HARDWARE_BUFFER
"
      end

      operation 6609541 "getMaxLengthValuesArray"
	class_operation package explicit_return_type "int"
	nparams 2
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "sdkLevel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 4276613 "mName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " Some of these fields are set only by the native bindings in
SensorManager.

"
      end

      attribute 4276741 "mVendor"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4276869 "mVersion"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4276997 "mHandle"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277125 "mType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277253 "mMaxRange"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277381 "mResolution"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277509 "mPower"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277637 "mMinDelay"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277765 "mFifoReservedEventCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4277893 "mFifoMaxEventCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4278021 "mStringType"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4278149 "mRequiredPermission"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4278277 "mMaxDelay"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4278405 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4278533 "mId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 6609669 "Sensor"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6609797 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return name string of the sensor.
"
      end

      operation 6609925 "getVendor"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return vendor string of this sensor.
"
      end

      operation 6610053 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return generic type of this sensor.
"
      end

      operation 6610181 "getVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return version of the sensor's module.
"
      end

      operation 6610309 "getMaximumRange"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return maximum range of the sensor in the sensor's unit.
"
      end

      operation 6610437 "getResolution"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return resolution of the sensor in the sensor's unit.
"
      end

      operation 6610565 "getPower"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return the power in mA used by this sensor while in use
"
      end

      operation 6610693 "getMinDelay"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return the minimum delay allowed between two events in microsecond
or zero if this sensor only returns a value when the data it's measuring
changes.
"
      end

      operation 6610821 "getFifoReservedEventCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return Number of events reserved for this sensor in the batch mode FIFO. This gives a
guarantee on the minimum number of events that can be batched.
"
      end

      operation 6610949 "getFifoMaxEventCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return Maximum number of events of this sensor that could be batched. If this value is zero
it indicates that batch mode is not supported for this sensor. If other applications
registered to batched sensors, the actual number of events that can be batched might be
smaller because the hardware FiFo will be partially used to batch the other sensors.
"
      end

      operation 6611077 "getStringType"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The type of this sensor as a string.
"
      end

      operation 6611205 "getUuid"
	public explicit_return_type "java.util.UUID"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Do not use.

This method throws an UnsupportedOperationException.

Use getId() if you want a unique ID.

@see getId

@hide
"
      end

      operation 6611333 "getId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@return The sensor id that will be unique for the same app unless the device is factory
reset. Return value of 0 means this sensor does not support this function; return value of -1
means this sensor can be uniquely identified in system by combination of its type and name.
"
      end

      operation 6611461 "getRequiredPermission"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "@hide
@return The permission required to access this sensor. If empty, no permission is required.
"
      end

      operation 6611589 "getHandle"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6611717 "getMaxDelay"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This value is defined only for continuous and on-change sensors. It is the delay between two
sensor events corresponding to the lowest frequency that this sensor supports. When lower
frequencies are requested through registerListener() the events will be generated at this
frequency instead. It can be used to estimate when the batch FIFO may be full. Older devices
may set this value to zero. Ignore this value in case it is negative or zero.

@return The max delay for this sensor in microseconds.
"
      end

      operation 6611845 "isWakeUpSensor"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns true if the sensor is a wake-up sensor.
<p>
<b>Application Processor Power modes</b> <p>
Application Processor(AP), is the processor on which applications run.  When no wake lock is held
and the user is not interacting with the device, this processor can enter a “Suspend” mode,
reducing the power consumption by 10 times or more.
</p>
<p>
<b>Non-wake-up sensors</b> <p>
Non-wake-up sensors are sensors that do not wake the AP out of suspend to report data. While
the AP is in suspend mode, the sensors continue to function and generate events, which are
put in a hardware FIFO. The events in the FIFO are delivered to the application when the AP
wakes up. If the FIFO was too small to store all events generated while the AP was in
suspend mode, the older events are lost: the oldest data is dropped to accommodate the newer
data. In the extreme case where the FIFO is non-existent {@code maxFifoEventCount() == 0},
all events generated while the AP was in suspend mode are lost. Applications using
non-wake-up sensors should usually:
<ul>
<li>Either unregister from the sensors when they do not need them, usually in the activity’s
{@code onPause} method. This is the most common case.
<li>Or realize that the sensors are consuming some power while the AP is in suspend mode and
that even then, some events might be lost.
</ul>
</p>
<p>
<b>Wake-up sensors</b> <p>
In opposition to non-wake-up sensors, wake-up sensors ensure that their data is delivered
independently of the state of the AP. While the AP is awake, the wake-up sensors behave
like non-wake-up-sensors. When the AP is asleep, wake-up sensors wake up the AP to deliver
events. That is, the AP will wake up and the sensor will deliver the events before the
maximum reporting latency is elapsed or the hardware FIFO gets full. See {@link
SensorManager#registerListener(SensorEventListener, Sensor, int, int)} for more details.
</p>

@return <code>true</code> if this is a wake-up sensor, <code>false</code> otherwise.
"
      end

      operation 6611973 "isDynamicSensor"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns true if the sensor is a dynamic sensor.

@return <code>true</code> if the sensor is a dynamic sensor (sensor added at runtime).
@see SensorManager.DynamicSensorCallback
"
      end

      operation 6612101 "isAdditionalInfoSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns true if the sensor supports sensor additional information API

@return <code>true</code> if the sensor supports sensor additional information API
@see SensorAdditionalInfo
"
      end

      operation 6612229 "isDataInjectionSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SystemApi
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns true if the sensor supports data injection when the
HAL is set to data injection mode.

@return <code>true</code> if the sensor supports data
        injection when the HAL is set in injection mode,
        false otherwise.
@hide
"
      end

      operation 6612357 "setRange"
	package explicit_return_type "void"
	nparams 2
	  param in name "max" explicit_type "float"
	  param in name "res" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6612485 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6612613 "setType"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the Type associated with the sensor.
NOTE: to be used only by native bindings in SensorManager.

This allows interned static strings to be used across all representations of the Sensor. If
a sensor type is not referenced here, it will still be interned by the native SensorManager.

@return {@code true} if the StringType was successfully set, {@code false} otherwise.
"
      end

      operation 6612741 "setUuid"
	private explicit_return_type "void"
	nparams 2
	  param in name "msb" explicit_type "long"
	  param in name "lsb" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sets the ID associated with the sensor.

The method name is misleading; while this ID is based on the UUID,
we do not pass in the actual UUID.

NOTE: to be used only by native bindings in SensorManager.

@see #getId
"
      end
    end

    class 1180421 "SensorAdditionalInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a {@link android.hardware.Sensor Sensor} additional information frame,
which is reported through listener callback {@link
android.hardware.SensorEventCallback#onSensorAdditionalInfo onSensorAdditionalInfo}.

@see SensorManager
@see SensorEventCallback
@see Sensor

"
      classrelation 1764101 // sensor (<unidirectional association>)
	relation 1764101 --->
	  a role_name "sensor" const_relation public
	    comment "
The sensor that generated this event. See
{@link android.hardware.SensorManager SensorManager} for details.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1764101 // sensor (<unidirectional association>)
	  b parent class_ref 1180165 // Sensor
      end

      attribute 4278661 "type"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Type of this additional info frame.

"
      end

      attribute 4278789 "serial"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sequence number of frame for a certain type.

"
      end

      attribute 4278917 "floatValues"
	const_attribute public explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Additional info payload data represented in float values. Depending on the type of
information, this may be null.

"
      end

      attribute 4279045 "intValues"
	const_attribute public explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Additional info payload data represented in int values. Depending on the type of information,
this may be null.

"
      end

      class 1180549 "AdditionalInfoType"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@IntDef({TYPE_FRAME_BEGIN, TYPE_FRAME_END, TYPE_UNTRACKED_DELAY, TYPE_INTERNAL_TEMPERATURE,
             TYPE_VEC3_CALIBRATION, TYPE_SENSOR_PLACEMENT, TYPE_SAMPLING})
@Retention(RetentionPolicy.SOURCE)
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 4279173 "TYPE_FRAME_BEGIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Mark the beginning of a set of additional info frames.

"
      end

      attribute 4279301 "TYPE_FRAME_END"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Mark the end of a set of additional info frames.

"
      end

      attribute 4279429 "TYPE_UNTRACKED_DELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Untracked delay. Delays that are introduced by data processing, such as filtering, which is
not taken into account by sensor timestamps.

Payload:
    floatValues[0]: delay estimation in seconds
    floatValues[1]: delay estimation standard deviation

"
      end

      attribute 4279557 "TYPE_INTERNAL_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Internal temperature. Sensor hardware device internal temperature.

Payload:
    floatValues[0]: internal temperature in Celsius.

"
      end

      attribute 4279685 "TYPE_VEC3_CALIBRATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Vector calibration parameter. Calibration applied to a sensor with 3 elements vector output,
such as accelerometer, gyro, etc.

Payload:
    floatValues[0..11]: First 3 rows of a homogeneous matrix in row major order that captures
    any linear transformation, including rotation, scaling, shear, shift.

"
      end

      attribute 4279813 "TYPE_SENSOR_PLACEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10003"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sensor placement. Describes location and installation angle of the sensor device.

Payload:
    floatValues[0..11]: First 3 rows of homogeneous matrix in row major order that describes
    the location and orientation of the sensor. Origin of reference will be the mobile device
    geometric sensor. Reference frame is defined as the same as Android sensor frame.

"
      end

      attribute 4279941 "TYPE_SAMPLING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sampling parameter. Describes the raw sample period and estimated jitter of sample time in
terms of standard deviation.

Payload:
    floatValues[0]: raw sample period in seconds.
    floatValues[1]: standard deviation of sampling period.

"
      end

      attribute 4280069 "TYPE_LOCAL_GEOMAGNETIC_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30000"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Local geo-magnetic Field.

Additional into to sensor hardware.  Local geomagnetic field information based on
device geo location. This type is primarily for for magnetic field calibration and rotation
vector sensor fusion.

float[3]: strength (uT), declination and inclination angle (rad).
@hide

"
      end

      attribute 4280197 "TYPE_LOCAL_GRAVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30001"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Local gravity acceleration strength.

Additional info to sensor hardware for accelerometer calibration.

float: gravitational acceleration norm in m/s^2.
@hide

"
      end

      attribute 4280325 "TYPE_DOCK_STATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30002"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Device dock state.

Additional info to sensor hardware indicating dock states of device.

int32_t: dock state following definition of {@link android.content.Intent#EXTRA_DOCK_STATE}.
         Undefined values are ignored.
@hide

"
      end

      attribute 4280453 "TYPE_HIGH_PERFORMANCE_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30003"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "High performance mode.

Additional info to sensor hardware. Device is able to use up more power and take more
resources to improve throughput and latency in high performance mode. One possible use case
is virtual reality, when sensor latency need to be carefully controlled.

int32_t: 1 or 0, denoting device is in or out of high performance mode, respectively.
         Other values are ignored.
@hide

"
      end

      attribute 4280581 "TYPE_MAGNETIC_FIELD_CALIBRATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30004"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Magnetic field calibration hint.

Additional info to sensor hardware. Device is notified when manually triggered magnetic field
calibration procedure is started or stopped. The calibration procedure is assumed timed out
after 1 minute from start, even if an explicit stop is not received.

int32_t: 1 for calibration start, 0 for stop, other values are ignored.
@hide

"
      end

      operation 6612869 "SensorAdditionalInfo"
	package explicit_return_type ""
	nparams 5
	  param inout name "aSensor" type class_ref 1180165 // Sensor
	  param in name "aType" explicit_type "int"
	  param in name "aSerial" explicit_type "int"
	  param inout name "aIntValues" explicit_type "int"
	multiplicity "[]"
	  param inout name "aFloatValues" explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6612997 "createLocalGeomagneticField"
	class_operation public return_type class_ref 1180421 // SensorAdditionalInfo
	nparams 3
	  param in name "strength" explicit_type "float"
	  param in name "declination" explicit_type "float"
	  param in name "inclination" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end
    end

    class 1180677 "SensorDirectChannel"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Class representing a sensor direct channel. Use
{@link SensorManager#createDirectChannel(android.os.MemoryFile)} or
{@link SensorManager#createDirectChannel(android.hardware.HardwareBuffer)}
to obtain an object. The channel object can be then configured
(see {@link #configure(Sensor, int)})
to start delivery of sensor events into shared memory buffer.
"
      classrelation 1764229 // <realization>
	relation 1764229 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1764229 // <realization>
	  b parent class_ref 1180805 // Channel
      end

      class 1180933 "MemoryType"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag = true, value = {TYPE_MEMORY_FILE, TYPE_HARDWARE_BUFFER})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 4280709 "TYPE_MEMORY_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Shared memory type ashmem, wrapped in MemoryFile object.

@see SensorManager#createDirectChannel(MemoryFile)

"
      end

      attribute 4280837 "TYPE_HARDWARE_BUFFER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Shared memory type wrapped by HardwareBuffer object.

@see SensorManager#createDirectChannel(HardwareBuffer)

"
      end

      class 1181061 "RateLevel"
	visibility public stereotype "@interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${static}@interface ${name}${extends} {
${members}}
"
	java_annotation "@Retention(RetentionPolicy.SOURCE)
@IntDef(flag = true, value = {RATE_STOP, RATE_NORMAL, RATE_FAST, RATE_VERY_FAST})
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
      end

      attribute 4280965 "RATE_STOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sensor stopped (no event output).

@see #configure(Sensor, int)

"
      end

      attribute 4281093 "RATE_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sensor operates at nominal rate of 50Hz.

The actual rate is expected to be between 55% to 220% of nominal rate, thus between 27.5Hz to
110Hz.

@see #configure(Sensor, int)

50Hz"
      end

      attribute 4281221 "RATE_FAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sensor operates at nominal rate of 200Hz.

The actual rate is expected to be between 55% to 220% of nominal rate, thus between 110Hz to
440Hz.

@see #configure(Sensor, int)

 ~200Hz"
      end

      attribute 4281349 "RATE_VERY_FAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "Sensor operates at nominal rate of 800Hz.

The actual rate is expected to be between 55% to 220% of nominal rate, thus between 440Hz to
1760Hz.

@see #configure(Sensor, int)

 ~800Hz"
      end

      operation 6613125 "isOpen"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Determine if a channel is still valid. A channel is invalidated after {@link #close()} is
called.

@return <code>true</code> if channel is valid.
"
      end

      operation 6613253 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @removed "
      end

      operation 6613381 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Close sensor direct channel.

Stop all active sensor in the channel and free sensor system resource related to channel.
Shared memory used for creating the direct channel need to be closed or freed separately.

@see SensorManager#createDirectChannel(MemoryFile)
@see SensorManager#createDirectChannel(HardwareBuffer)
"
      end

      operation 6613509 "configure"
	public explicit_return_type "int"
	nparams 2
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "rateLevel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, @RateLevel ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Configure sensor rate or stop sensor report.

To start event report of a sensor, or change rate of existing report, call this function with
rateLevel other than {@link android.hardware.SensorDirectChannel#RATE_STOP}. Sensor events
will be added into a queue formed by the shared memory used in creation of direction channel.
Each element of the queue has size of 104 bytes and represents a sensor event. Data
structure of an element (all fields in little-endian):

<pre>
  offset   type                    name
------------------------------------------------------------------------
  0x0000   int32_t                 size (always 104)
  0x0004   int32_t                 sensor report token
  0x0008   int32_t                 type (see SensorType)
  0x000C   uint32_t                atomic counter
  0x0010   int64_t                 timestamp (see Event)
  0x0018   float[16]/int64_t[8]    data (data type depends on sensor type)
  0x0058   int32_t[4]              reserved (set to zero)
</pre>

There are no head or tail pointers. The sequence and frontier of new sensor events is
determined by the atomic counter, which counts from 1 after creation of direct channel and
increments 1 for each new event. Atomic counter will wrap back to 1 after it reaches
UINT32_MAX, skipping value 0 to avoid confusion with uninitialized memory. The writer in
sensor system will wrap around from the start of shared memory region when it reaches the
end. If size of memory region is not a multiple of size of element (104 bytes), the residual
is not used at the end.  Function returns a positive sensor report token on success. This
token can be used to differentiate sensor events from multiple sensor of the same type. For
example, if there are two accelerometers in the system A and B, it is guaranteed different
report tokens will be returned when starting sensor A and B.

To stop a sensor, call this function with rateLevel equal {@link
android.hardware.SensorDirectChannel#RATE_STOP}. If the sensor parameter is left to be null,
this will stop all active sensor report associated with the direct channel specified.
Function return 1 on success or 0 on failure.

@param sensor A {@link android.hardware.Sensor} object to denote sensor to be operated.
@param rateLevel rate level defined in {@link android.hardware.SensorDirectChannel}.
@return * starting report or changing rate: positive sensor report token on success,
                                            0 on failure;
        * stopping report: 1 on success, 0 on failure.
@throws NullPointerException when channel is null.
"
      end

      operation 6613637 "SensorDirectChannel"
	package explicit_return_type ""
	nparams 4
	  param inout name "manager" type class_ref 1179525 // SensorManager
	  param in name "id" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param in name "size" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6613765 "getNativeHandle"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6613893 "encodeData"
	class_operation package explicit_return_type "long"
	nparams 1
	  param inout name "ashmem" type class_ref 1181189 // MemoryFile
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "This function encode handle information in {@link android.os.MemoryFile} into a long array to
be passed down to native methods.

@hide "
      end

      operation 6614021 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 4281477 "mClosed"
	const_attribute private explicit_type "AtomicBoolean"
	init_value " new AtomicBoolean()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4281605 "mCloseGuard"
	const_attribute private explicit_type "CloseGuard"
	init_value " CloseGuard.get()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1764357 // mManager (<unidirectional association>)
	relation 1764357 --->
	  a role_name "mManager" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1764357 // mManager (<unidirectional association>)
	  b parent class_ref 1179525 // SensorManager
      end

      attribute 4281733 "mNativeHandle"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4281861 "mSize"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4281989 "mType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end
    end

    class 1181317 "SensorEventCallback"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used for receiving sensor additional information frames.
"
      classrelation 1764741 // <realization>
	relation 1764741 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1764741 // <realization>
	  b parent class_ref 1181445 // SensorEventListener2
      end

      operation 6614405 "onSensorChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1180037 // SensorEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called when sensor values have changed.

@see android.hardware.SensorEventListener#onSensorChanged(SensorEvent)
"
      end

      operation 6614533 "onAccuracyChanged"
	public explicit_return_type "void"
	nparams 2
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "accuracy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called when the accuracy of the registered sensor has changed.

@see android.hardware.SensorEventListener#onAccuracyChanged(Sensor, int)
"
      end

      operation 6614661 "onFlushCompleted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called after flush() is completed.

@see android.hardware.SensorEventListener2#onFlushCompleted(Sensor)
"
      end

      operation 6614789 "onSensorAdditionalInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 1180421 // SensorAdditionalInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called when a sensor additional information frame is available.

@param info A {@link android.hardware.SensorAdditionalInfo SensorAdditionalInfo} frame
reported from sensor hardware.
"
      end
    end

    class 1181445 "SensorEventListener2"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Used for receiving a notification when a flush() has been successfully completed.
"
      classrelation 1764613 // <generalisation>
	relation 1764613 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1764613 // <generalisation>
	  b parent class_ref 1179909 // SensorEventListener
      end

      operation 6614277 "onFlushCompleted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Called after flush() is completed. All the events in the batch at the point when the flush
was called have been delivered to the applications registered for those sensor events. In
{@link android.os.Build.VERSION_CODES#KITKAT}, applications may receive flush complete events
even if some other application has called flush() on the same sensor. Starting with
{@link android.os.Build.VERSION_CODES#LOLLIPOP}, flush Complete events are sent ONLY to the
application that has explicitly called flush(). If the hardware FIFO is flushed due to some
other application calling flush(), flush complete event is not delivered to this application.
<p>

@param sensor The {@link android.hardware.Sensor Sensor} on which flush was called.
@see android.hardware.SensorManager#flush(SensorEventListener)
"
      end
    end

    class 1181701 "TriggerEventListener"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class is the listener used to handle Trigger Sensors.
Trigger Sensors are sensors that trigger an event and are automatically
disabled. {@link Sensor#TYPE_SIGNIFICANT_MOTION} is one such example.
<p>
{@link SensorManager} lets you access the device's {@link android.hardware.Sensor
sensors}. Get an instance of {@link SensorManager} by calling
{@link android.content.Context#getSystemService(java.lang.String)
Context.getSystemService()} with the argument
{@link android.content.Context#SENSOR_SERVICE}.
<p>Here's an example setup for a TriggerEventListener:

<pre>
class TriggerListener extends TriggerEventListener {
    public void onTrigger(TriggerEvent event) {
         // Do Work.

    // As it is a one shot sensor, it will be canceled automatically.
    // SensorManager.requestTriggerSensor(this, mSigMotion); needs to
    // be called again, if needed.
    }
}
public class SensorActivity extends Activity {
    private final SensorManager mSensorManager;
    private final Sensor mSigMotion;
    private final TriggerEventListener mListener = new TriggerEventListener();

    public SensorActivity() {
        mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
        mSigMotion = mSensorManager.getDefaultSensor(Sensor.TYPE_SIGNIFICANT_MOTION);
    }

    protected void onResume() {
        super.onResume();
        mSensorManager.requestTriggerSensor(mListener, mSigMotion);
    }

    protected void onPause() {
        super.onPause();
        // Call disable to ensure that the trigger request has been canceled.
        mSensorManager.cancelTriggerSensor(mListener, mSigMotion);
    }

}
</pre>

@see TriggerEvent
@see Sensor
"
      operation 6633861 "onTrigger"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 1182725 // TriggerEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "The method that will be called when the sensor
is triggered. Override this method in your implementation
of this class.

@param event The details of the event.
"
      end
    end

    class 1181829 "SerialManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SystemService(Context.SERIAL_SERVICE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      attribute 4290181 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SerialManager\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1765125 // mContext (<unidirectional association>)
	relation 1765125 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1765125 // mContext (<unidirectional association>)
	  b parent class_ref 956933 // Context
      end

      attribute 4290309 "mService"
	const_attribute private explicit_type "ISerialManager"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 6622597 "SerialManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "service" explicit_type "ISerialManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "{@hide}
"
      end

      operation 6622725 "getSerialPorts"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns a string array containing the names of available serial ports

@return names of available serial ports
"
      end

      operation 6622853 "openSerialPort"
	public return_type class_ref 1181957 // SerialPort
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "speed" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Opens and returns the {@link android.hardware.SerialPort} with the given name.
The speed of the serial port must be one of:
50, 75, 110, 134, 150, 200, 300, 600, 1200, 1800, 2400, 4800, 9600,
19200, 38400, 57600, 115200, 230400, 460800, 500000, 576000, 921600, 1000000, 1152000,
1500000, 2000000, 2500000, 3000000, 3500000 or 4000000

@param name of the serial port
@param speed at which to open the serial port
@return the serial port
"
      end
    end

    class 1181957 "SerialPort"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@hide
"
      attribute 4290437 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SerialPort\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4290565 "mNativeContext"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment " used by the JNI code
"
      end

      attribute 4290693 "mName"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1765253 // mFileDescriptor (<unidirectional association>)
	relation 1765253 --->
	  a role_name "mFileDescriptor" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1765253 // mFileDescriptor (<unidirectional association>)
	  b parent class_ref 1025285 // ParcelFileDescriptor
      end

      operation 6622981 "SerialPort"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment "SerialPort should only be instantiated by SerialManager
@hide
"
      end

      operation 6623109 "open"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pfd" type class_ref 1025285 // ParcelFileDescriptor
	  param in name "speed" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "SerialPort should only be instantiated by SerialManager
Speed must be one of 50, 75, 110, 134, 150, 200, 300, 600, 1200, 1800, 2400, 4800, 9600,
19200, 38400, 57600, 115200, 230400, 460800, 500000, 576000, 921600, 1000000, 1152000,
1500000, 2000000, 2500000, 3000000, 3500000, 4000000

@hide
"
      end

      operation 6623237 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Closes the serial port
"
      end

      operation 6623365 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Returns the name of the serial port

@return the serial port's name
"
      end

      operation 6623493 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Reads data into the provided buffer.
Note that the value returned by {@link java.nio.Buffer#position()} on this buffer is
unchanged after a call to this method.

@param buffer to read into
@return number of bytes read
"
      end

      operation 6623621 "write"
	public explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Writes data from provided buffer.
Note that the value returned by {@link java.nio.Buffer#position()} on this buffer is
unchanged after a call to this method.

@param buffer to write
@param length number of bytes to write
"
      end

      operation 6623749 "sendBreak"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Sends a stream of zero valued bits for 0.25 to 0.5 seconds
"
      end

      operation 6623877 "native_open"
	private explicit_return_type "void"
	nparams 2
	  param inout name "pfd" explicit_type "FileDescriptor"
	  param in name "speed" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624005 "native_close"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624133 "native_read_array"
	private explicit_return_type "int"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624261 "native_read_direct"
	private explicit_return_type "int"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624389 "native_write_array"
	private explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	multiplicity "[]"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624517 "native_write_direct"
	private explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624645 "native_send_break"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1182085 "SystemSensorManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Sensor manager implementation that communicates with the built-in
system sensors.

@hide
"
      classrelation 1765381 // <generalisation>
	relation 1765381 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 1765381 // <generalisation>
	  b parent class_ref 1179525 // SensorManager
      end

      attribute 4290821 "DEBUG_DYNAMIC_SENSOR"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "TODO: disable extra logging before release
"
      end

      attribute 4290949 "MIN_DIRECT_CHANNEL_BUFFER_SIZE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 104"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4291077 "MAX_LISTENER_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 128"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 6624773 "nativeClassInit"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6624901 "nativeCreate"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "opPackageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625029 "nativeGetSensorAtIndex"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param in name "nativeInstance" explicit_type "long"
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625157 "nativeGetDynamicSensors"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativeInstance" explicit_type "long"
	  param inout name "list" explicit_type "List<Sensor>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625285 "nativeIsDataInjectionEnabled"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "nativeInstance" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625413 "nativeCreateDirectChannel"
	class_operation private explicit_return_type "int"
	nparams 5
	  param in name "nativeInstance" explicit_type "long"
	  param in name "size" explicit_type "long"
	  param in name "channelType" explicit_type "int"
	  param in name "fd" explicit_type "int"
	  param inout name "buffer" type class_ref 1179013 // HardwareBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625541 "nativeDestroyDirectChannel"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "nativeInstance" explicit_type "long"
	  param in name "channelHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625669 "nativeConfigDirectChannel"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "nativeInstance" explicit_type "long"
	  param in name "channelHandle" explicit_type "int"
	  param in name "sensorHandle" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6625797 "nativeSetOperationParameter"
	class_operation private explicit_return_type "int"
	nparams 4
	  param in name "nativeInstance" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param inout name "floatValues" explicit_type "float"
	multiplicity "[]"
	  param inout name "intValues" explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws};
s"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      attribute 4291205 "sLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      attribute 4291333 "sNativeClassInited"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@GuardedBy(\"sLock\")
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      class 1182213 "InjectEventQueue"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1767941 // <generalisation>
	  relation 1767941 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 1767941 // <generalisation>
	    b parent class_ref 1182341 // BaseEventQueue
	end

	operation 6632837 "InjectEventQueue"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "looper" type class_ref 958213 // Looper
	    param inout name "manager" type class_ref 1182085 // SystemSensorManager
	    param in name "packageName" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6632965 "injectSensorData"
	  package explicit_return_type "int"
	  nparams 4
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "accuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6633093 "dispatchSensorEvent"
	  protected explicit_return_type "void"
	  nparams 4
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "accuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6633221 "dispatchFlushCompleteEvent"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "handle" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6633349 "addSensorEvent"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6633477 "removeSensorEvent"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      classrelation 1765509 // sInjectEventQueue (<unidirectional association>)
	relation 1765509 --->
	  a role_name "sInjectEventQueue" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"sLock\")
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1765509 // sInjectEventQueue (<unidirectional association>)
	  b parent class_ref 1182213 // InjectEventQueue
      end

      classrelation 1765637 // mFullSensorsList (<unidirectional association>)
	relation 1765637 --->
	  stereotype "ArrayList"
	  a role_name "mFullSensorsList" init_value " new ArrayList<>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1765637 // mFullSensorsList (<unidirectional association>)
	  b parent class_ref 1180165 // Sensor
      end

      classrelation 1765765 // mFullDynamicSensorsList (<unidirectional association>)
	relation 1765765 --->
	  stereotype "List"
	  a role_name "mFullDynamicSensorsList" init_value " new ArrayList<>()" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1765765 // mFullDynamicSensorsList (<unidirectional association>)
	  b parent class_ref 1180165 // Sensor
      end

      attribute 4291461 "mDynamicSensorListDirty"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1765893 // mHandleToSensor (<unidirectional association>)
	relation 1765893 --->
	  stereotype "HashMap"
	  a role_name "mHandleToSensor" init_value " new HashMap<>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<Integer, ${type}> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1765893 // mHandleToSensor (<unidirectional association>)
	  b parent class_ref 1180165 // Sensor
      end

      classrelation 1766021 // mSensorListeners (<unidirectional association>)
	relation 1766021 --->
	  stereotype "HashMap"
	  a role_name "mSensorListeners" init_value "
            new HashMap<SensorEventListener, SensorEventQueue>()" const_relation private
	    comment " Listener list
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, SensorEventQueue> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1766021 // mSensorListeners (<unidirectional association>)
	  b parent class_ref 1179909 // SensorEventListener
      end

      classrelation 1766149 // mTriggerListeners (<unidirectional association>)
	relation 1766149 --->
	  stereotype "HashMap"
	  a role_name "mTriggerListeners" init_value "
            new HashMap<TriggerEventListener, TriggerEventQueue>()" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, TriggerEventQueue> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1766149 // mTriggerListeners (<unidirectional association>)
	  b parent class_ref 1181701 // TriggerEventListener
      end

      classrelation 1766277 // mDynamicSensorCallbacks (<unidirectional association>)
	relation 1766277 --->
	  stereotype "HashMap"
	  a role_name "mDynamicSensorCallbacks" init_value " new HashMap<>()" private
	    comment " Dynamic Sensor callbacks
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Handler> ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1766277 // mDynamicSensorCallbacks (<unidirectional association>)
	  b parent class_ref 1181573 // DynamicSensorCallback
      end

      classrelation 1766405 // mDynamicSensorBroadcastReceiver (<unidirectional association>)
	relation 1766405 --->
	  a role_name "mDynamicSensorBroadcastReceiver" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1766405 // mDynamicSensorBroadcastReceiver (<unidirectional association>)
	  b parent class_ref 960389 // BroadcastReceiver
      end

      classrelation 1766533 // mMainLooper (<unidirectional association>)
	relation 1766533 --->
	  a role_name "mMainLooper" const_relation private
	    comment " Looper associated with the context in which this instance was created.
"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1766533 // mMainLooper (<unidirectional association>)
	  b parent class_ref 958213 // Looper
      end

      attribute 4291589 "mTargetSdkLevel"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      classrelation 1766661 // mContext (<unidirectional association>)
	relation 1766661 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1766661 // mContext (<unidirectional association>)
	  b parent class_ref 956933 // Context
      end

      attribute 4291717 "mNativeInstance"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
      end

      operation 6625925 "SystemSensorManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 956933 // Context
	  param inout name "mainLooper" type class_ref 958213 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	comment " {@hide} "
      end

      operation 6626053 "getFullSensorList"
	protected return_type class_ref 1180165 // Sensor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6626181 "getFullDynamicSensorList"
	protected return_type class_ref 1180165 // Sensor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6626309 "registerListenerImpl"
	protected explicit_return_type "boolean"
	nparams 6
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "delayUs" explicit_type "int"
	  param inout name "handler" type class_ref 956421 // Handler
	  param in name "maxBatchReportLatencyUs" explicit_type "int"
	  param in name "reservedFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6626437 "unregisterListenerImpl"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6626565 "requestTriggerSensorImpl"
	protected explicit_return_type "boolean"
	nparams 2
	  param inout name "listener" type class_ref 1181701 // TriggerEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6626693 "cancelTriggerSensorImpl"
	protected explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 1181701 // TriggerEventListener
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param inout name "disable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6626821 "flushImpl"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "listener" type class_ref 1179909 // SensorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6626949 "initDataInjectionImpl"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6627077 "injectSensorDataImpl"
	protected explicit_return_type "boolean"
	nparams 4
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param inout name "values" explicit_type "float"
	multiplicity "[]"
	  param in name "accuracy" explicit_type "int"
	  param in name "timestamp" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6627205 "cleanupSensorConnection"
	private explicit_return_type "void"
	nparams 1
	  param inout name "sensor" type class_ref 1180165 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6627333 "updateDynamicSensorList"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6627461 "setupDynamicSensorBroadcastReceiver"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6627589 "teardownDynamicSensorBroadcastReceiver"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 6627717 "registerDynamicSensorCallbackImpl"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	  param inout name "handler" type class_ref 956421 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6627845 "unregisterDynamicSensorCallbackImpl"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 1181573 // DynamicSensorCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6627973 "diffSortedSensorList"
	class_operation private explicit_return_type "boolean"
	nparams 5
	  param inout name "oldList" explicit_type "List<Sensor>"
	  param inout name "newList" explicit_type "List<Sensor>"
	  param inout name "updated" explicit_type "List<Sensor>"
	  param inout name "added" explicit_type "List<Sensor>"
	  param inout name "removed" explicit_type "List<Sensor>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment "Find the difference of two List<Sensor> assuming List are sorted by handle of sensor,
assuming the input list is already sorted by handle. Inputs are ol and nl; outputs are
updated, added and removed. Any of the output lists can be null in case the result is not
interested.
"
      end

      operation 6628101 "configureDirectChannelImpl"
	protected explicit_return_type "int"
	nparams 3
	  param inout name "channel" type class_ref 1180677 // SensorDirectChannel
	  param inout name "sensor" type class_ref 1180165 // Sensor
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6628229 "createDirectChannelImpl"
	protected return_type class_ref 1180677 // SensorDirectChannel
	nparams 2
	  param inout name "memoryFile" type class_ref 1181189 // MemoryFile
	  param inout name "hardwareBuffer" type class_ref 1179013 // HardwareBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      operation 6628357 "destroyDirectChannelImpl"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "channel" type class_ref 1180677 // SensorDirectChannel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " @hide "
      end

      class 1182341 "BaseEventQueue"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	operation 6628485 "nativeInitBaseEventQueue"
	  class_operation private explicit_return_type "long"
	  nparams 6
	    param in name "nativeManager" explicit_type "long"
	    param inout name "eventQWeak" explicit_type "WeakReference<BaseEventQueue>"
	    param inout name "msgQ" type class_ref 966021 // MessageQueue
	    param in name "packageName" explicit_type "String"
	    param in name "mode" explicit_type "int"
	    param in name "opPackageName" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
s"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6628613 "nativeEnableSensor"
	  class_operation private explicit_return_type "int"
	  nparams 4
	    param in name "eventQ" explicit_type "long"
	    param in name "handle" explicit_type "int"
	    param in name "rateUs" explicit_type "int"
	    param in name "maxBatchReportLatencyUs" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
s"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6628741 "nativeDisableSensor"
	  class_operation private explicit_return_type "int"
	  nparams 2
	    param in name "eventQ" explicit_type "long"
	    param in name "handle" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
s"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6628869 "nativeDestroySensorEventQueue"
	  class_operation private explicit_return_type "void"
	  nparams 1
	    param in name "eventQ" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6628997 "nativeFlushSensor"
	  class_operation private explicit_return_type "int"
	  nparams 1
	    param in name "eventQ" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
s"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6629125 "nativeInjectSensorData"
	  class_operation private explicit_return_type "int"
	  nparams 5
	    param in name "eventQ" explicit_type "long"
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "accuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
s"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	attribute 4291845 "nSensorEventQueue"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1766789 // mActiveSensors (<unidirectional association>)
	  relation 1766789 --->
	    a role_name "mActiveSensors" init_value " new SparseBooleanArray()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1766789 // mActiveSensors (<unidirectional association>)
	    b parent class_ref 1070213 // SparseBooleanArray
	end

	classrelation 1766917 // mSensorAccuracies (<unidirectional association>)
	  relation 1766917 --->
	    a role_name "mSensorAccuracies" init_value " new SparseIntArray()" const_relation protected
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1766917 // mSensorAccuracies (<unidirectional association>)
	    b parent class_ref 972421 // SparseIntArray
	end

	attribute 4291973 "mCloseGuard"
	  const_attribute private explicit_type "CloseGuard"
	  init_value " CloseGuard.get()"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	classrelation 1767045 // mManager (<unidirectional association>)
	  relation 1767045 --->
	    a role_name "mManager" const_relation protected
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1767045 // mManager (<unidirectional association>)
	    b parent class_ref 1182085 // SystemSensorManager
	end

	attribute 4292101 "OPERATING_MODE_NORMAL"
	  class_attribute const_attribute protected explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 4292229 "OPERATING_MODE_DATA_INJECTION"
	  class_attribute const_attribute protected explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 6629253 "BaseEventQueue"
	  package explicit_return_type ""
	  nparams 4
	    param inout name "looper" type class_ref 958213 // Looper
	    param inout name "manager" type class_ref 1182085 // SystemSensorManager
	    param in name "mode" explicit_type "int"
	    param in name "packageName" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6629381 "dispose"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6629509 "addSensor"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "sensor" type class_ref 1180165 // Sensor
	    param in name "delayUs" explicit_type "int"
	    param in name "maxBatchReportLatencyUs" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6629637 "removeAllSensors"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6629765 "removeSensor"
	  public explicit_return_type "boolean"
	  nparams 2
	    param inout name "sensor" type class_ref 1180165 // Sensor
	    param inout name "disable" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6629893 "flush"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630021 "hasSensors"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630149 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630277 "dispose"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "finalized" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630405 "enableSensor"
	  private explicit_return_type "int"
	  nparams 3
	    param inout name "sensor" type class_ref 1180165 // Sensor
	    param in name "rateUs" explicit_type "int"
	    param in name "maxBatchReportLatencyUs" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630533 "injectSensorDataBase"
	  protected explicit_return_type "int"
	  nparams 4
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "accuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630661 "disableSensor"
	  private explicit_return_type "int"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630789 "dispatchSensorEvent"
	  abstract protected explicit_return_type "void"
	  nparams 4
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "accuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6630917 "dispatchFlushCompleteEvent"
	  abstract protected explicit_return_type "void"
	  nparams 1
	    param in name "handle" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6631045 "dispatchAdditionalInfoEvent"
	  protected explicit_return_type "void"
	  nparams 5
	    param in name "handle" explicit_type "int"
	    param in name "type" explicit_type "int"
	    param in name "serial" explicit_type "int"
	    param inout name "floatValues" explicit_type "float"
	  multiplicity "[]"
	    param inout name "intValues" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6631173 "addSensorEvent"
	  abstract protected explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6631301 "removeSensorEvent"
	  abstract protected explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      class 1182469 "SensorEventQueue"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1767173 // <generalisation>
	  relation 1767173 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 1767173 // <generalisation>
	    b parent class_ref 1182341 // BaseEventQueue
	end

	classrelation 1767301 // mListener (<unidirectional association>)
	  relation 1767301 --->
	    a role_name "mListener" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1767301 // mListener (<unidirectional association>)
	    b parent class_ref 1179909 // SensorEventListener
	end

	classrelation 1767429 // mSensorsEvents (<unidirectional association>)
	  relation 1767429 --->
	    a role_name "mSensorsEvents" init_value " new SparseArray<SensorEvent>()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SensorEvent> ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1767429 // mSensorsEvents (<unidirectional association>)
	    b parent class_ref 964101 // SparseArray
	end

	operation 6631429 "SensorEventQueue"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "listener" type class_ref 1179909 // SensorEventListener
	    param inout name "looper" type class_ref 958213 // Looper
	    param inout name "manager" type class_ref 1182085 // SystemSensorManager
	    param in name "packageName" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6631557 "addSensorEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6631685 "removeSensorEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6631813 "dispatchSensorEvent"
	  protected explicit_return_type "void"
	  nparams 4
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "inAccuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Called from native code."
	end

	operation 6631941 "dispatchFlushCompleteEvent"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "handle" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Called from native code."
	end

	operation 6632069 "dispatchAdditionalInfoEvent"
	  protected explicit_return_type "void"
	  nparams 5
	    param in name "handle" explicit_type "int"
	    param in name "type" explicit_type "int"
	    param in name "serial" explicit_type "int"
	    param inout name "floatValues" explicit_type "float"
	  multiplicity "[]"
	    param inout name "intValues" explicit_type "int"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Called from native code."
	end
      end

      class 1182597 "TriggerEventQueue"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 1767557 // <generalisation>
	  relation 1767557 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 1767557 // <generalisation>
	    b parent class_ref 1182341 // BaseEventQueue
	end

	classrelation 1767685 // mListener (<unidirectional association>)
	  relation 1767685 --->
	    a role_name "mListener" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1767685 // mListener (<unidirectional association>)
	    b parent class_ref 1181701 // TriggerEventListener
	end

	classrelation 1767813 // mTriggerEvents (<unidirectional association>)
	  relation 1767813 --->
	    a role_name "mTriggerEvents" init_value " new SparseArray<TriggerEvent>()" const_relation private
	      cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TriggerEvent> ${name}${value};
"
	      idl "  ${comment}${visibility}${type} ${name};
"
	      classrelation_ref 1767813 // mTriggerEvents (<unidirectional association>)
	    b parent class_ref 964101 // SparseArray
	end

	operation 6632197 "TriggerEventQueue"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "listener" type class_ref 1181701 // TriggerEventListener
	    param inout name "looper" type class_ref 958213 // Looper
	    param inout name "manager" type class_ref 1182085 // SystemSensorManager
	    param in name "packageName" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6632325 "addSensorEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6632453 "removeSensorEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 1180165 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 6632581 "dispatchSensorEvent"
	  protected explicit_return_type "void"
	  nparams 4
	    param in name "handle" explicit_type "int"
	    param inout name "values" explicit_type "float"
	  multiplicity "[]"
	    param in name "accuracy" explicit_type "int"
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment " Called from native code."
	end

	operation 6632709 "dispatchFlushCompleteEvent"
	  protected explicit_return_type "void"
	  nparams 1
	    param in name "handle" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings(\"unused\")
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end
      end

      operation 6633605 "setOperationParameterImpl"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "parameter" type class_ref 1180421 // SensorAdditionalInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1182725 "TriggerEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment "This class represents a Trigger Event - the event
associated with a Trigger Sensor. When the sensor detects a trigger
event condition, such as significant motion in the case of the
{@link Sensor#TYPE_SIGNIFICANT_MOTION}, the {@link TriggerEventListener}
is called with the TriggerEvent. The sensor is automatically canceled
after the trigger.
<p>
This class holds information such as the value of the sensor
when the trigger happened, the timestamp along with detailed
information regarding the Sensor itself.
</p>
@see android.hardware.SensorManager
@see android.hardware.TriggerEvent
@see android.hardware.Sensor
"
      attribute 4292357 "values"
	const_attribute public explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "<p>
The length and contents of the {@link #values values} array depends on
which {@link android.hardware.Sensor sensor} type is being monitored (see
also {@link SensorEvent} for a definition of the coordinate system used).
</p>
<h4> {@link Sensor#TYPE_SIGNIFICANT_MOTION} </h4>
The value field is of length 1. value[0] = 1.0 when the sensor triggers.
1.0 is the only allowed value.

"
      end

      classrelation 1768069 // sensor (<unidirectional association>)
	relation 1768069 --->
	  a role_name "sensor" public
	    comment "
The sensor that generated this event. See
{@link android.hardware.SensorManager SensorManager} for details.

"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    idl "  ${comment}${visibility}${type} ${name};
"
	    classrelation_ref 1768069 // sensor (<unidirectional association>)
	  b parent class_ref 1180165 // Sensor
      end

      attribute 4292485 "timestamp"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl "  ${comment}${visibility}${type} ${name};
"
	mysql_decl ""
	MysqlColumn
	comment "The time in nanosecond at which the event happened

"
      end

      operation 6633733 "TriggerEvent"
	package explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1847557 "IConsumerIrService"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment " {@hide} "
      classrelation 3259141 // <generalisation>
	relation 3259141 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 3259141 // <generalisation>
	  b parent class_ref 1081989 // IInterface
      end

      class 1847685 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3259269 // <generalisation>
	  relation 3259269 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 3259269 // <generalisation>
	    b parent class_ref 1083525 // Binder
	end

	classrelation 3259397 // <realization>
	  relation 3259397 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 3259397 // <realization>
	    b parent class_ref 1847557 // IConsumerIrService
	end

	attribute 8175109 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.hardware.IConsumerIrService\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 13389957 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 13390085 "asInterface"
	  class_operation public return_type class_ref 1847557 // IConsumerIrService
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Cast an IBinder object into an android.hardware.IConsumerIrService interface,
generating a proxy if needed.
"
	end

	operation 13390213 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 13390341 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	class 1847813 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3259525 // <realization>
	    relation 3259525 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		idl "${type}"
		classrelation_ref 3259525 // <realization>
	      b parent class_ref 1847557 // IConsumerIrService
	  end

	  attribute 8175237 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl "  ${comment}${visibility}${type} ${name};
"
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 13390469 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13390597 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13390725 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13390853 "hasIrEmitter"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13390981 "transmit"
	    public explicit_return_type "void"
	    nparams 3
	      param inout name "packageName" explicit_type "java.lang.String"
	      param in name "carrierFrequency" explicit_type "int"
	      param inout name "pattern" explicit_type "int"
	    multiplicity "[]"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13391109 "getCarrierFrequencies"
	    public explicit_return_type "int"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end
	end

	attribute 8175365 "TRANSACTION_hasIrEmitter"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 8175493 "TRANSACTION_transmit"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 8175621 "TRANSACTION_getCarrierFrequencies"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 13391237 "hasIrEmitter"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 13391365 "transmit"
	public explicit_return_type "void"
	nparams 3
	  param inout name "packageName" explicit_type "java.lang.String"
	  param in name "carrierFrequency" explicit_type "int"
	  param inout name "pattern" explicit_type "int"
	multiplicity "[]"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 13391493 "getCarrierFrequencies"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end
    end

    class 1847941 "ISerialManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${static}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
      explicit_switch_type ""
      mysql_decl ""
      
      comment " @hide "
      classrelation 3259653 // <generalisation>
	relation 3259653 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    idl "${type}"
	    classrelation_ref 3259653 // <generalisation>
	  b parent class_ref 1081989 // IInterface
      end

      class 1848069 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	explicit_switch_type ""
	mysql_decl ""
	
	classrelation 3259781 // <generalisation>
	  relation 3259781 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 3259781 // <generalisation>
	    b parent class_ref 1083525 // Binder
	end

	classrelation 3259909 // <realization>
	  relation 3259909 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      idl "${type}"
	      classrelation_ref 3259909 // <realization>
	    b parent class_ref 1847941 // ISerialManager
	end

	attribute 8175749 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.hardware.ISerialManager\""
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	operation 13391621 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 13391749 "asInterface"
	  class_operation public return_type class_ref 1847941 // ISerialManager
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  comment "Cast an IBinder object into an android.hardware.ISerialManager interface,
generating a proxy if needed.
"
	end

	operation 13391877 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	operation 13392005 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	end

	class 1848197 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  static java_decl "${comment}${@}${visibility}${static}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl "${comment}${abstract}${custom}valuetype ${name}${inherit} {
${members}};
"
	  explicit_switch_type ""
	  mysql_decl ""
	  
	  classrelation 3260037 // <realization>
	    relation 3260037 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		idl "${type}"
		classrelation_ref 3260037 // <realization>
	      b parent class_ref 1847941 // ISerialManager
	  end

	  attribute 8175877 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl "  ${comment}${visibility}${type} ${name};
"
	    mysql_decl ""
	    MysqlColumn
	  end

	  operation 13392133 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    idl_decl "  ${comment}${oneway}factory init_${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13392261 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13392389 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13392517 "getSerialPorts"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	  end

	  operation 13392645 "openSerialPort"
	    public explicit_return_type "android.os.ParcelFileDescriptor"
	    nparams 1
	      param inout name "name" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	    comment " Returns a file descriptor for the serial port. "
	  end
	end

	attribute 8176005 "TRANSACTION_getSerialPorts"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 8176133 "TRANSACTION_openSerialPort"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl "  ${comment}${visibility}${type} ${name};
"
	  mysql_decl ""
	  MysqlColumn
	end
      end

      operation 13392773 "getSerialPorts"
	public explicit_return_type "java.lang.String"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
      end

      operation 13392901 "openSerialPort"
	public explicit_return_type "android.os.ParcelFileDescriptor"
	nparams 1
	  param inout name "name" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	idl_decl "  ${comment}${oneway}${type} ${name}${(}${)}${raisesnl}${raises};
"
	comment " Returns a file descriptor for the serial port. "
      end
    end
  end

  deploymentview 195973 "hardware"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 599045 "Camera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityThread;
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.app.job.JobInfo;
import android.content.Context;
import android.graphics.ImageFormat;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.SurfaceTexture;
import android.media.IAudioService;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.renderscript.Allocation;
import android.renderscript.Element;
import android.renderscript.RenderScript;
import android.renderscript.RSIllegalArgumentException;
import android.renderscript.Type;
import android.util.Log;
import android.text.TextUtils;
import android.view.Surface;
import android.view.SurfaceHolder;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import static android.system.OsConstants.*;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1176325 // Camera
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599173 "CameraInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1178245 // CameraInfo
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599301 "CameraStatus"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1178373 // CameraStatus
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599429 "ConsumerIrManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemService;
import android.content.Context;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.os.ServiceManager.ServiceNotFoundException;
import android.util.Log;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1178501 // ConsumerIrManager
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599557 "GeomagneticField"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.GregorianCalendar;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1178757 // GeomagneticField
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599685 "HardwareBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntDef;
import android.annotation.NonNull;
import android.os.Parcel;
import android.os.Parcelable;
import dalvik.annotation.optimization.FastNative;
import dalvik.system.CloseGuard;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import libcore.util.NativeAllocationRegistry;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1179013 // HardwareBuffer
      end
      comment "Copyright (C) 2017 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599813 "SensorEventListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1179909 // SensorEventListener
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 599941 "LegacySensorManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.RemoteException;
import android.os.ServiceManager;
import android.view.IRotationWatcher;
import android.view.IWindowManager;
import android.view.Surface;
import java.util.HashMap;
import java.util.List;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1179397 // LegacySensorManager
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600069 "Sensor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.os.Build;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1180165 // Sensor
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600197 "SensorAdditionalInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntDef;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1180421 // SensorAdditionalInfo
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600325 "SensorDirectChannel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.IntDef;
import android.os.MemoryFile;
import dalvik.system.CloseGuard;
import java.io.IOException;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.nio.channels.Channel;
import java.util.concurrent.atomic.AtomicBoolean;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1180677 // SensorDirectChannel
      end
      comment "Copyright (C) 2017 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600453 "SensorEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1180037 // SensorEvent
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600581 "SensorEventListener2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1181445 // SensorEventListener2
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600709 "SensorEventCallback"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1181317 // SensorEventCallback
      end
      comment "Copyright (C) 2016 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600837 "SensorListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1179653 // SensorListener
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 600965 "SensorManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemApi;
import android.annotation.SystemService;
import android.content.Context;
import android.os.Build;
import android.os.Handler;
import android.os.MemoryFile;
import android.util.Log;
import android.util.SparseArray;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1179525 // SensorManager
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 601093 "SerialManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SystemService;
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import java.io.IOException;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1181829 // SerialManager
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 601221 "SerialPort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.FileDescriptor;
import java.io.IOException;
import java.nio.ByteBuffer;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1181957 // SerialPort
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 601349 "SystemSensorManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Handler;
import android.os.Looper;
import android.os.MemoryFile;
import android.os.MessageQueue;
import android.util.Log;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import android.util.SparseIntArray;
import dalvik.system.CloseGuard;
import com.android.internal.annotations.GuardedBy;
import java.io.IOException;
import java.io.UncheckedIOException;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1182085 // SystemSensorManager
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 601477 "TriggerEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1182725 // TriggerEvent
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 601605 "TriggerEventListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1181701 // TriggerEventListener
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"
    end

    artifact 900997 "IConsumerIrService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1847557 // IConsumerIrService
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/hardware/IConsumerIrService.aidl
"
    end

    artifact 901125 "ISerialManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      idl_src "#ifndef ${MODULE}_${NAME}_H
#define ${MODULE}_${NAME}_H

${comment}
${includes}
${module_start}
${definition}
${module_end}
#endif
"
      associated_elems
	class_ref 1847941 // ISerialManager
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/hardware/ISerialManager.aidl
"
    end
  end

  package_ref 226565 // camera2

  package_ref 228101 // fingerprint

  package_ref 228229 // hdmi

  package_ref 228357 // input

  package_ref 228741 // location

  package_ref 229253 // radio

  package_ref 229381 // soundtrigger

  package_ref 229509 // usb
end
