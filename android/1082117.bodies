class ShellCallback
!!!7581445.java!!!	ShellCallback()
        mLocal = true;
!!!7581573.java!!!	openOutputFile(in path : String, in seLinuxContext : String) : ParcelFileDescriptor
        if (DEBUG) Log.d(TAG, "openOutputFile " + this + ": mLocal=" + mLocal
                + " mShellCallback=" + mShellCallback);

        if (mLocal) {
            return onOpenOutputFile(path, seLinuxContext);
        }

        if (mShellCallback != null) {
            try {
                return mShellCallback.openOutputFile(path, seLinuxContext);
            } catch (RemoteException e) {
                Log.w(TAG, "Failure opening " + path, e);
            }
        }
        return null;
!!!7581701.java!!!	onOpenOutputFile(in path : String, in seLinuxContext : String) : ParcelFileDescriptor
        return null;
!!!7581829.java!!!	writeToParcel(inout callback : ShellCallback, inout out : Parcel) : void
        if (callback == null) {
            out.writeStrongBinder(null);
        } else {
            callback.writeToParcel(out, 0);
        }
!!!7581957.java!!!	describeContents() : int
        return 0;
!!!7582085.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        synchronized (this) {
            if (mShellCallback == null) {
                mShellCallback = new MyShellCallback();
            }
            out.writeStrongBinder(mShellCallback.asBinder());
        }
!!!7582213.java!!!	ShellCallback(inout in : Parcel)
        mLocal = false;
        mShellCallback = IShellCallback.Stub.asInterface(in.readStrongBinder());
