class Proxy
!!!12966405.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!12966533.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!12966661.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!12966789.java!!!	schedulePauseActivity(inout token : android.os.IBinder, inout finished : boolean, inout userLeaving : boolean, in configChanges : int, inout dontReport : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((finished)?(1):(0)));
_data.writeInt(((userLeaving)?(1):(0)));
_data.writeInt(configChanges);
_data.writeInt(((dontReport)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_schedulePauseActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12966917.java!!!	scheduleStopActivity(inout token : android.os.IBinder, inout showWindow : boolean, in configChanges : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((showWindow)?(1):(0)));
_data.writeInt(configChanges);
mRemote.transact(Stub.TRANSACTION_scheduleStopActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967045.java!!!	scheduleWindowVisibility(inout token : android.os.IBinder, inout showWindow : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((showWindow)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_scheduleWindowVisibility, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967173.java!!!	scheduleResumeActivity(inout token : android.os.IBinder, in procState : int, inout isForward : boolean, inout resumeArgs : android.os.Bundle) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(procState);
_data.writeInt(((isForward)?(1):(0)));
if ((resumeArgs!=null)) {
_data.writeInt(1);
resumeArgs.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleResumeActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967301.java!!!	scheduleSendResult(inout token : android.os.IBinder, inout results : java.util.List<android.app.ResultInfo>) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeTypedList(results);
mRemote.transact(Stub.TRANSACTION_scheduleSendResult, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967429.java!!!	scheduleLaunchActivity(inout intent : android.content.Intent, inout token : android.os.IBinder, in ident : int, inout info : android.content.pm.ActivityInfo, inout curConfig : android.content.res.Configuration, inout overrideConfig : android.content.res.Configuration, inout compatInfo : android.content.res.CompatibilityInfo, inout referrer : java.lang.String, inout voiceInteractor : IVoiceInteractor, in procState : int, inout state : android.os.Bundle, inout persistentState : android.os.PersistableBundle, inout pendingResults : java.util.List<android.app.ResultInfo>, inout pendingNewIntents : java.util.List<com.android.internal.content.ReferrerIntent>, inout notResumed : boolean, inout isForward : boolean, inout profilerInfo : android.app.ProfilerInfo) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder(token);
_data.writeInt(ident);
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((curConfig!=null)) {
_data.writeInt(1);
curConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((overrideConfig!=null)) {
_data.writeInt(1);
overrideConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((compatInfo!=null)) {
_data.writeInt(1);
compatInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(referrer);
_data.writeStrongBinder((((voiceInteractor!=null))?(voiceInteractor.asBinder()):(null)));
_data.writeInt(procState);
if ((state!=null)) {
_data.writeInt(1);
state.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((persistentState!=null)) {
_data.writeInt(1);
persistentState.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeTypedList(pendingResults);
_data.writeTypedList(pendingNewIntents);
_data.writeInt(((notResumed)?(1):(0)));
_data.writeInt(((isForward)?(1):(0)));
if ((profilerInfo!=null)) {
_data.writeInt(1);
profilerInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleLaunchActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967557.java!!!	scheduleNewIntent(inout intent : java.util.List<com.android.internal.content.ReferrerIntent>, inout token : android.os.IBinder, inout andPause : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeTypedList(intent);
_data.writeStrongBinder(token);
_data.writeInt(((andPause)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_scheduleNewIntent, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967685.java!!!	scheduleDestroyActivity(inout token : android.os.IBinder, inout finished : boolean, in configChanges : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((finished)?(1):(0)));
_data.writeInt(configChanges);
mRemote.transact(Stub.TRANSACTION_scheduleDestroyActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967813.java!!!	scheduleReceiver(inout intent : android.content.Intent, inout info : android.content.pm.ActivityInfo, inout compatInfo : android.content.res.CompatibilityInfo, in resultCode : int, inout data : java.lang.String, inout extras : android.os.Bundle, inout sync : boolean, in sendingUser : int, in processState : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((compatInfo!=null)) {
_data.writeInt(1);
compatInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(resultCode);
_data.writeString(data);
if ((extras!=null)) {
_data.writeInt(1);
extras.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((sync)?(1):(0)));
_data.writeInt(sendingUser);
_data.writeInt(processState);
mRemote.transact(Stub.TRANSACTION_scheduleReceiver, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12967941.java!!!	scheduleCreateService(inout token : android.os.IBinder, inout info : android.content.pm.ServiceInfo, inout compatInfo : android.content.res.CompatibilityInfo, in processState : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((compatInfo!=null)) {
_data.writeInt(1);
compatInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(processState);
mRemote.transact(Stub.TRANSACTION_scheduleCreateService, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968069.java!!!	scheduleStopService(inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_scheduleStopService, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968197.java!!!	bindApplication(inout packageName : java.lang.String, inout info : android.content.pm.ApplicationInfo, inout providers : java.util.List<android.content.pm.ProviderInfo>, inout testName : android.content.ComponentName, inout profilerInfo : android.app.ProfilerInfo, inout testArguments : android.os.Bundle, inout testWatcher : IInstrumentationWatcher, inout uiAutomationConnection : IUiAutomationConnection, in debugMode : int, inout enableBinderTracking : boolean, inout trackAllocation : boolean, inout restrictedBackupMode : boolean, inout persistent : boolean, inout config : android.content.res.Configuration, inout compatInfo : android.content.res.CompatibilityInfo, inout services : java.util.Map, inout coreSettings : android.os.Bundle, inout buildSerial : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packageName);
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeTypedList(providers);
if ((testName!=null)) {
_data.writeInt(1);
testName.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((profilerInfo!=null)) {
_data.writeInt(1);
profilerInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((testArguments!=null)) {
_data.writeInt(1);
testArguments.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder((((testWatcher!=null))?(testWatcher.asBinder()):(null)));
_data.writeStrongBinder((((uiAutomationConnection!=null))?(uiAutomationConnection.asBinder()):(null)));
_data.writeInt(debugMode);
_data.writeInt(((enableBinderTracking)?(1):(0)));
_data.writeInt(((trackAllocation)?(1):(0)));
_data.writeInt(((restrictedBackupMode)?(1):(0)));
_data.writeInt(((persistent)?(1):(0)));
if ((config!=null)) {
_data.writeInt(1);
config.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((compatInfo!=null)) {
_data.writeInt(1);
compatInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeMap(services);
if ((coreSettings!=null)) {
_data.writeInt(1);
coreSettings.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(buildSerial);
mRemote.transact(Stub.TRANSACTION_bindApplication, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968325.java!!!	scheduleExit() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_scheduleExit, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968453.java!!!	scheduleConfigurationChanged(inout config : android.content.res.Configuration) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((config!=null)) {
_data.writeInt(1);
config.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleConfigurationChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968581.java!!!	scheduleServiceArgs(inout token : android.os.IBinder, inout args : android.content.pm.ParceledListSlice) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
if ((args!=null)) {
_data.writeInt(1);
args.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleServiceArgs, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968709.java!!!	updateTimeZone() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_updateTimeZone, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968837.java!!!	processInBackground() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_processInBackground, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12968965.java!!!	scheduleBindService(inout token : android.os.IBinder, inout intent : android.content.Intent, inout rebind : boolean, in processState : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((rebind)?(1):(0)));
_data.writeInt(processState);
mRemote.transact(Stub.TRANSACTION_scheduleBindService, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969093.java!!!	scheduleUnbindService(inout token : android.os.IBinder, inout intent : android.content.Intent) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleUnbindService, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969221.java!!!	dumpService(inout fd : android.os.ParcelFileDescriptor, inout servicetoken : android.os.IBinder, inout args : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder(servicetoken);
_data.writeStringArray(args);
mRemote.transact(Stub.TRANSACTION_dumpService, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969349.java!!!	scheduleRegisteredReceiver(inout receiver : IIntentReceiver, inout intent : android.content.Intent, in resultCode : int, inout data : java.lang.String, inout extras : android.os.Bundle, inout ordered : boolean, inout sticky : boolean, in sendingUser : int, in processState : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((receiver!=null))?(receiver.asBinder()):(null)));
if ((intent!=null)) {
_data.writeInt(1);
intent.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(resultCode);
_data.writeString(data);
if ((extras!=null)) {
_data.writeInt(1);
extras.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((ordered)?(1):(0)));
_data.writeInt(((sticky)?(1):(0)));
_data.writeInt(sendingUser);
_data.writeInt(processState);
mRemote.transact(Stub.TRANSACTION_scheduleRegisteredReceiver, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969477.java!!!	scheduleLowMemory() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_scheduleLowMemory, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969605.java!!!	scheduleActivityConfigurationChanged(inout token : android.os.IBinder, inout overrideConfig : android.content.res.Configuration) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
if ((overrideConfig!=null)) {
_data.writeInt(1);
overrideConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleActivityConfigurationChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969733.java!!!	scheduleActivityMovedToDisplay(inout token : android.os.IBinder, in displayId : int, inout overrideConfig : android.content.res.Configuration) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(displayId);
if ((overrideConfig!=null)) {
_data.writeInt(1);
overrideConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleActivityMovedToDisplay, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969861.java!!!	scheduleRelaunchActivity(inout token : android.os.IBinder, inout pendingResults : java.util.List<android.app.ResultInfo>, inout pendingNewIntents : java.util.List<com.android.internal.content.ReferrerIntent>, in configChanges : int, inout notResumed : boolean, inout config : android.content.res.Configuration, inout overrideConfig : android.content.res.Configuration, inout preserveWindow : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeTypedList(pendingResults);
_data.writeTypedList(pendingNewIntents);
_data.writeInt(configChanges);
_data.writeInt(((notResumed)?(1):(0)));
if ((config!=null)) {
_data.writeInt(1);
config.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((overrideConfig!=null)) {
_data.writeInt(1);
overrideConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((preserveWindow)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_scheduleRelaunchActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12969989.java!!!	scheduleSleeping(inout token : android.os.IBinder, inout sleeping : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((sleeping)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_scheduleSleeping, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970117.java!!!	profilerControl(inout start : boolean, inout profilerInfo : android.app.ProfilerInfo, in profileType : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((start)?(1):(0)));
if ((profilerInfo!=null)) {
_data.writeInt(1);
profilerInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(profileType);
mRemote.transact(Stub.TRANSACTION_profilerControl, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970245.java!!!	setSchedulingGroup(in group : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(group);
mRemote.transact(Stub.TRANSACTION_setSchedulingGroup, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970373.java!!!	scheduleCreateBackupAgent(inout app : android.content.pm.ApplicationInfo, inout compatInfo : android.content.res.CompatibilityInfo, in backupMode : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((app!=null)) {
_data.writeInt(1);
app.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((compatInfo!=null)) {
_data.writeInt(1);
compatInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(backupMode);
mRemote.transact(Stub.TRANSACTION_scheduleCreateBackupAgent, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970501.java!!!	scheduleDestroyBackupAgent(inout app : android.content.pm.ApplicationInfo, inout compatInfo : android.content.res.CompatibilityInfo) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((app!=null)) {
_data.writeInt(1);
app.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((compatInfo!=null)) {
_data.writeInt(1);
compatInfo.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleDestroyBackupAgent, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970629.java!!!	scheduleOnNewActivityOptions(inout token : android.os.IBinder, inout options : android.os.Bundle) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
if ((options!=null)) {
_data.writeInt(1);
options.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleOnNewActivityOptions, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970757.java!!!	scheduleSuicide() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_scheduleSuicide, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12970885.java!!!	dispatchPackageBroadcast(in cmd : int, inout packages : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(cmd);
_data.writeStringArray(packages);
mRemote.transact(Stub.TRANSACTION_dispatchPackageBroadcast, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971013.java!!!	scheduleCrash(inout msg : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(msg);
mRemote.transact(Stub.TRANSACTION_scheduleCrash, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971141.java!!!	dumpHeap(inout managed : boolean, inout path : java.lang.String, inout fd : android.os.ParcelFileDescriptor) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(((managed)?(1):(0)));
_data.writeString(path);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_dumpHeap, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971269.java!!!	dumpActivity(inout fd : android.os.ParcelFileDescriptor, inout servicetoken : android.os.IBinder, inout prefix : java.lang.String, inout args : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder(servicetoken);
_data.writeString(prefix);
_data.writeStringArray(args);
mRemote.transact(Stub.TRANSACTION_dumpActivity, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971397.java!!!	clearDnsCache() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_clearDnsCache, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971525.java!!!	setHttpProxy(inout proxy : java.lang.String, inout port : java.lang.String, inout exclList : java.lang.String, inout pacFileUrl : android.net.Uri) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(proxy);
_data.writeString(port);
_data.writeString(exclList);
if ((pacFileUrl!=null)) {
_data.writeInt(1);
pacFileUrl.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setHttpProxy, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971653.java!!!	setCoreSettings(inout coreSettings : android.os.Bundle) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((coreSettings!=null)) {
_data.writeInt(1);
coreSettings.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setCoreSettings, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971781.java!!!	updatePackageCompatibilityInfo(inout pkg : java.lang.String, inout info : android.content.res.CompatibilityInfo) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(pkg);
if ((info!=null)) {
_data.writeInt(1);
info.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_updatePackageCompatibilityInfo, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12971909.java!!!	scheduleTrimMemory(in level : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(level);
mRemote.transact(Stub.TRANSACTION_scheduleTrimMemory, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972037.java!!!	dumpMemInfo(inout fd : android.os.ParcelFileDescriptor, inout mem : android.os.Debug.MemoryInfo, inout checkin : boolean, inout dumpInfo : boolean, inout dumpDalvik : boolean, inout dumpSummaryOnly : boolean, inout dumpUnreachable : boolean, inout args : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((mem!=null)) {
_data.writeInt(1);
mem.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((checkin)?(1):(0)));
_data.writeInt(((dumpInfo)?(1):(0)));
_data.writeInt(((dumpDalvik)?(1):(0)));
_data.writeInt(((dumpSummaryOnly)?(1):(0)));
_data.writeInt(((dumpUnreachable)?(1):(0)));
_data.writeStringArray(args);
mRemote.transact(Stub.TRANSACTION_dumpMemInfo, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972165.java!!!	dumpGfxInfo(inout fd : android.os.ParcelFileDescriptor, inout args : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStringArray(args);
mRemote.transact(Stub.TRANSACTION_dumpGfxInfo, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972293.java!!!	dumpProvider(inout fd : android.os.ParcelFileDescriptor, inout servicetoken : android.os.IBinder, inout args : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder(servicetoken);
_data.writeStringArray(args);
mRemote.transact(Stub.TRANSACTION_dumpProvider, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972421.java!!!	dumpDbInfo(inout fd : android.os.ParcelFileDescriptor, inout args : java.lang.String [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStringArray(args);
mRemote.transact(Stub.TRANSACTION_dumpDbInfo, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972549.java!!!	unstableProviderDied(inout provider : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(provider);
mRemote.transact(Stub.TRANSACTION_unstableProviderDied, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972677.java!!!	requestAssistContextExtras(inout activityToken : android.os.IBinder, inout requestToken : android.os.IBinder, in requestType : int, in sessionId : int, in flags : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(activityToken);
_data.writeStrongBinder(requestToken);
_data.writeInt(requestType);
_data.writeInt(sessionId);
_data.writeInt(flags);
mRemote.transact(Stub.TRANSACTION_requestAssistContextExtras, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972805.java!!!	scheduleTranslucentConversionComplete(inout token : android.os.IBinder, inout timeout : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((timeout)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_scheduleTranslucentConversionComplete, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12972933.java!!!	setProcessState(in state : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(state);
mRemote.transact(Stub.TRANSACTION_setProcessState, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973061.java!!!	scheduleInstallProvider(inout provider : android.content.pm.ProviderInfo) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((provider!=null)) {
_data.writeInt(1);
provider.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleInstallProvider, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973189.java!!!	updateTimePrefs(in timeFormatPreference : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(timeFormatPreference);
mRemote.transact(Stub.TRANSACTION_updateTimePrefs, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973317.java!!!	scheduleCancelVisibleBehind(inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_scheduleCancelVisibleBehind, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973445.java!!!	scheduleBackgroundVisibleBehindChanged(inout token : android.os.IBinder, inout enabled : boolean) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((enabled)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_scheduleBackgroundVisibleBehindChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973573.java!!!	scheduleEnterAnimationComplete(inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_scheduleEnterAnimationComplete, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973701.java!!!	notifyCleartextNetwork(inout firstPacket : byte [[]]) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeByteArray(firstPacket);
mRemote.transact(Stub.TRANSACTION_notifyCleartextNetwork, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973829.java!!!	startBinderTracking() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_startBinderTracking, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12973957.java!!!	stopBinderTrackingAndDump(inout fd : android.os.ParcelFileDescriptor) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fd!=null)) {
_data.writeInt(1);
fd.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_stopBinderTrackingAndDump, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974085.java!!!	scheduleMultiWindowModeChanged(inout token : android.os.IBinder, inout isInMultiWindowMode : boolean, inout newConfig : android.content.res.Configuration) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((isInMultiWindowMode)?(1):(0)));
if ((newConfig!=null)) {
_data.writeInt(1);
newConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleMultiWindowModeChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974213.java!!!	schedulePictureInPictureModeChanged(inout token : android.os.IBinder, inout isInPictureInPictureMode : boolean, inout newConfig : android.content.res.Configuration) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((isInPictureInPictureMode)?(1):(0)));
if ((newConfig!=null)) {
_data.writeInt(1);
newConfig.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_schedulePictureInPictureModeChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974341.java!!!	scheduleLocalVoiceInteractionStarted(inout token : android.os.IBinder, inout voiceInteractor : IVoiceInteractor) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeStrongBinder((((voiceInteractor!=null))?(voiceInteractor.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_scheduleLocalVoiceInteractionStarted, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974469.java!!!	handleTrustStorageUpdate() : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_handleTrustStorageUpdate, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974597.java!!!	attachAgent(inout path : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(path);
mRemote.transact(Stub.TRANSACTION_attachAgent, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974725.java!!!	scheduleApplicationInfoChanged(inout ai : android.content.pm.ApplicationInfo) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((ai!=null)) {
_data.writeInt(1);
ai.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_scheduleApplicationInfoChanged, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
!!!12974853.java!!!	setNetworkBlockSeq(in procStateSeq : long) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeLong(procStateSeq);
mRemote.transact(Stub.TRANSACTION_setNetworkBlockSeq, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
