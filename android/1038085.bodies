class DropBoxManager
!!!7449861.java!!!	DropBoxManager(inout context : Context, inout service : IDropBoxManagerService)
        mContext = context;
        mService = service;
!!!7449989.java!!!	DropBoxManager()
        mContext = null;
        mService = null;
!!!7450117.java!!!	addText(in tag : String, in data : String) : void
        try {
            mService.add(new Entry(tag, 0, data));
        } catch (RemoteException e) {
            if (e instanceof TransactionTooLargeException
                    && mContext.getApplicationInfo().targetSdkVersion < Build.VERSION_CODES.N) {
                Log.e(TAG, "App sent too much data, so it was ignored", e);
                return;
            }
            throw e.rethrowFromSystemServer();
        }
!!!7450245.java!!!	addData(in tag : String, inout data : byte [[]], in flags : int) : void
        if (data == null) throw new NullPointerException("data == null");
        try {
            mService.add(new Entry(tag, 0, data, flags));
        } catch (RemoteException e) {
            if (e instanceof TransactionTooLargeException
                    && mContext.getApplicationInfo().targetSdkVersion < Build.VERSION_CODES.N) {
                Log.e(TAG, "App sent too much data, so it was ignored", e);
                return;
            }
            throw e.rethrowFromSystemServer();
        }
!!!7450373.java!!!	addFile(in tag : String, inout file : File, in flags : int) : void
        if (file == null) throw new NullPointerException("file == null");
        Entry entry = new Entry(tag, 0, file, flags);
        try {
            mService.add(entry);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        } finally {
            entry.close();
        }
!!!7450501.java!!!	isTagEnabled(in tag : String) : boolean
        try {
            return mService.isTagEnabled(tag);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
!!!7450629.java!!!	getNextEntry(in tag : String, in msec : long) : DropBoxManager::Entry
        try {
            return mService.getNextEntry(tag, msec);
        } catch (RemoteException e) {
            throw e.rethrowFromSystemServer();
        }
