class Builder
!!!7189381.java!!!	build() : NetworkRequest
            // Make a copy of mNetworkCapabilities so we don't inadvertently remove NOT_RESTRICTED
            // when later an unrestricted capability could be added to mNetworkCapabilities, in
            // which case NOT_RESTRICTED should be returned to mNetworkCapabilities, which
            // maybeMarkCapabilitiesRestricted() doesn't add back.
            final NetworkCapabilities nc = new NetworkCapabilities(mNetworkCapabilities);
            nc.maybeMarkCapabilitiesRestricted();
            return new NetworkRequest(nc, ConnectivityManager.TYPE_NONE,
                    ConnectivityManager.REQUEST_ID_UNSET, Type.NONE);
!!!7189509.java!!!	addCapability(in capability : int) : NetworkRequest::Builder
            mNetworkCapabilities.addCapability(capability);
            return this;
!!!7189637.java!!!	removeCapability(in capability : int) : NetworkRequest::Builder
            mNetworkCapabilities.removeCapability(capability);
            return this;
!!!7189765.java!!!	setCapabilities(inout nc : NetworkCapabilities) : NetworkRequest::Builder
            mNetworkCapabilities.clearAll();
            mNetworkCapabilities.combineCapabilities(nc);
            return this;
!!!7189893.java!!!	clearCapabilities() : NetworkRequest::Builder
            mNetworkCapabilities.clearAll();
            return this;
!!!7190021.java!!!	addTransportType(in transportType : int) : NetworkRequest::Builder
            mNetworkCapabilities.addTransportType(transportType);
            return this;
!!!7190149.java!!!	removeTransportType(in transportType : int) : NetworkRequest::Builder
            mNetworkCapabilities.removeTransportType(transportType);
            return this;
!!!7190277.java!!!	setLinkUpstreamBandwidthKbps(in upKbps : int) : NetworkRequest::Builder
            mNetworkCapabilities.setLinkUpstreamBandwidthKbps(upKbps);
            return this;
!!!7190405.java!!!	setLinkDownstreamBandwidthKbps(in downKbps : int) : NetworkRequest::Builder
            mNetworkCapabilities.setLinkDownstreamBandwidthKbps(downKbps);
            return this;
!!!7190533.java!!!	setNetworkSpecifier(in networkSpecifier : String) : NetworkRequest::Builder
            /*
             * A StringNetworkSpecifier does not accept null or empty ("") strings. When network
             * specifiers were strings a null string and an empty string were considered equivalent.
             * Hence no meaning is attached to a null or empty ("") string.
             */
            return setNetworkSpecifier(TextUtils.isEmpty(networkSpecifier) ? null
                    : new StringNetworkSpecifier(networkSpecifier));
!!!7190661.java!!!	setNetworkSpecifier(inout networkSpecifier : NetworkSpecifier) : NetworkRequest::Builder
            MatchAllNetworkSpecifier.checkNotMatchAllNetworkSpecifier(networkSpecifier);
            mNetworkCapabilities.setNetworkSpecifier(networkSpecifier);
            return this;
!!!7190789.java!!!	setSignalStrength(in signalStrength : int) : NetworkRequest::Builder
            mNetworkCapabilities.setSignalStrength(signalStrength);
            return this;
